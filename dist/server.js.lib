[
  {
    "path": "node_modules/ulla-ecs/dist/src/index.js",
    "content": "!function(e,t){for(var n in t)e[n]=t[n]}(this,function(e){var t={};function n(s){if(t[s])return t[s].exports;var o=t[s]={i:s,l:!1,exports:{}};return e[s].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(s,o,function(t){return e[t]}.bind(null,o));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=8)}([function(e,t,n){\"use strict\";(function(e){Object.defineProperty(t,\"__esModule\",{value:!0});let n=0;t.log=function(...t){void 0!==e._log?e._log(...t):console.log(\"DEBUG:\",...t)},t.error=function(t,n){void 0!==e._error?e._error(t,n):console.error(\"ERROR:\",t,n)},t.newId=function(e){if(n++,0===e.length)throw new Error(\"newId(type: string): type cannot be empty\");return e+n.toString(36)},t.uuid=function(){return\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g,(function(e){let t=16*Math.random()|0;return(\"x\"===e?t:3&t|8).toString(16)}))},t.buildArray=function(e,t){const n=[];for(let s=0;s<e;++s)n.push(t());return n}}).call(this,n(5))},function(e,t,n){\"use strict\";var s=this&&this.__decorate||function(e,t,n,s){var o,i=arguments.length,r=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,n):s;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,s);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(r=(i<3?o(r):i>3?o(t,n,r):o(t,n))||r);return i>3&&r&&Object.defineProperty(t,n,r),r};Object.defineProperty(t,\"__esModule\",{value:!0});const o=n(0),i=n(2);let r=class{constructor(e,t,n){this.componentId=e,this.componentName=t,this.classId=n}};r=s([i.EventConstructor()],r),t.DisposableComponentCreated=r;let a=class{constructor(e){this.componentId=e}};a=s([i.EventConstructor()],a),t.DisposableComponentRemoved=a;let c=class{constructor(e,t){this.componentId=e,this.component=t}};function l(e,t){return function(n){if(n.isComponent)throw new TypeError(`You cannot extend a component. Trying to extend ${n.originalClassName} with: ${e}`);if(\"number\"!=typeof t||isNaN(t))throw new Error(`classId: ${t} is an invalid integer`);const s=n,i=function(){if(!l.engine)throw new Error(\"You need to set a DisposableComponent.engine before creating disposable components\");const n=Array.prototype.slice.call(arguments),i=new s(...n),r=o.newId(\"C\");return Object.defineProperty(i,\"__name__symbol_\",{enumerable:!1,writable:!1,configurable:!1,value:e}),Object.defineProperty(i,\"__component__id_\",{enumerable:!1,writable:!1,configurable:!1,value:r}),void 0!==t&&Object.defineProperty(i,\"__classId__symbol_\",{enumerable:!1,writable:!1,configurable:!1,value:t}),l.engine&&l.engine.registerComponent(i),i};return void 0!==t&&(i.__classId__symbol_=t),i.__name__symbol_=e,i.isComponent=!0,i.isDisposableComponent=!0,i.originalClassName=e,(i.prototype=n.prototype).constructor=n,i}}function u(e){if(!e)throw new TypeError(e+\" is not a component.\");if(e.__component__id_)return e.__component__id_;throw new TypeError(e+\" is not a registered disposable component.\")}c=s([i.EventConstructor()],c),t.DisposableComponentUpdated=c,t.Component=function(e,t){return function(n){if(n.isComponent)throw new TypeError(`You cannot extend a component. Trying to extend ${n.originalClassName} with: ${e}`);const s=n,o=function(){const n=Array.prototype.slice.call(arguments),o=new s(...n);return Object.defineProperty(o,\"__name__symbol_\",{enumerable:!1,writable:!1,configurable:!1,value:e}),void 0!==t&&Object.defineProperty(o,\"__classId__symbol_\",{enumerable:!1,writable:!1,configurable:!1,value:t}),o};return void 0!==t&&(o.__classId__symbol_=t),o.__name__symbol_=e,o.isComponent=!0,o.originalClassName=e,(o.prototype=n.prototype).constructor=n,o}},t.DisposableComponent=l,function(e){e.engine=null}(l=t.DisposableComponent||(t.DisposableComponent={})),t.getComponentName=function(e){if(!e)throw new TypeError(e+\" is not a component.\");if(e.__name__symbol_)return e.__name__symbol_;throw new TypeError(e+\" is not a registered component.\")},t.getComponentClassId=function(e){if(!e)throw new TypeError(e+\" is not a component.\");if(e.__classId__symbol_)return e.__classId__symbol_;if(!e.__name__symbol_)throw new TypeError(e+\" is not a registered component.\");return null},t.getComponentId=u;t.ObservableComponent=class{constructor(){this.dirty=!0,this.data={},this.subscriptions=[]}static component(e,t){const n=t+\"_\"+Math.random();e[n]=void 0,Object.defineProperty(e,n,{...Object.getOwnPropertyDescriptor(e,n),enumerable:!1}),Object.defineProperty(e,t.toString(),{get:function(){return this[n]},set:function(e){const s=this[n];if(this.data[t]=e?u(e):null,this[n]=e,e!==s){this.dirty=!0;for(let n=0;n<this.subscriptions.length;n++)this.subscriptions[n](t,e,s)}},enumerable:!0})}static field(e,t){Object.defineProperty(e,t.toString(),{get:function(){return this.data[t]},set:function(e){const n=this.data[t];if(this.data[t]=e,e!==n){this.dirty=!0;for(let s=0;s<this.subscriptions.length;s++)this.subscriptions[s](t,e,n)}},enumerable:!0})}static readonly(e,t){Object.defineProperty(e,t.toString(),{get:function(){if(!(t in this.data))throw new Error(`The field ${t} is uninitialized`);return this.data[t]},set:function(e){if(t in this.data)throw new Error(`The field ${t} is readonly`);this.data[t]=e,this.dirty=!0},enumerable:!0,configurable:!1})}onChange(e){return this.subscriptions.push(e),this}toJSON(){return this.data}},t.isDisposableComponent=function(e){return\"__component__id_\"in e}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const s=n(0),o=[];function i(e){if(!(\"__event_name__\"in e)||\"string\"!=typeof e.__event_name__)throw new Error(\"The EventConstructor is not registered\");return e.__event_name__}t.EventManager=class{constructor(){this.listeners={}}addListener(e,t,n){if(!e||\"function\"!=typeof e)throw new Error(\"Invalid EventConstructor\");const s=i(e);let o=this.listeners[s];o||(o=this.listeners[s]=[]);for(let e=0;e<o.length;e++){if(o[e].listener===t)throw new Error(\"The provided listener is already registered\")}return o.push({listener:t,fn:n}),this}removeListener(e,t){if(!t||\"function\"!=typeof t)throw new Error(\"Invalid EventConstructor\");const n=i(t);let s=this.listeners[n];if(!s)return!1;for(let t=0;t<s.length;t++){if(s[t].listener===e)return s.splice(t,1),!0}return!1}fireEvent(e){const t=i(e.constructor);let n=this.listeners[t];if(n)for(let t=0;t<n.length;t++)try{const s=n[t];s.fn.call(s.listener,e)}catch(e){s.error(e)}return this}},t.EventConstructor=function(){const e=s.newId(\"EV\");if(-1!==o.indexOf(e))throw new Error(`The event name ${e} is already taken`);return o.push(e),t=>(t.__event_name__=e,t)}},function(e,t,n){\"use strict\";var s=this&&this.__decorate||function(e,t,n,s){var o,i=arguments.length,r=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,n):s;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,s);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(r=(i<3?o(r):i>3?o(t,n,r):o(t,n))||r);return i>3&&r&&Object.defineProperty(t,n,r),r};Object.defineProperty(t,\"__esModule\",{value:!0});const o=n(2);let i=class{constructor(e,t,n){this.entity=e,this.componentName=t,this.component=n}};i=s([o.EventConstructor()],i),t.ComponentRemoved=i;let r=class{constructor(e,t,n){this.entity=e,this.componentName=t,this.classId=n}};r=s([o.EventConstructor()],r),t.ComponentAdded=r;let a=class{constructor(e,t){this.entity=e,this.parent=t}};a=s([o.EventConstructor()],a),t.ParentChanged=a},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const s=n(3),o=n(1),i=n(2),r=n(9),a=n(0);t.Engine=class{constructor(e){this.eventManager=new i.EventManager,this.systems=[],this.entityLists={},this.addedSystems=[],this._entities={},this._disposableComponents={},this._componentGroups={},this.simpleSystems=[],this.eventManager.addListener(s.ComponentAdded,this,this.componentAddedHandler),this.eventManager.addListener(s.ComponentRemoved,this,this.componentRemovedHandler),this.rootEntity=e}get entities(){return this._entities}get disposableComponents(){return this._disposableComponents}addEntity(e){const t=e.getParent();if(e.isAddedToEngine())return e;e.eventManager=this.eventManager,e.engine=this,this._entities[e.uuid]=e,this.checkRequirementsAndAdd(e),t?t.isAddedToEngine()||t===this.rootEntity||a.log(\"Engine: warning, added an entity with a parent not present in the engine. Parent id: \"+t.uuid):e.setParent(this.rootEntity),e.alive=!0;for(let t in e.children){const n=e.children[t];n&&(n.isAddedToEngine()||this.addEntity(n))}return e}removeEntity(e){const t=e.uuid;if(e.isAddedToEngine()){for(let n in e.components){const s=this._componentGroups[n];if(s)for(let t in s)s[t].removeEntity(e);delete this.entityLists[n][t]}for(let t=0;t<this.simpleSystems.length;t++){const n=this.simpleSystems[t];n.onRemoveEntity&&n.onRemoveEntity(e)}for(let t in e.children){const n=e.children[t];n&&this.removeEntity(n)}return e.alive=!1,e.eventManager=null,delete this._entities[t],!0}a.log(\"Engine: Trying to remove non existent entity from engine.\"),e.isAddedToEngine()?a.log(\"Engine: Entity id: \"+t):a.log(`Engine: Entity \"${e.uuid}\" has not been added to any engine yet.`),a.log(\"Engine: Entity's components:\");for(let t in e.components)a.log(t);return!1}addSystem(e,t=0){if(-1!==this.addedSystems.indexOf(e))return a.log(\"Engine: Trying to add a system that is already added. Aborting\"),e;if(this.systems.length>0)for(let n=0;n<this.systems.length;n++){const s=this.systems[n],o=n===this.systems.length-1;if(s.priority>t){this.addedSystems.push(e),this.systems.splice(n,0,{system:e,priority:t});break}if(o){this.addedSystems.push(e),this.systems.splice(n+1,0,{system:e,priority:t});break}}else this.addedSystems.push(e),this.systems.splice(1,0,{system:e,priority:t});return this.registerSystem(e),e}removeSystem(e){const t=this.addedSystems.indexOf(e);if(-1!==t){e.active=!1,e.deactivate&&e.deactivate(),this.addedSystems.splice(t,1);for(let t=0;t<this.systems.length;t++){this.systems[t].system===e&&this.systems.splice(t,1)}return!0}return!1}update(e){for(let t in this.systems){const n=this.systems[t].system;if(n.active&&n.update)try{n.update(e)}catch(e){a.error(e)}}return this}getEntitiesWithComponent(e){const t=\"string\"==typeof e?e:o.getComponentName(e);return t in this.entityLists?this.entityLists[t]:this.entityLists[t]={}}registerComponent(e){const t=o.getComponentId(e),n=o.getComponentName(e),s=o.getComponentClassId(e);this._disposableComponents[t]=e,null!==s&&(this.eventManager.fireEvent(new o.DisposableComponentCreated(t,n,s)),this.eventManager.fireEvent(new o.DisposableComponentUpdated(t,e)))}disposeComponent(e){const t=o.getComponentId(e);return delete this._disposableComponents[t]&&(this.eventManager.fireEvent(new o.DisposableComponentRemoved(t)),e.onDispose&&e.onDispose(),!0)}updateComponent(e){this.eventManager.fireEvent(new o.DisposableComponentUpdated(o.getComponentId(e),e))}getComponentGroup(e,...t){const n=\"object\"==typeof e?new r.ComponentGroup(e,...t):new r.ComponentGroup({},e,...t);n.active=!0;const s=n.requiresNames;for(let e=0;e<s.length;e++){const t=s[e];let o=this._componentGroups[t];o||(this._componentGroups[t]=o=[]),-1===o.indexOf(n)&&o.push(n)}for(let e in this._entities)this.checkRequirements(this._entities[e],n);return n}removeComponentGroup(e){if(e.active){e.active=!1;const t=e.requiresNames;for(let n=0;n<t.length;n++){const s=t[n];let o=this._componentGroups[s];if(o){const t=o.indexOf(e);-1!==t&&o.splice(t,1)}}return!0}return!1}registerSystem(e){e.active=!0,e.activate&&e.activate(this),this.simpleSystems.push(e)}checkRequirementsAndAdd(e){if(e.isAddedToEngine()){for(let t in e.components){t in this.entityLists||(this.entityLists[t]={}),this.entityLists[t][e.uuid]=e;const n=this._componentGroups[t];if(n)for(let t in n)this.checkRequirements(e,n[t])}for(let t=0;t<this.simpleSystems.length;t++){const n=this.simpleSystems[t];n.onAddEntity&&n.onAddEntity(e)}}}checkRequirements(e,t){t.meetsRequirements(e)?t.hasEntity(e)||t.addEntity(e):t.hasEntity(e)&&t.removeEntity(e)}componentAddedHandler(e){const{entity:t,componentName:n}=e;if(!t.isAddedToEngine())return;this.entityLists[n]?this.entityLists[n][t.uuid]=t:this.entityLists[n]={[t.uuid]:t};const s=this._componentGroups[n];if(s)for(let e in s)this.checkRequirements(t,s[e])}componentRemovedHandler(e){const{entity:t,componentName:n}=e;if(!t.isAddedToEngine())return;delete this.entityLists[n][t.uuid];const s=this._componentGroups[n];if(s)for(let e in s)this.checkRequirements(t,s[e])}}},function(e,t){var n;n=function(){return this}();try{n=n||new Function(\"return this\")()}catch(e){\"object\"==typeof window&&(n=window)}e.exports=n},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const s=n(1),o=n(3),i=n(0);t.Entity=class{constructor(e){this.name=e,this.children={},this.eventManager=null,this.alive=!1,this.uuid=i.newId(\"E\"),this.components={},this.engine=null,this._parent=null}addComponentOrReplace(e){if(\"function\"==typeof e)throw new Error(\"You passed a function or class as a component, an instance of component is expected\");if(\"object\"!=typeof e)throw new Error(`You passed a ${typeof e}, an instance of component is expected`);const t=s.getComponentName(e);if(this.components[t]){if(this.components[t]===e)return e;this.removeComponent(this.components[t],!1)}return this.addComponent(e)}hasComponent(e){const t=typeof e;if(\"string\"!==t&&\"object\"!==t&&\"function\"!==t)throw new Error(\"Entity#has(component): component is not a class, name or instance\");if(null==e)return!1;const n=\"string\"===t?e:s.getComponentName(e),o=this.components[n];return!!o&&(\"object\"===t?o===e:\"function\"!==t||o instanceof e)}getComponent(e){const t=typeof e;if(\"string\"!==t&&\"function\"!==t)throw new Error(\"Entity#get(component): component is not a class or name\");const n=\"string\"===t?e:s.getComponentName(e),o=this.components[n];if(!o)throw new Error(`Can not get component \"${n}\" from entity \"${this.identifier}\"`);if(\"function\"===t){if(o instanceof e)return o;throw new Error(`Can not get component \"${n}\" from entity \"${this.identifier}\" (by instance)`)}return o}getComponentOrNull(e){const t=typeof e;if(\"string\"!==t&&\"function\"!==t)throw new Error(\"Entity#getOrNull(component): component is not a class or name\");const n=\"string\"===t?e:s.getComponentName(e),o=this.components[n];return o?\"function\"===t?o instanceof e?o:null:o:null}getComponentOrCreate(e){if(\"function\"!=typeof e)throw new Error(\"Entity#getOrCreate(component): component is not a class\");let t=this.getComponentOrNull(e);return t||(t=new e,s.getComponentName(t),this.addComponentOrReplace(t)),t}addComponent(e){if(\"object\"!=typeof e)throw new Error(\"Entity#add(component): You passed a function or class as a component, an instance of component is expected\");const t=s.getComponentName(e),n=s.getComponentClassId(e);if(this.components[t])throw new Error(`A component of type \"${t}\" is already present in entity \"${this.identifier}\"`);this.components[t]=e,this.eventManager&&this.eventManager.fireEvent(new o.ComponentAdded(this,t,n));const i=e;return\"function\"==typeof i.addedToEntity&&i.addedToEntity(this),e}removeComponent(e,t=!0){const n=typeof e;if(\"string\"!==n&&\"function\"!==n&&\"object\"!==n)throw new Error(\"Entity#remove(component): component is not a class, class or name\");const r=\"string\"===n?e:s.getComponentName(e),a=this.components[r];return!!a&&(\"function\"===n?a instanceof e?(delete this.components[r],a&&(t&&this.eventManager&&this.eventManager.fireEvent(new o.ComponentRemoved(this,r,a)),\"function\"==typeof a.removedFromEntity&&a.removedFromEntity(this)),!!a):(i.log(`Entity Warning: Trying to remove wrong (by constructor) component \"${r}\" from entity \"${this.identifier}\"`),!1):(delete this.components[r],a&&(t&&this.eventManager&&this.eventManager.fireEvent(new o.ComponentRemoved(this,r,a)),\"function\"==typeof a.removedFromEntity&&a.removedFromEntity(this)),!!a))}isAddedToEngine(){return!(!this.engine||!(this.uuid in this.engine.entities)&&this.engine.rootEntity!==this)}setParent(e){let t=!e&&this.engine?this.engine.rootEntity:e,n=this.getParent();if(t===this)throw new Error(`Failed to set parent for entity \"${this.identifier}\": An entity can't set itself as a its own parent`);if(t===n)return this;const s=this.getCircularAncestor(t);if(s)throw new Error(`Failed to set parent for entity \"${this.identifier}\": Circular parent references are not allowed (See entity \"${s}\")`);return n&&delete n.children[this.uuid],null!==t&&\"0\"!==t.uuid&&(!t.isAddedToEngine()&&this.isAddedToEngine()&&this.engine.removeEntity(this),t.isAddedToEngine()&&!this.isAddedToEngine()&&t.engine.addEntity(this)),this._parent=t||null,this.registerAsChild(),this.eventManager&&this.engine&&this.eventManager.fireEvent(new o.ParentChanged(this,t)),this}getParent(){return this._parent}get identifier(){return this.name||this.uuid}getCircularAncestor(e){const t=this.engine?this.engine.rootEntity:null;let n=e;for(;n&&n!==t;){const e=n.getParent();if(e===this)return n.uuid;n=e}return null}registerAsChild(){const e=this.getParent();this.uuid&&e&&(e.children[this.uuid]=this)}}},function(e,t,n){\"use strict\";(function(e){Object.defineProperty(t,\"__esModule\",{value:!0});const s=n(0),o=new Promise(t=>{e.onStart?e.onStart(t):t()}),i=Promise.resolve().then.bind(o);t.executeTask=function(e){const t=i(e);return t.isComplete=!1,t.then(e=>{t.isComplete=!0,t.result=e,t.didFail=!1}).catch(e=>{t.isComplete=!0,t.error=e,t.didFail=!0,s.error(\"executeTask: FAILED \"+e.toString(),e)}),t}}).call(this,n(5))},function(e,t,n){\"use strict\";function s(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,\"__esModule\",{value:!0}),s(n(4)),s(n(1)),s(n(6)),s(n(3)),s(n(7)),s(n(0)),s(n(10)),s(n(2));const o=n(4),i=new(n(6).Entity)(\"scene\");i.uuid=\"0\";const r=new o.Engine(i);t.engine=r,n(1).DisposableComponent.engine=r},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const s=n(1);t.ComponentGroup=class{constructor(e,...t){if(this.options=e,this.entities=[],this.active=!1,this._requiresNames=[],!t)throw new Error(\"ComponentGroup: Could not load the requires list\");if(!(t instanceof Array))throw new Error(\"ComponentGroup: requires list is not an Array\");Object.defineProperty(this,\"requires\",{get:function(){return t.slice()}}),Object.defineProperty(this,\"requiresNames\",{get:function(){return this._requiresNames.slice()}});for(let e=0;e<t.length;e++){const n=t[e];let o=null;if(!n)throw new Error(`ComponentGroup: the required component at location ${e} is invalid`);try{o=s.getComponentName(n)}catch(t){throw new Error(`ComponentGroup: the required component at location ${e} is not registered as a @Component. Remember to provide the class of the component, not the name`)}if(this._requiresNames.some(e=>e===o))throw new Error(`ComponentGroup: the required component list has a repeated name ${o}`);this._requiresNames.push(o)}}hasEntity(e){return!!e.isAddedToEngine()&&-1!==this.entities.indexOf(e)}addEntity(e){if(!e.isAddedToEngine())throw new TypeError(\"ComponentGroup: Cannot add a entity that is not added to the engine\");-1===this.entities.indexOf(e)&&(this.entities.push(e),this.options.onAddEntity&&this.options.onAddEntity(e))}removeEntity(e){const t=this.entities.indexOf(e);-1!==t&&(this.entities.splice(t,1),this.options.onRemoveEntity&&this.options.onRemoveEntity(e))}componentRemoved(e,t){-1!==this._requiresNames.indexOf(t)&&this.removeEntity(e)}meetsRequirements(e){for(let t=0;t<this._requiresNames.length;t++){if(!(this._requiresNames[t]in e.components))return!1}return!0}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const s=n(7);class o{constructor(e,t=!1,n,s){this.initalize(e,t,n,s)}initalize(e,t=!1,n,s){return this.mask=e,this.skipNextObservers=t,this.target=n,this.currentTarget=s,this}}t.ObserverEventState=o;class i{constructor(e,t,n=null){this.callback=e,this.mask=t,this.scope=n,this.unregisterOnNextCall=!1,this._willBeUnregistered=!1}}t.Observer=i;class r{constructor(){this._observers=null,this._observables=null}static Watch(e,t,n=-1,s=null){let o=new r;o._observers=new Array,o._observables=e;for(let i of e){let e=i.add(t,n,!1,s);e&&o._observers.push(e)}return o}dispose(){if(this._observers&&this._observables)for(let e=0;e<this._observers.length;e++)this._observables[e].remove(this._observers[e]);this._observers=null,this._observables=null}}t.MultiObserver=r;class a{constructor(e){this._observers=new Array,this._onObserverAdded=null,this._eventState=new o(0),e&&(this._onObserverAdded=e)}add(e,t=-1,n=!1,s=null,o=!1){if(!e)return null;let r=new i(e,t,s);return r.unregisterOnNextCall=o,n?this._observers.unshift(r):this._observers.push(r),this._onObserverAdded&&this._onObserverAdded(r),r}addOnce(e){return this.add(e,void 0,void 0,void 0,!0)}remove(e){if(!e)return!1;return-1!==this._observers.indexOf(e)&&(this._deferUnregister(e),!0)}removeCallback(e,t){for(let n=0;n<this._observers.length;n++)if(this._observers[n].callback===e&&(!t||t===this._observers[n].scope))return this._deferUnregister(this._observers[n]),!0;return!1}notifyObservers(e,t=-1,n,s){if(!this._observers.length)return!0;let o=this._eventState;o.mask=t,o.target=n,o.currentTarget=s,o.skipNextObservers=!1,o.lastReturnValue=e;for(let n of this._observers)if(!n._willBeUnregistered&&(n.mask&t&&(n.scope?o.lastReturnValue=n.callback.apply(n.scope,[e,o]):o.lastReturnValue=n.callback(e,o),n.unregisterOnNextCall&&this._deferUnregister(n)),o.skipNextObservers))return!1;return!0}notifyObserversWithPromise(e,t=-1,n,s){let o=Promise.resolve(e);if(!this._observers.length)return o;let i=this._eventState;return i.mask=t,i.target=n,i.currentTarget=s,i.skipNextObservers=!1,this._observers.forEach(n=>{i.skipNextObservers||n._willBeUnregistered||n.mask&t&&(o=n.scope?o.then(t=>(i.lastReturnValue=t,n.callback.apply(n.scope,[e,i]))):o.then(t=>(i.lastReturnValue=t,n.callback(e,i))),n.unregisterOnNextCall&&this._deferUnregister(n))}),o.then(()=>e)}notifyObserver(e,t,n=-1){let s=this._eventState;s.mask=n,s.skipNextObservers=!1,e.callback(t,s)}hasObservers(){return this._observers.length>0}clear(){this._observers=new Array,this._onObserverAdded=null}clone(){let e=new a;return e._observers=this._observers.slice(0),e}hasSpecificMask(e=-1){for(let t of this._observers)if(t.mask&e||t.mask===e)return!0;return!1}_deferUnregister(e){e.unregisterOnNextCall=!1,e._willBeUnregistered=!0,s.executeTask(async()=>this._remove(e))}_remove(e){if(!e)return!1;let t=this._observers.indexOf(e);return-1!==t&&(this._observers.splice(t,1),!0)}}t.Observable=a}]));"
  },
  {
    "path": "node_modules/ulla-ecs/artifacts/amd.js",
    "content": "\"use strict\";\n// A naive attempt at getting the global `this`. Don’t use this!\nconst getGlobalThis = function () {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    // Note: this might still return the wrong result!\n    if (typeof this !== \"undefined\")\n        return this;\n    throw new Error(\"Unable to locate global `this`\");\n};\nconst globalObject = getGlobalThis();\nif (!(\"global\" in globalObject)) {\n    globalObject.global = global;\n}\nvar loader;\n(function (loader) {\n    \"use strict\";\n    const MODULE_LOADING = 1;\n    const MODULE_READY = 2;\n    const settings = {\n        baseUrl: \"\",\n    };\n    let unnamedModules = 0;\n    const registeredModules = {};\n    function config(config) {\n        if (typeof config === \"object\") {\n            for (let x in config) {\n                if (config.hasOwnProperty(x)) {\n                    settings[x] = config[x];\n                }\n            }\n        }\n    }\n    loader.config = config;\n    function define(first, second, third) {\n        let moduleToLoad = null;\n        let factory = {};\n        let dependencies = null;\n        if (typeof first === \"function\") {\n            factory = first;\n        }\n        else if (typeof first === \"string\") {\n            moduleToLoad = first;\n            if (typeof second === \"function\") {\n                factory = second;\n            }\n            else if (second instanceof Array) {\n                dependencies = second;\n                factory = third;\n            }\n        }\n        dependencies = dependencies || [\"require\", \"exports\", \"module\"];\n        if (moduleToLoad === null) {\n            moduleToLoad = `unnamed-module-${unnamedModules++}`;\n        }\n        function ready(...deps) {\n            const module = registeredModules[moduleToLoad];\n            if (!module)\n                throw new Error(\"Could not access registered module \" + moduleToLoad);\n            let exports = module.exports;\n            exports =\n                typeof factory === \"function\"\n                    ? factory.apply(globalObject, deps) || exports\n                    : factory;\n            module.exports = exports;\n            moduleReady(moduleToLoad);\n        }\n        if (!registeredModules[moduleToLoad]) {\n            registeredModules[moduleToLoad] = {\n                name: moduleToLoad,\n                parent: null,\n                dclamd: MODULE_LOADING,\n                dependencies,\n                handlers: [],\n                exports: {},\n                dependants: new Set(),\n            };\n        }\n        require(dependencies || [], ready, (err) => {\n            throw err;\n        }, moduleToLoad);\n    }\n    loader.define = define;\n    function moduleReady(moduleName) {\n        const module = registeredModules[moduleName];\n        if (!module)\n            throw new Error(\"Could not access registered module \" + moduleName);\n        module.dclamd = MODULE_READY;\n        let handlers = module.handlers;\n        if (handlers && handlers.length) {\n            for (let x = 0; x < handlers.length; x++) {\n                handlers[x](registeredModules[moduleName]);\n            }\n        }\n    }\n    (function (define) {\n        define.amd = {};\n    })(define = loader.define || (loader.define = {}));\n    function require(dependencies, callback, errorCallback, parentModule) {\n        let dependenciesResults = new Array(dependencies.length).fill(null);\n        let loadedCount = 0;\n        let hasLoaded = false;\n        if (typeof dependencies === \"string\") {\n            if (registeredModules[dependencies]) {\n                if (registeredModules[dependencies].dclamd === MODULE_LOADING) {\n                    throw new Error(`Trying to load ${dependencies} from ${parentModule}. The first module is still loading.`);\n                }\n                return registeredModules[dependencies];\n            }\n            throw new Error(dependencies +\n                \" has not been defined. Please include it as a dependency in \" +\n                parentModule +\n                \"'s define()\");\n        }\n        const depsLength = dependencies.length;\n        for (let index = 0; index < depsLength; index++) {\n            switch (dependencies[index]) {\n                case \"require\":\n                    let _require = function (new_module, callback, errorCallback) {\n                        return require(new_module, callback, errorCallback, parentModule);\n                    };\n                    _require.toUrl = function (module) {\n                        return toUrl(module, parentModule);\n                    };\n                    dependenciesResults[index] = _require;\n                    loadedCount++;\n                    break;\n                case \"exports\":\n                    if (!registeredModules[parentModule]) {\n                        throw new Error(\"Parent module \" + parentModule + \" not registered yet\");\n                    }\n                    dependenciesResults[index] = registeredModules[parentModule].exports;\n                    loadedCount++;\n                    break;\n                case \"module\":\n                    dependenciesResults[index] = {\n                        id: parentModule,\n                        uri: toUrl(parentModule),\n                    };\n                    loadedCount++;\n                    break;\n                default:\n                    load(dependencies[index], (loadedModule) => {\n                        dependenciesResults[index] = loadedModule.exports;\n                        loadedCount++;\n                        if (loadedCount === depsLength && callback) {\n                            hasLoaded = true;\n                            callback.apply(null, dependenciesResults);\n                        }\n                    }, errorCallback, parentModule);\n            }\n        }\n        if (!hasLoaded && loadedCount === depsLength && callback) {\n            callback.apply(null, dependenciesResults);\n        }\n    }\n    loader.require = require;\n    function createMethodHandler(rpcHandle, method) {\n        return function () {\n            return callRpc(rpcHandle, method.name, [].slice.call(arguments, 0));\n        };\n    }\n    function load(moduleName, callback, errorCallback, parentModule) {\n        moduleName = parentModule ? toUrl(moduleName, parentModule) : moduleName;\n        if (registeredModules[moduleName]) {\n            registeredModules[moduleName].dependants.add(parentModule);\n            if (registeredModules[moduleName].dclamd === MODULE_LOADING) {\n                callback && registeredModules[moduleName].handlers.push(callback);\n            }\n            else {\n                callback && callback(registeredModules[moduleName]);\n            }\n            return;\n        }\n        else {\n            registeredModules[moduleName] = {\n                name: moduleName,\n                parent: parentModule,\n                dclamd: MODULE_LOADING,\n                handlers: [callback],\n                dependencies: [],\n                dependants: new Set([parentModule]),\n                exports: {},\n            };\n        }\n        if (moduleName.indexOf(\"@\") === 0) {\n            let exports = registeredModules[moduleName].exports;\n            if (typeof loadModule === \"function\") {\n                loadModule(moduleName, exports)\n                    .then((descriptor) => {\n                    for (let i in descriptor.methods) {\n                        const method = descriptor.methods[i];\n                        exports[method.name] = createMethodHandler(descriptor.rpcHandle, method);\n                    }\n                    moduleReady(moduleName);\n                })\n                    .catch((e) => {\n                    errorCallback(e);\n                });\n            }\n            else {\n                throw new Error(\"Asynchronous modules will not work because loadModule function is not present\");\n            }\n        }\n    }\n    if (typeof onStart !== \"undefined\") {\n        onStart(() => {\n            const unknownModules = new Set();\n            const notLoadedModules = [];\n            for (let i in registeredModules) {\n                if (registeredModules[i]) {\n                    if (registeredModules[i].dclamd === MODULE_LOADING) {\n                        notLoadedModules.push(registeredModules[i]);\n                    }\n                    registeredModules[i].dependencies.forEach(($) => {\n                        if ($ == \"require\" || $ == \"exports\" || $ == \"module\")\n                            return;\n                        if (!registeredModules[$])\n                            unknownModules.add($);\n                    });\n                }\n            }\n            const errorParts = [];\n            if (unknownModules.size) {\n                errorParts.push(`\\n- Undeclared/unknown modules: ${Array.from(unknownModules)\n                    .map(($) => \"\\n  \" + $)\n                    .join(\"\")}`);\n            }\n            if (notLoadedModules.length) {\n                errorParts.push(`\\n- These modules didn't load: ${notLoadedModules\n                    .map(($) => \"\\n  \" + $.name)\n                    .join(\"\")}. Please check circular dependencies.`);\n            }\n            if (errorParts.length) {\n                throw new Error(errorParts.join(\"\\n\"));\n            }\n        });\n    }\n    function toUrl(id, context) {\n        let changed = false;\n        switch (id) {\n            case \"require\":\n            case \"exports\":\n            case \"module\":\n                return id;\n        }\n        const newContext = (context || settings.baseUrl).split(\"/\");\n        newContext.pop();\n        const idParts = id.split(\"/\");\n        let i = idParts.length;\n        while (--i) {\n            switch (id[0]) {\n                case \"..\":\n                    newContext.pop();\n                case \".\":\n                case \"\":\n                    idParts.shift();\n                    changed = true;\n            }\n        }\n        return ((newContext.length && changed ? newContext.join(\"/\") + \"/\" : \"\") +\n            idParts.join(\"/\"));\n    }\n    require.toUrl = toUrl;\n})(loader || (loader = {}));\nglobalObject.define = loader.define;\nglobalObject.dclamd = loader;\n//# sourceMappingURL=data:application/json;base64,"
  },
  {
    "path": "arduz-sdk.ts",
    "content": "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\ndefine(\"sdk/Components/Connection\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.sendMessageObservable = new Observable();\r\n    exports.onMessageObservable = new Observable();\r\n    // Add a message to this channel to kick a connection\r\n    exports.closeConnectionObservable = new Observable();\r\n    // On Connection removed, triggered after a conection is closed both from our side\r\n    // and from the network side\r\n    exports.onDisconnection = new Observable();\r\n    let Connection = class Connection {\r\n        constructor(connectionId, nick) {\r\n            this.connectionId = connectionId;\r\n            this.nick = nick;\r\n        }\r\n    };\r\n    Connection = __decorate([\r\n        Component(\"Connection\")\r\n    ], Connection);\r\n    exports.Connection = Connection;\r\n});\r\ndefine(\"sdk/Enums\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Heading;\r\n    (function (Heading) {\r\n        Heading[Heading[\"North\"] = 0] = \"North\";\r\n        Heading[Heading[\"East\"] = 1] = \"East\";\r\n        Heading[Heading[\"South\"] = 2] = \"South\";\r\n        Heading[Heading[\"West\"] = 3] = \"West\";\r\n    })(Heading = exports.Heading || (exports.Heading = {}));\r\n    var CharClass;\r\n    (function (CharClass) {\r\n        CharClass[CharClass[\"Spectator\"] = 0] = \"Spectator\";\r\n        CharClass[CharClass[\"Mage\"] = 1] = \"Mage\";\r\n        CharClass[CharClass[\"Cleric\"] = 2] = \"Cleric\";\r\n        CharClass[CharClass[\"Warrior\"] = 3] = \"Warrior\";\r\n        CharClass[CharClass[\"Assasin\"] = 4] = \"Assasin\";\r\n        CharClass[CharClass[\"Bard\"] = 5] = \"Bard\";\r\n        CharClass[CharClass[\"Druid\"] = 6] = \"Druid\";\r\n        CharClass[CharClass[\"Paladin\"] = 7] = \"Paladin\";\r\n        CharClass[CharClass[\"Hunter\"] = 8] = \"Hunter\";\r\n    })(CharClass = exports.CharClass || (exports.CharClass = {}));\r\n    var Race;\r\n    (function (Race) {\r\n        Race[Race[\"Human\"] = 1] = \"Human\";\r\n        Race[Race[\"Elf\"] = 2] = \"Elf\";\r\n        Race[Race[\"Drow\"] = 3] = \"Drow\";\r\n        Race[Race[\"Gnome\"] = 4] = \"Gnome\";\r\n        Race[Race[\"Dwarf\"] = 5] = \"Dwarf\";\r\n    })(Race = exports.Race || (exports.Race = {}));\r\n    var InventorySlots;\r\n    (function (InventorySlots) {\r\n        InventorySlots[InventorySlots[\"NONE\"] = -1] = \"NONE\";\r\n        InventorySlots[InventorySlots[\"Slot1\"] = 0] = \"Slot1\";\r\n        InventorySlots[InventorySlots[\"Slot2\"] = 1] = \"Slot2\";\r\n        InventorySlots[InventorySlots[\"Slot3\"] = 2] = \"Slot3\";\r\n        InventorySlots[InventorySlots[\"Slot4\"] = 3] = \"Slot4\";\r\n        InventorySlots[InventorySlots[\"Slot5\"] = 4] = \"Slot5\";\r\n        InventorySlots[InventorySlots[\"Slot6\"] = 5] = \"Slot6\";\r\n        InventorySlots[InventorySlots[\"Slot7\"] = 6] = \"Slot7\";\r\n        InventorySlots[InventorySlots[\"Slot8\"] = 7] = \"Slot8\";\r\n        InventorySlots[InventorySlots[\"Slot9\"] = 8] = \"Slot9\";\r\n        InventorySlots[InventorySlots[\"Slot10\"] = 9] = \"Slot10\";\r\n        InventorySlots[InventorySlots[\"Slot11\"] = 10] = \"Slot11\";\r\n        InventorySlots[InventorySlots[\"Slot12\"] = 11] = \"Slot12\";\r\n        InventorySlots[InventorySlots[\"Slot13\"] = 12] = \"Slot13\";\r\n        InventorySlots[InventorySlots[\"Slot14\"] = 13] = \"Slot14\";\r\n        InventorySlots[InventorySlots[\"Slot15\"] = 14] = \"Slot15\";\r\n        InventorySlots[InventorySlots[\"Slot16\"] = 15] = \"Slot16\";\r\n        InventorySlots[InventorySlots[\"Head\"] = 16] = \"Head\";\r\n        InventorySlots[InventorySlots[\"Armor\"] = 17] = \"Armor\";\r\n        InventorySlots[InventorySlots[\"Ring\"] = 18] = \"Ring\";\r\n        InventorySlots[InventorySlots[\"LeftHand\"] = 19] = \"LeftHand\";\r\n        InventorySlots[InventorySlots[\"RightHand\"] = 20] = \"RightHand\";\r\n        InventorySlots[InventorySlots[\"Accessory\"] = 21] = \"Accessory\";\r\n        InventorySlots[InventorySlots[\"Belt1\"] = 22] = \"Belt1\";\r\n        InventorySlots[InventorySlots[\"Belt2\"] = 23] = \"Belt2\";\r\n        // [24-28] HotBar\r\n        // [29-44] Spells\r\n    })(InventorySlots = exports.InventorySlots || (exports.InventorySlots = {}));\r\n    var SkillSlots;\r\n    (function (SkillSlots) {\r\n        SkillSlots[SkillSlots[\"NONE\"] = 0] = \"NONE\";\r\n        SkillSlots[SkillSlots[\"Spell1\"] = 29] = \"Spell1\";\r\n        SkillSlots[SkillSlots[\"Spell2\"] = 30] = \"Spell2\";\r\n        SkillSlots[SkillSlots[\"Spell3\"] = 31] = \"Spell3\";\r\n        SkillSlots[SkillSlots[\"Spell4\"] = 32] = \"Spell4\";\r\n        SkillSlots[SkillSlots[\"Spell5\"] = 33] = \"Spell5\";\r\n        SkillSlots[SkillSlots[\"Spell6\"] = 34] = \"Spell6\";\r\n        SkillSlots[SkillSlots[\"Spell7\"] = 35] = \"Spell7\";\r\n        SkillSlots[SkillSlots[\"Spell8\"] = 36] = \"Spell8\";\r\n        SkillSlots[SkillSlots[\"Spell9\"] = 37] = \"Spell9\";\r\n        SkillSlots[SkillSlots[\"Spell10\"] = 38] = \"Spell10\";\r\n        SkillSlots[SkillSlots[\"Spell11\"] = 39] = \"Spell11\";\r\n    })(SkillSlots = exports.SkillSlots || (exports.SkillSlots = {}));\r\n    var HotBarSlots;\r\n    (function (HotBarSlots) {\r\n        HotBarSlots[HotBarSlots[\"NONE\"] = 0] = \"NONE\";\r\n        HotBarSlots[HotBarSlots[\"HotBar1\"] = 24] = \"HotBar1\";\r\n        HotBarSlots[HotBarSlots[\"HotBar2\"] = 25] = \"HotBar2\";\r\n        HotBarSlots[HotBarSlots[\"HotBar3\"] = 26] = \"HotBar3\";\r\n        HotBarSlots[HotBarSlots[\"HotBar4\"] = 27] = \"HotBar4\";\r\n        HotBarSlots[HotBarSlots[\"HotBar5\"] = 28] = \"HotBar5\";\r\n    })(HotBarSlots = exports.HotBarSlots || (exports.HotBarSlots = {}));\r\n    var Gender;\r\n    (function (Gender) {\r\n        Gender[Gender[\"Male\"] = 1] = \"Male\";\r\n        Gender[Gender[\"Female\"] = 2] = \"Female\";\r\n    })(Gender = exports.Gender || (exports.Gender = {}));\r\n    var ConsoleMessages;\r\n    (function (ConsoleMessages) {\r\n        ConsoleMessages[ConsoleMessages[\"You can't use items while you are dead!\"] = 1] = \"You can't use items while you are dead!\";\r\n        ConsoleMessages[ConsoleMessages[\"You've been cured of poisoning!\"] = 2] = \"You've been cured of poisoning!\";\r\n        ConsoleMessages[ConsoleMessages[\"Restarting round\"] = 3] = \"Restarting round\";\r\n        ConsoleMessages[ConsoleMessages[\"Your class cannot use that item!\"] = 4] = \"Your class cannot use that item!\";\r\n        ConsoleMessages[ConsoleMessages[\"Your race cannot use that item!\"] = 5] = \"Your race cannot use that item!\";\r\n        ConsoleMessages[ConsoleMessages[\"To use a two handed item you must release both hands!\"] = 6] = \"To use a two handed item you must release both hands!\";\r\n        ConsoleMessages[ConsoleMessages[\"You need to equip your weapon before using it!\"] = 7] = \"You need to equip your weapon before using it!\";\r\n        ConsoleMessages[ConsoleMessages[\"There are no equipped projectile!\"] = 8] = \"There are no equipped projectile!\";\r\n        ConsoleMessages[ConsoleMessages[\"You can't attack dead players!\"] = 9] = \"You can't attack dead players!\";\r\n        ConsoleMessages[ConsoleMessages[\"You can't attack because you are dead!\"] = 10] = \"You can't attack because you are dead!\";\r\n        ConsoleMessages[ConsoleMessages[\"{{char}} damaged you by {{damage}} points\"] = 11] = \"{{char}} damaged you by {{damage}} points\";\r\n        ConsoleMessages[ConsoleMessages[\"You hitted {{char}} by {{damage}}\"] = 12] = \"You hitted {{char}} by {{damage}}\";\r\n        ConsoleMessages[ConsoleMessages[\"You start meditating\"] = 13] = \"You start meditating\";\r\n        ConsoleMessages[ConsoleMessages[\"You can't attack yourself!\"] = 14] = \"You can't attack yourself!\";\r\n        ConsoleMessages[ConsoleMessages[\"You killed {{char}}!\"] = 15] = \"You killed {{char}}!\";\r\n        ConsoleMessages[ConsoleMessages[\"You have been poisoned!\"] = 16] = \"You have been poisoned!\";\r\n        ConsoleMessages[ConsoleMessages[\"You can't use that weapon that way!\"] = 17] = \"You can't use that weapon that way!\";\r\n        ConsoleMessages[ConsoleMessages[\"You can't attack dead characters!\"] = 18] = \"You can't attack dead characters!\";\r\n        ConsoleMessages[ConsoleMessages[\"You can't use items while you are meditating!\"] = 19] = \"You can't use items while you are meditating!\";\r\n    })(ConsoleMessages = exports.ConsoleMessages || (exports.ConsoleMessages = {}));\r\n    var TargetType;\r\n    (function (TargetType) {\r\n        TargetType[TargetType[\"NONE\"] = 0] = \"NONE\";\r\n        TargetType[TargetType[\"Item\"] = 1] = \"Item\";\r\n        TargetType[TargetType[\"Char\"] = 2] = \"Char\";\r\n        TargetType[TargetType[\"Floor\"] = 3] = \"Floor\";\r\n    })(TargetType = exports.TargetType || (exports.TargetType = {}));\r\n});\r\ndefine(\"sdk/Components/Body\", [\"require\", \"exports\", \"sdk/Enums\"], function (require, exports, Enums_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.DEAD_BODY = 8;\r\n    exports.DEAD_HEAD = 500;\r\n    let Body = class Body extends ObservableComponent {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.dead = true;\r\n            this.head = exports.DEAD_HEAD;\r\n            this.body = exports.DEAD_BODY;\r\n            this.speed = 1;\r\n            this.helmet = 0;\r\n            this.leftHand = 0;\r\n            this.rightHand = 0;\r\n            this.isLeftHandWeapon = false;\r\n            this.isRightHandWeapon = false;\r\n            this.nick = \"\";\r\n            this.color = \"#ffffff\";\r\n            this.mimetism = null;\r\n            this.charClass = Enums_1.CharClass.Spectator;\r\n            this.race = Enums_1.Race.Human;\r\n            this.gender = Enums_1.Gender.Male;\r\n        }\r\n        resucitate() {\r\n            if (this.dead) {\r\n                this.dead = false;\r\n            }\r\n        }\r\n        kill() {\r\n            if (!this.dead) {\r\n                this.dead = true;\r\n                this.mimetism = null;\r\n            }\r\n        }\r\n    };\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Body.prototype, \"dead\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Body.prototype, \"head\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Body.prototype, \"body\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Body.prototype, \"speed\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Body.prototype, \"helmet\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Body.prototype, \"leftHand\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Body.prototype, \"rightHand\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Body.prototype, \"isLeftHandWeapon\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Body.prototype, \"isRightHandWeapon\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Body.prototype, \"nick\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Body.prototype, \"color\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Body.prototype, \"mimetism\", void 0);\r\n    Body = __decorate([\r\n        Component(\"Body\")\r\n    ], Body);\r\n    exports.Body = Body;\r\n});\r\ndefine(\"sdk/Declares\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var PotionType;\r\n    (function (PotionType) {\r\n        PotionType[PotionType[\"Agility\"] = 1] = \"Agility\";\r\n        PotionType[PotionType[\"Strenght\"] = 2] = \"Strenght\";\r\n        PotionType[PotionType[\"HP\"] = 3] = \"HP\";\r\n        PotionType[PotionType[\"Mana\"] = 4] = \"Mana\";\r\n        PotionType[PotionType[\"Poison\"] = 5] = \"Poison\";\r\n        PotionType[PotionType[\"Suicide\"] = 6] = \"Suicide\";\r\n    })(PotionType = exports.PotionType || (exports.PotionType = {}));\r\n    var ObjectTypes;\r\n    (function (ObjectTypes) {\r\n        ObjectTypes[ObjectTypes[\"UseOnce\"] = 1] = \"UseOnce\";\r\n        ObjectTypes[ObjectTypes[\"Weapon\"] = 2] = \"Weapon\";\r\n        ObjectTypes[ObjectTypes[\"Armor\"] = 3] = \"Armor\";\r\n        ObjectTypes[ObjectTypes[\"Tree\"] = 4] = \"Tree\";\r\n        ObjectTypes[ObjectTypes[\"Money\"] = 5] = \"Money\";\r\n        ObjectTypes[ObjectTypes[\"Doors\"] = 6] = \"Doors\";\r\n        ObjectTypes[ObjectTypes[\"Containers\"] = 7] = \"Containers\";\r\n        ObjectTypes[ObjectTypes[\"Signs\"] = 8] = \"Signs\";\r\n        ObjectTypes[ObjectTypes[\"Keys\"] = 9] = \"Keys\";\r\n        ObjectTypes[ObjectTypes[\"Forum\"] = 10] = \"Forum\";\r\n        ObjectTypes[ObjectTypes[\"Potion\"] = 11] = \"Potion\";\r\n        ObjectTypes[ObjectTypes[\"Map\"] = 12] = \"Map\";\r\n        ObjectTypes[ObjectTypes[\"FREE\"] = 13] = \"FREE\";\r\n        ObjectTypes[ObjectTypes[\"Lumber\"] = 14] = \"Lumber\";\r\n        ObjectTypes[ObjectTypes[\"Fireplace\"] = 15] = \"Fireplace\";\r\n        ObjectTypes[ObjectTypes[\"Shield\"] = 16] = \"Shield\";\r\n        ObjectTypes[ObjectTypes[\"Helmet\"] = 17] = \"Helmet\";\r\n        ObjectTypes[ObjectTypes[\"Ring\"] = 18] = \"Ring\";\r\n        ObjectTypes[ObjectTypes[\"Teleport\"] = 19] = \"Teleport\";\r\n        ObjectTypes[ObjectTypes[\"Decoration\"] = 20] = \"Decoration\";\r\n        ObjectTypes[ObjectTypes[\"Decoration2\"] = 21] = \"Decoration2\";\r\n        ObjectTypes[ObjectTypes[\"MineralDeposit\"] = 22] = \"MineralDeposit\";\r\n        ObjectTypes[ObjectTypes[\"Mineral\"] = 23] = \"Mineral\";\r\n        ObjectTypes[ObjectTypes[\"Scrolls\"] = 24] = \"Scrolls\";\r\n        ObjectTypes[ObjectTypes[\"Instrument\"] = 26] = \"Instrument\";\r\n        ObjectTypes[ObjectTypes[\"Anvil\"] = 27] = \"Anvil\";\r\n        ObjectTypes[ObjectTypes[\"Furnace\"] = 28] = \"Furnace\";\r\n        ObjectTypes[ObjectTypes[\"Lingot\"] = 29] = \"Lingot\";\r\n        ObjectTypes[ObjectTypes[\"AnimalSkins\"] = 30] = \"AnimalSkins\";\r\n        ObjectTypes[ObjectTypes[\"Boat\"] = 31] = \"Boat\";\r\n        ObjectTypes[ObjectTypes[\"Arrows\"] = 32] = \"Arrows\";\r\n        ObjectTypes[ObjectTypes[\"EmptyBottle\"] = 33] = \"EmptyBottle\";\r\n        ObjectTypes[ObjectTypes[\"FullBottle\"] = 34] = \"FullBottle\";\r\n        ObjectTypes[ObjectTypes[\"Blood\"] = 35] = \"Blood\";\r\n        ObjectTypes[ObjectTypes[\"Any\"] = 1000] = \"Any\";\r\n    })(ObjectTypes = exports.ObjectTypes || (exports.ObjectTypes = {}));\r\n    exports.DEFAULT_TIMERS = {\r\n        USE_ITEM: 200,\r\n        WALK: 200,\r\n        USE_BOW: 1400,\r\n        THROW_SPELL: 1400,\r\n        ATTACK: 1500,\r\n        ATTACK_SPELL: 1100,\r\n        SPELL_ATTACK: 1000\r\n    };\r\n    // Known sounds\r\n    var KnownSounds;\r\n    (function (KnownSounds) {\r\n        KnownSounds[KnownSounds[\"DIE_MALE\"] = 11] = \"DIE_MALE\";\r\n        KnownSounds[KnownSounds[\"DIE_FEMALE\"] = 74] = \"DIE_FEMALE\";\r\n        KnownSounds[KnownSounds[\"ARROW_IMPACT\"] = 65] = \"ARROW_IMPACT\";\r\n        KnownSounds[KnownSounds[\"SHIP\"] = 55] = \"SHIP\";\r\n        KnownSounds[KnownSounds[\"EAT_APPLE\"] = 82] = \"EAT_APPLE\";\r\n        KnownSounds[KnownSounds[\"EAT\"] = 7] = \"EAT\";\r\n        KnownSounds[KnownSounds[\"DRINK\"] = 46] = \"DRINK\";\r\n        KnownSounds[KnownSounds[\"STEPS_1\"] = 23] = \"STEPS_1\";\r\n        KnownSounds[KnownSounds[\"STEPS_2\"] = 24] = \"STEPS_2\";\r\n        KnownSounds[KnownSounds[\"EQUIP_WEAPON\"] = 25] = \"EQUIP_WEAPON\";\r\n        KnownSounds[KnownSounds[\"SHIELD\"] = 37] = \"SHIELD\";\r\n        KnownSounds[KnownSounds[\"SWING\"] = 2] = \"SWING\";\r\n        KnownSounds[KnownSounds[\"IMPACT\"] = 10] = \"IMPACT\";\r\n        KnownSounds[KnownSounds[\"IMPACT2\"] = 12] = \"IMPACT2\";\r\n    })(KnownSounds = exports.KnownSounds || (exports.KnownSounds = {}));\r\n    // -----------------------------------------------------\r\n    var SkillType;\r\n    (function (SkillType) {\r\n        SkillType[SkillType[\"Properties\"] = 1] = \"Properties\";\r\n        SkillType[SkillType[\"State\"] = 2] = \"State\";\r\n        SkillType[SkillType[\"Materialize\"] = 3] = \"Materialize\";\r\n        SkillType[SkillType[\"Invocation\"] = 4] = \"Invocation\";\r\n    })(SkillType = exports.SkillType || (exports.SkillType = {}));\r\n    var SkillTarget;\r\n    (function (SkillTarget) {\r\n        SkillTarget[SkillTarget[\"Users\"] = 1] = \"Users\";\r\n        SkillTarget[SkillTarget[\"NPC\"] = 2] = \"NPC\";\r\n        SkillTarget[SkillTarget[\"UserAndNpc\"] = 3] = \"UserAndNpc\";\r\n        SkillTarget[SkillTarget[\"Terrain\"] = 4] = \"Terrain\";\r\n    })(SkillTarget = exports.SkillTarget || (exports.SkillTarget = {}));\r\n});\r\ndefine(\"sdk/Components/WorldPosition\", [\"require\", \"exports\", \"sdk/Components/Body\"], function (require, exports, Body_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    let WorldPosition = class WorldPosition extends ObservableComponent {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.x = 1;\r\n            this.y = 1;\r\n            this.outgoingAreaMessages = [];\r\n            this.outgoingAreaButMeMessages = [];\r\n        }\r\n        enqueueSendToAreaButMe(data) {\r\n            this.outgoingAreaButMeMessages.push(data);\r\n        }\r\n        enqueueSendToArea(data) {\r\n            this.outgoingAreaMessages.push(data);\r\n        }\r\n        sendHit(x, y, text, color) {\r\n            this.enqueueSendToArea({ Hit: { x, y, text, color } });\r\n        }\r\n        sendWeaponSwing(entity, weaponSlot, sound) {\r\n            this.enqueueSendToArea({\r\n                WeaponSwing: {\r\n                    entityId: entity.uuid,\r\n                    weaponSlot,\r\n                    sound,\r\n                },\r\n            });\r\n        }\r\n        sendSound(x, y, sound) {\r\n            this.enqueueSendToArea({\r\n                Sound: {\r\n                    x,\r\n                    y,\r\n                    sound,\r\n                },\r\n            });\r\n        }\r\n        sendProjectile(x, y, destX, destY, graphic, sound) {\r\n            this.enqueueSendToArea({\r\n                Projectile: {\r\n                    x,\r\n                    y,\r\n                    destX,\r\n                    destY,\r\n                    graphic,\r\n                    sound,\r\n                },\r\n            });\r\n        }\r\n    };\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], WorldPosition.prototype, \"x\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], WorldPosition.prototype, \"y\", void 0);\r\n    WorldPosition = __decorate([\r\n        Component(\"Position\")\r\n    ], WorldPosition);\r\n    exports.WorldPosition = WorldPosition;\r\n    const entitiesWithPosition = engine.getComponentGroup(WorldPosition);\r\n    function* entitiesInPosition(x, y) {\r\n        for (let entity of entitiesWithPosition.entities) {\r\n            const pos = entity.getComponentOrNull(WorldPosition);\r\n            if (pos && pos.x == x && pos.y == y) {\r\n                yield entity;\r\n            }\r\n        }\r\n    }\r\n    exports.entitiesInPosition = entitiesInPosition;\r\n    const entitiesWithPositionAndBodyAndPosition = engine.getComponentGroup(WorldPosition, Body_1.Body);\r\n    function entitiesWithBodyAndPosition() {\r\n        return entitiesWithPositionAndBodyAndPosition.entities;\r\n    }\r\n    exports.entitiesWithBodyAndPosition = entitiesWithBodyAndPosition;\r\n});\r\ndefine(\"sdk/Components/Stats\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    let CharStats = class CharStats extends ObservableComponent {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.minHp = 0;\r\n            this.maxHp = 0;\r\n            this.minMana = 0;\r\n            this.maxMana = 0;\r\n            this.maxHit = 1;\r\n            this.minHit = 1;\r\n        }\r\n        getAbilityMultiplier(ability) {\r\n            // const modified = this.effectTimer !== 0 ? this.modifiedAbilities.get(ability) || 1 : 1;\r\n            // return (this.abilities.get(ability) || 0) + modified;\r\n            throw new Error();\r\n        }\r\n        addAbilityModifier(ability, value, duration) {\r\n            // TODO skills\r\n            // const currentAbility = this.abilities.get(ability) || 0;\r\n            // const currentModifiedValue = this.modifiedAbilities.get(ability) || 0;\r\n            // this.effectTimer = performance.now() + Math.max(duration, this.effectTimer);\r\n            // this.modifiedAbilities.set(\r\n            // ability,\r\n            // Math.min(currentAbility * 2, Math.min(value + currentModifiedValue, MAX_ABILITY))\r\n            // );\r\n            // this.sendStatus();\r\n            throw new Error();\r\n        }\r\n    };\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], CharStats.prototype, \"minHp\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], CharStats.prototype, \"maxHp\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], CharStats.prototype, \"minMana\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], CharStats.prototype, \"maxMana\", void 0);\r\n    CharStats = __decorate([\r\n        Component(\"Stats\")\r\n    ], CharStats);\r\n    exports.CharStats = CharStats;\r\n});\r\ndefine(\"sdk/Components/Inventory\", [\"require\", \"exports\", \"sdk/Declares\", \"sdk/Enums\"], function (require, exports, Declares_1, Enums_2) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    let Inventory = class Inventory extends ObservableComponent {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.items = {};\r\n        }\r\n        getItem(slot) {\r\n            return this.items[slot] || null;\r\n        }\r\n        setItem(slot, item) {\r\n            if (typeof slot !== \"number\") {\r\n                error(\"slot was not a number\");\r\n                return;\r\n            }\r\n            this.items = { ...this.items, [slot]: item };\r\n        }\r\n        clear() {\r\n            this.items = {};\r\n        }\r\n        removeItemFromSlot(slot, amount) {\r\n            const item = this.getItem(slot);\r\n            if (item) {\r\n                if (item.amount >= 999999)\r\n                    return;\r\n                item.amount = item.amount - amount;\r\n                if (item.amount <= 0) {\r\n                    this.setItem(slot, null);\r\n                }\r\n            }\r\n        }\r\n        addItem(item, amount) {\r\n            // does the user already have this kind of item?\r\n            for (let [i, inventoryItem] of Object.entries(this.items)) {\r\n                if (inventoryItem && inventoryItem.item === item) {\r\n                    this.setItem(+i, {\r\n                        item: inventoryItem.item,\r\n                        amount: inventoryItem.amount + amount\r\n                    });\r\n                    return true;\r\n                }\r\n            }\r\n            let openSlot = Enums_2.InventorySlots.NONE;\r\n            // find an open slot\r\n            for (let i in Enums_2.InventorySlots) {\r\n                if (isFinite(+i) && !this.getItem(+i)) {\r\n                    openSlot = +i;\r\n                    break;\r\n                }\r\n            }\r\n            // there is no room for new items\r\n            if (openSlot === Enums_2.InventorySlots.NONE) {\r\n                return false;\r\n            }\r\n            this.setItem(openSlot, { amount, item });\r\n            return true;\r\n        }\r\n        *entries() {\r\n            for (let i in this.items) {\r\n                const item = this.items[i];\r\n                if (item)\r\n                    yield [+i, item];\r\n            }\r\n        }\r\n    };\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Inventory.prototype, \"items\", void 0);\r\n    Inventory = __decorate([\r\n        Component(\"Inventory\")\r\n    ], Inventory);\r\n    exports.Inventory = Inventory;\r\n    function canEquip(char, item, toSlot, sendMessages) {\r\n        const inventory = char.getComponentOrNull(Inventory);\r\n        if (!inventory)\r\n            return false;\r\n        // TODO: If I have a double handed weapon I still can equip a shield\r\n        if (\"allowed_classes\" in item && item.allowed_classes.indexOf(char.body.charClass) == -1) {\r\n            sendMessages && char.sendConsoleMessage(Enums_2.ConsoleMessages[\"Your class cannot use that item!\"]);\r\n            return false;\r\n        }\r\n        if (item.object_type === Declares_1.ObjectTypes.Armor) {\r\n            if (item.short_people !== (char.body.race === Enums_2.Race.Dwarf || char.body.race === Enums_2.Race.Gnome)) {\r\n                sendMessages && char.sendConsoleMessage(Enums_2.ConsoleMessages[\"Your race cannot use that item!\"]);\r\n                return false;\r\n            }\r\n        }\r\n        else if (item.object_type === Declares_1.ObjectTypes.Weapon) {\r\n            if (item.two_handed) {\r\n                if ((toSlot === Enums_2.InventorySlots.LeftHand && inventory.getItem(Enums_2.InventorySlots.RightHand)) ||\r\n                    (toSlot === Enums_2.InventorySlots.RightHand && inventory.getItem(Enums_2.InventorySlots.LeftHand))) {\r\n                    sendMessages &&\r\n                        char.sendConsoleMessage(Enums_2.ConsoleMessages[\"To use a two handed item you must release both hands!\"]);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    exports.canEquip = canEquip;\r\n});\r\ndefine(\"sdk/Components/CharStatus\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    let CharStatus = class CharStatus extends ObservableComponent {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.paralyzed = false;\r\n            this.invisible = false;\r\n            this.dumb = false;\r\n            this.blind = false;\r\n        }\r\n    };\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], CharStatus.prototype, \"paralyzed\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], CharStatus.prototype, \"invisible\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], CharStatus.prototype, \"dumb\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], CharStatus.prototype, \"blind\", void 0);\r\n    CharStatus = __decorate([\r\n        Component(\"status\")\r\n    ], CharStatus);\r\n    exports.CharStatus = CharStatus;\r\n});\r\ndefine(\"sdk/Components/Invisible\", [\"require\", \"exports\", \"sdk/Components/CharStatus\"], function (require, exports, CharStatus_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    let Invisible = class Invisible extends ObservableComponent {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.end = 0;\r\n        }\r\n    };\r\n    Invisible = __decorate([\r\n        Component(\"Invisible\")\r\n    ], Invisible);\r\n    exports.Invisible = Invisible;\r\n    function setInvisible(entity) {\r\n        const inv = entity.getComponentOrCreate(Invisible);\r\n        inv.end = 15;\r\n        entity.getComponentOrCreate(CharStatus_1.CharStatus).invisible = true;\r\n    }\r\n    exports.setInvisible = setInvisible;\r\n    function setVisible(entity) {\r\n        entity.getComponentOrCreate(CharStatus_1.CharStatus).invisible = false;\r\n        return entity.removeComponent(Invisible);\r\n    }\r\n    exports.setVisible = setVisible;\r\n    function isInvisible(entity) {\r\n        return entity.hasComponent(Invisible);\r\n    }\r\n    exports.isInvisible = isInvisible;\r\n});\r\ndefine(\"sdk/Components/Fx\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    let Fx = class Fx extends ObservableComponent {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.fx = 0;\r\n            this.loops = 0;\r\n        }\r\n        set(fx, loops) {\r\n            this.fx = fx;\r\n            this.loops = loops;\r\n        }\r\n    };\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Fx.prototype, \"fx\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Fx.prototype, \"loops\", void 0);\r\n    Fx = __decorate([\r\n        Component(\"fx\")\r\n    ], Fx);\r\n    exports.Fx = Fx;\r\n});\r\ndefine(\"sdk/Components/Meditation\", [\"require\", \"exports\", \"sdk/Components/Invisible\", \"sdk/Components/Fx\"], function (require, exports, Invisible_1, Fx_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.MEDITATION_FX = [4, 5, 6, 16, 34];\r\n    let Meditating = class Meditating {\r\n    };\r\n    Meditating = __decorate([\r\n        Component(\"Meditating\")\r\n    ], Meditating);\r\n    exports.Meditating = Meditating;\r\n    function startMeditating(entity) {\r\n        Invisible_1.setVisible(entity);\r\n        entity.getComponentOrCreate(Meditating);\r\n        entity.getComponentOrCreate(Fx_1.Fx).set(exports.MEDITATION_FX[2], -1);\r\n    }\r\n    exports.startMeditating = startMeditating;\r\n    function stopMeditating(char) {\r\n        if (char.removeComponent(Meditating)) {\r\n            char.removeComponent(Fx_1.Fx);\r\n        }\r\n    }\r\n    exports.stopMeditating = stopMeditating;\r\n    function isMeditating(char) {\r\n        return char.hasComponent(Meditating);\r\n    }\r\n    exports.isMeditating = isMeditating;\r\n});\r\ndefine(\"sdk/AtomicHelpers/Slots\", [\"require\", \"exports\", \"sdk/Enums\"], function (require, exports, Enums_3) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    function isSkillSlot(slot) {\r\n        return ((slot >= Enums_3.HotBarSlots.HotBar1 && slot <= Enums_3.HotBarSlots.HotBar5) ||\r\n            (slot >= Enums_3.SkillSlots.Spell1 && slot <= Enums_3.SkillSlots.Spell11));\r\n    }\r\n    exports.isSkillSlot = isSkillSlot;\r\n    function canDrop(originSlot, targetSlot) {\r\n        if (targetSlot === Enums_3.InventorySlots.NONE)\r\n            return false;\r\n        if (originSlot === Enums_3.InventorySlots.NONE)\r\n            return false;\r\n        return isSkillSlot(originSlot) === isSkillSlot(targetSlot);\r\n    }\r\n    exports.canDrop = canDrop;\r\n});\r\ndefine(\"sdk/Components/Skills\", [\"require\", \"exports\", \"sdk/Components/Meditation\", \"sdk/AtomicHelpers/Slots\", \"sdk/Enums\"], function (require, exports, Meditation_1, Slots_1, Enums_4) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    let Skills = class Skills extends ObservableComponent {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.skills = {};\r\n        }\r\n        getItem(slot) {\r\n            return this.skills[slot] || null;\r\n        }\r\n        setItem(slot, skill) {\r\n            this.skills = { ...this.skills, [slot]: skill };\r\n            this.dirty = true;\r\n        }\r\n        clear() {\r\n            this.skills = {};\r\n        }\r\n        enoughManaFor(slot, stats) {\r\n            const isSpell = Slots_1.isSkillSlot(slot);\r\n            if (isSpell) {\r\n                const spell = this.getItem(slot);\r\n                if (spell) {\r\n                    return stats.minMana >= spell.required_mana;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        handleMoveSpells(fromSlot, toSlot) {\r\n            if (fromSlot === Enums_4.SkillSlots.NONE || toSlot === Enums_4.SkillSlots.NONE)\r\n                return;\r\n            if (!Slots_1.isSkillSlot(fromSlot))\r\n                return;\r\n            if (!Slots_1.isSkillSlot(toSlot))\r\n                return;\r\n            const fromItem = this.getItem(fromSlot);\r\n            const toItem = this.getItem(toSlot);\r\n            this.skills = { ...this.skills, [toSlot]: fromItem, [fromSlot]: toItem };\r\n        }\r\n        *entries() {\r\n            for (let i in this.skills) {\r\n                const item = this.skills[i];\r\n                if (item)\r\n                    yield [+i, item];\r\n            }\r\n        }\r\n    };\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Skills.prototype, \"skills\", void 0);\r\n    Skills = __decorate([\r\n        Component(\"Skills\")\r\n    ], Skills);\r\n    exports.Skills = Skills;\r\n    function canCastSpell(caster, spell) {\r\n        if (caster.body.dead) {\r\n            caster.sendConsoleMessage(\"You can't cast spells while you are dead!\");\r\n        }\r\n        else if (Meditation_1.isMeditating(caster)) {\r\n            caster.sendConsoleMessage(\"You can't cast spells while you are meditating!\");\r\n        }\r\n        else if (spell.required_mana > caster.stats.minMana) {\r\n            caster.sendConsoleMessage(\"Insufficient mana!\");\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    exports.canCastSpell = canCastSpell;\r\n});\r\ndefine(\"sdk/Components/RequestTarget\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    let RequestedTarget = class RequestedTarget extends ObservableComponent {\r\n        constructor(type, slot = 0, range = 1, distance = 15) {\r\n            super();\r\n            this.type = type;\r\n            this.slot = slot;\r\n            this.range = range;\r\n            this.distance = distance;\r\n        }\r\n    };\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], RequestedTarget.prototype, \"type\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], RequestedTarget.prototype, \"slot\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], RequestedTarget.prototype, \"range\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], RequestedTarget.prototype, \"distance\", void 0);\r\n    RequestedTarget = __decorate([\r\n        Component(\"RequestedTarget\")\r\n    ], RequestedTarget);\r\n    exports.RequestedTarget = RequestedTarget;\r\n    function cancelCasting(char) {\r\n        char.removeComponent(RequestedTarget);\r\n    }\r\n    exports.cancelCasting = cancelCasting;\r\n    function requestTargetFor(char, type, slot) {\r\n        // TODO: add validations: interval, skill/item exist.\r\n        char.addComponentOrReplace(new RequestedTarget(type, slot));\r\n    }\r\n    exports.requestTargetFor = requestTargetFor;\r\n});\r\ndefine(\"sdk/Components/Heading\", [\"require\", \"exports\", \"sdk/Enums\"], function (require, exports, Enums_5) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    let HeadingComponent = class HeadingComponent extends ObservableComponent {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.heading = Enums_5.Heading.South;\r\n        }\r\n    };\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], HeadingComponent.prototype, \"heading\", void 0);\r\n    HeadingComponent = __decorate([\r\n        Component(\"heading\")\r\n    ], HeadingComponent);\r\n    exports.HeadingComponent = HeadingComponent;\r\n});\r\ndefine(\"sdk/Components/Timers\", [\"require\", \"exports\", \"sdk/Declares\"], function (require, exports, Declares_2) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    let Timers = class Timers extends ObservableComponent {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.canAttackInterval = Declares_2.DEFAULT_TIMERS.ATTACK;\r\n            this.canThrowSpellInterval = Declares_2.DEFAULT_TIMERS.THROW_SPELL;\r\n            this.canUseItemInterval = Declares_2.DEFAULT_TIMERS.USE_ITEM;\r\n            this.canUseBowInterval = Declares_2.DEFAULT_TIMERS.USE_BOW;\r\n            this.canWalkInterval = Declares_2.DEFAULT_TIMERS.WALK;\r\n            this.attackSkillInterval = Declares_2.DEFAULT_TIMERS.ATTACK_SPELL;\r\n            this.skillAttackInterval = Declares_2.DEFAULT_TIMERS.SPELL_ATTACK;\r\n            this.nowInMs = 0;\r\n            this.lastAttack = 0;\r\n            this.lastThrowSpell = 0;\r\n            this.lastUseItem = 0;\r\n            this.lastUseBow = 0;\r\n            this.lastWalk = 0;\r\n            this.lastAttackSkill = 0;\r\n            this.lastSkillAttack = 0;\r\n        }\r\n        update(nowInMs) {\r\n            this.nowInMs = nowInMs;\r\n        }\r\n        canUseItem(update = true) {\r\n            const can = this.nowInMs - this.lastUseItem >= this.canUseItemInterval;\r\n            if (can && update) {\r\n                this.lastUseItem = this.nowInMs;\r\n            }\r\n            return can;\r\n        }\r\n        canWalk(update = true) {\r\n            const can = this.nowInMs - this.lastWalk >= this.canWalkInterval;\r\n            if (can && update) {\r\n                this.lastWalk = this.nowInMs;\r\n            }\r\n            return can;\r\n        }\r\n        canUseBow(update = true) {\r\n            const can = this.nowInMs - this.lastUseBow >= this.canUseBowInterval;\r\n            if (can && update) {\r\n                this.lastUseBow = this.nowInMs;\r\n            }\r\n            return can;\r\n        }\r\n        canAttack(update = true) {\r\n            const can = this.nowInMs - this.lastAttack >= this.canAttackInterval;\r\n            if (can && update) {\r\n                this.lastAttack = this.nowInMs;\r\n            }\r\n            return can;\r\n        }\r\n        canSpell(update = true) {\r\n            const can = this.nowInMs - this.lastThrowSpell >= this.canThrowSpellInterval;\r\n            if (can && update) {\r\n                this.lastThrowSpell = this.nowInMs;\r\n            }\r\n            return can;\r\n        }\r\n        canAttackSkill(update = true) {\r\n            if (this.lastAttackSkill > this.lastThrowSpell)\r\n                return false;\r\n            const can = this.nowInMs - this.lastAttackSkill >= this.attackSkillInterval;\r\n            if (can && update) {\r\n                this.lastAttackSkill = this.nowInMs;\r\n                this.lastThrowSpell = this.nowInMs;\r\n            }\r\n            return can;\r\n        }\r\n        canSkillAttack(update = true) {\r\n            if (this.lastSkillAttack > this.lastAttack)\r\n                return false;\r\n            const can = this.nowInMs - this.lastSkillAttack >= this.skillAttackInterval;\r\n            if (can && update) {\r\n                this.lastSkillAttack = this.nowInMs;\r\n                this.lastAttack = this.nowInMs;\r\n            }\r\n            return can;\r\n        }\r\n    };\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Timers.prototype, \"canAttackInterval\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Timers.prototype, \"canThrowSpellInterval\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Timers.prototype, \"canUseItemInterval\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Timers.prototype, \"canUseBowInterval\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Timers.prototype, \"canWalkInterval\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Timers.prototype, \"attackSkillInterval\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Timers.prototype, \"skillAttackInterval\", void 0);\r\n    Timers = __decorate([\r\n        Component(\"timers\")\r\n    ], Timers);\r\n    exports.Timers = Timers;\r\n});\r\ndefine(\"sdk/Components/Character\", [\"require\", \"exports\", \"sdk/Components/Body\", \"sdk/Declares\", \"sdk/Components/WorldPosition\", \"sdk/Components/Stats\", \"sdk/Components/Connection\", \"sdk/Components/Inventory\", \"sdk/Components/Skills\", \"sdk/Components/Invisible\", \"sdk/Components/Meditation\", \"sdk/Components/RequestTarget\", \"sdk/Components/Heading\", \"sdk/Components/Fx\", \"sdk/Components/Timers\", \"sdk/Enums\"], function (require, exports, Body_2, Declares_3, WorldPosition_1, Stats_1, Connection_1, Inventory_1, Skills_1, Invisible_2, Meditation_2, RequestTarget_1, Heading_1, Fx_2, Timers_1, Enums_6) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    // only triggered after a character is added to the engine, manually so far\r\n    exports.onNewCharacterObservable = new Observable();\r\n    class Character extends Entity {\r\n        get position() {\r\n            return this.getComponentOrCreate(WorldPosition_1.WorldPosition);\r\n        }\r\n        get body() {\r\n            return this.getComponentOrCreate(Body_2.Body);\r\n        }\r\n        get stats() {\r\n            return this.getComponentOrCreate(Stats_1.CharStats);\r\n        }\r\n        get timers() {\r\n            return this.getComponentOrCreate(Timers_1.Timers);\r\n        }\r\n        get connection() {\r\n            return this.getComponentOrNull(Connection_1.Connection);\r\n        }\r\n        get inventory() {\r\n            return this.getComponentOrNull(Inventory_1.Inventory);\r\n        }\r\n        get skills() {\r\n            return this.getComponentOrNull(Skills_1.Skills);\r\n        }\r\n        constructor() {\r\n            super();\r\n            this.getComponentOrCreate(WorldPosition_1.WorldPosition);\r\n            this.getComponentOrCreate(Body_2.Body);\r\n            this.getComponentOrCreate(Stats_1.CharStats);\r\n            this.getComponentOrCreate(Heading_1.HeadingComponent);\r\n            this.getComponentOrCreate(Timers_1.Timers);\r\n        }\r\n        sendSound(sound) {\r\n            this.position.sendSound(this.position.x, this.position.y, sound);\r\n        }\r\n        sayMagicWords(spell) {\r\n            this.position.enqueueSendToArea({\r\n                Talk: {\r\n                    entityId: this.uuid,\r\n                    color: 0x00ccff,\r\n                    message: spell,\r\n                    nick: this.body.nick,\r\n                    console: false,\r\n                },\r\n            });\r\n        }\r\n        talk(message, color = 0xffffff) {\r\n            this.position.enqueueSendToArea({\r\n                Talk: {\r\n                    entityId: this.uuid,\r\n                    color,\r\n                    message,\r\n                    nick: this.body.nick,\r\n                    console: true,\r\n                },\r\n            });\r\n        }\r\n        sendConsoleMessage(message, map) {\r\n            const c = this.connection;\r\n            if (c) {\r\n                if (typeof message === \"string\") {\r\n                    Connection_1.sendMessageObservable.notifyObservers({\r\n                        connectionIds: [c.connectionId],\r\n                        data: { ConsoleMessage: { message, map } },\r\n                    });\r\n                }\r\n                else {\r\n                    Connection_1.sendMessageObservable.notifyObservers({\r\n                        connectionIds: [c.connectionId],\r\n                        data: { ConsoleMessage: { messageId: message, map } },\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        notifyUpdatedPosition() {\r\n            if (this.connection) {\r\n                Connection_1.sendMessageObservable.notifyObservers({\r\n                    connectionIds: [this.connection.connectionId],\r\n                    data: {\r\n                        UpdatePosition: {\r\n                            entityId: this.uuid,\r\n                            x: this.position.x,\r\n                            y: this.position.y,\r\n                        },\r\n                    },\r\n                });\r\n            }\r\n        }\r\n        die() {\r\n            if (this.body.dead) {\r\n                return;\r\n            }\r\n            if (this.body.gender == Enums_6.Gender.Female) {\r\n                this.sendSound(Declares_3.KnownSounds.DIE_FEMALE);\r\n            }\r\n            else {\r\n                this.sendSound(Declares_3.KnownSounds.DIE_MALE);\r\n            }\r\n            /// Remove the dialog\r\n            this.talk(\"\");\r\n            /// Reset stats\r\n            this.stats.minHp = 0;\r\n            this.stats.minMana = 0;\r\n            // reset FX\r\n            this.resetFlags();\r\n        }\r\n        resetFlags() {\r\n            Invisible_2.setVisible(this);\r\n            Meditation_2.stopMeditating(this);\r\n            RequestTarget_1.cancelCasting(this);\r\n            this.body.mimetism = null;\r\n            this.body.kill();\r\n            this.removeComponent(Fx_2.Fx);\r\n        }\r\n        resucitate(reset) {\r\n            this.body.resucitate();\r\n            this.stats.minHp = this.stats.maxHp;\r\n            this.stats.minMana = 0;\r\n            if (this.stats.minHp <= 0)\r\n                this.stats.minHp = 1;\r\n            if (this.stats.minHp > this.stats.maxHp) {\r\n                this.stats.minHp = this.stats.maxHp;\r\n            }\r\n            if (reset) {\r\n                this.stats.minHp = this.stats.maxHp;\r\n                this.stats.minMana = this.stats.maxMana;\r\n                this.removeComponent(Fx_2.Fx);\r\n            }\r\n        }\r\n    }\r\n    exports.Character = Character;\r\n});\r\ndefine(\"sdk/Events/CharEvents\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    let CharAttacksChar = class CharAttacksChar {\r\n        constructor(attacker, victim, projectile) {\r\n            this.attacker = attacker;\r\n            this.victim = victim;\r\n            this.projectile = projectile;\r\n        }\r\n    };\r\n    CharAttacksChar = __decorate([\r\n        EventConstructor()\r\n    ], CharAttacksChar);\r\n    exports.CharAttacksChar = CharAttacksChar;\r\n    function charAttacksEntity(attacker, victim, projectile) {\r\n        engine.eventManager.fireEvent(new CharAttacksChar(attacker, victim, projectile));\r\n    }\r\n    exports.charAttacksEntity = charAttacksEntity;\r\n    // -------------------------------------------------------------------\r\n    let CharUsesSkill = class CharUsesSkill {\r\n        constructor(char, slot, x, y) {\r\n            this.char = char;\r\n            this.slot = slot;\r\n            this.x = x;\r\n            this.y = y;\r\n        }\r\n    };\r\n    CharUsesSkill = __decorate([\r\n        EventConstructor()\r\n    ], CharUsesSkill);\r\n    exports.CharUsesSkill = CharUsesSkill;\r\n    function charUsesSkill(char, slot, x, y) {\r\n        engine.eventManager.fireEvent(new CharUsesSkill(char, slot, x, y));\r\n    }\r\n    exports.charUsesSkill = charUsesSkill;\r\n    // -------------------------------------------------------------------\r\n    let CharUsesItem = class CharUsesItem {\r\n        constructor(char, slot, x, y) {\r\n            this.char = char;\r\n            this.slot = slot;\r\n            this.x = x;\r\n            this.y = y;\r\n        }\r\n    };\r\n    CharUsesItem = __decorate([\r\n        EventConstructor()\r\n    ], CharUsesItem);\r\n    exports.CharUsesItem = CharUsesItem;\r\n    function charUsesItem(char, slot, x, y) {\r\n        engine.eventManager.fireEvent(new CharUsesItem(char, slot, x, y));\r\n    }\r\n    exports.charUsesItem = charUsesItem;\r\n    // -------------------------------------------------------------------\r\n    let MoveItems = class MoveItems {\r\n        constructor(char, from, to, sendMessages) {\r\n            this.char = char;\r\n            this.from = from;\r\n            this.to = to;\r\n            this.sendMessages = sendMessages;\r\n        }\r\n    };\r\n    MoveItems = __decorate([\r\n        EventConstructor()\r\n    ], MoveItems);\r\n    exports.MoveItems = MoveItems;\r\n    function charMoveItems(char, from, to, sendMessages) {\r\n        engine.eventManager.fireEvent(new MoveItems(char, from, to, sendMessages));\r\n    }\r\n    exports.charMoveItems = charMoveItems;\r\n    // ------------------------------------------------------------------\r\n    let MoveSkills = class MoveSkills {\r\n        constructor(char, from, to, sendMessages) {\r\n            this.char = char;\r\n            this.from = from;\r\n            this.to = to;\r\n            this.sendMessages = sendMessages;\r\n        }\r\n    };\r\n    MoveSkills = __decorate([\r\n        EventConstructor()\r\n    ], MoveSkills);\r\n    exports.MoveSkills = MoveSkills;\r\n    function charMoveSkills(char, from, to, sendMessages) {\r\n        engine.eventManager.fireEvent(new MoveSkills(char, from, to, sendMessages));\r\n    }\r\n    exports.charMoveSkills = charMoveSkills;\r\n});\r\ndefine(\"sdk/AtomicHelpers/HeadToPos\", [\"require\", \"exports\", \"sdk/Enums\"], function (require, exports, Enums_7) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    function headToPos(x, y, heading) {\r\n        switch (heading) {\r\n            case Enums_7.Heading.East:\r\n                return {\r\n                    x: x + 1,\r\n                    y: y,\r\n                };\r\n            case Enums_7.Heading.West:\r\n                return {\r\n                    x: x - 1,\r\n                    y: y,\r\n                };\r\n            case Enums_7.Heading.North:\r\n                return {\r\n                    x: x,\r\n                    y: y - 1,\r\n                };\r\n            case Enums_7.Heading.South:\r\n                return {\r\n                    x: x,\r\n                    y: y + 1,\r\n                };\r\n        }\r\n        return {\r\n            x,\r\n            y,\r\n        };\r\n    }\r\n    exports.headToPos = headToPos;\r\n});\r\ndefine(\"sdk/Components/Walking\", [\"require\", \"exports\", \"sdk/Enums\"], function (require, exports, Enums_8) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    let Walking = class Walking {\r\n        constructor(heading = Enums_8.Heading.South) {\r\n            this.heading = heading;\r\n        }\r\n    };\r\n    Walking = __decorate([\r\n        Component(\"walking\")\r\n    ], Walking);\r\n    exports.Walking = Walking;\r\n});\r\ndefine(\"sdk/Functions/networkHandlers\", [\"require\", \"exports\", \"sdk/Components/Character\", \"sdk/Components/RequestTarget\", \"sdk/Events/CharEvents\", \"sdk/Components/Meditation\", \"sdk/Declares\", \"sdk/AtomicHelpers/Slots\", \"sdk/AtomicHelpers/HeadToPos\", \"sdk/Components/Walking\", \"sdk/Components/WorldPosition\", \"sdk/Components/Heading\", \"sdk/Enums\", \"sdk/Components/Timers\"], function (require, exports, Character_1, RequestTarget_2, CharEvents_1, Meditation_3, Declares_4, Slots_2, HeadToPos_1, Walking_1, WorldPosition_2, Heading_2, Enums_9, Timers_2) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    function handleMapClick(char, x, y) {\r\n        const requestedTarget = char.getComponentOrNull(RequestTarget_2.RequestedTarget);\r\n        const timers = char.getComponentOrNull(Timers_2.Timers);\r\n        if (requestedTarget) {\r\n            RequestTarget_2.cancelCasting(char);\r\n            const isSkill = Slots_2.isSkillSlot(requestedTarget.slot);\r\n            if (isSkill) {\r\n                // skills and spells\r\n                if (timers) {\r\n                    // Check bows interval\r\n                    if (!timers.canUseBow(false))\r\n                        return;\r\n                    // Check Hit-Spell interval\r\n                    if (!timers.canAttackSkill()) {\r\n                        // Check Magic interval\r\n                        if (!timers.canSpell()) {\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                CharEvents_1.charUsesSkill(char, requestedTarget.slot, x, y);\r\n            }\r\n            else {\r\n                // inventory items\r\n                if (timers) {\r\n                    // Check attack interval\r\n                    if (!timers.canAttack(false))\r\n                        return;\r\n                    // Check Magic interval\r\n                    if (!timers.canSpell(false))\r\n                        return;\r\n                    // Check bow's interval\r\n                    if (!timers.canUseBow())\r\n                        return;\r\n                }\r\n                CharEvents_1.charUsesItem(char, requestedTarget.slot, x, y);\r\n            }\r\n        }\r\n        else {\r\n            for (let entity of WorldPosition_2.entitiesInPosition(x, y)) {\r\n                if (entity instanceof Character_1.Character) {\r\n                    char.sendConsoleMessage(`You see: ${entity.body.nick}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    exports.handleMapClick = handleMapClick;\r\n    function handleUseSkill(char, slot) {\r\n        if (!Slots_2.isSkillSlot(slot))\r\n            return;\r\n        if (char.body.dead) {\r\n            char.sendConsoleMessage(\"You can't cast spells while you are dead!\");\r\n            return;\r\n        }\r\n        if (Meditation_3.isMeditating(char)) {\r\n            char.sendConsoleMessage(\"You can't cast spells while you are meditating!\");\r\n            return;\r\n        }\r\n        const mySkills = char.skills;\r\n        if (!mySkills)\r\n            return;\r\n        const skill = mySkills.getItem(slot);\r\n        if (!skill)\r\n            return;\r\n        const targetType = skill.target === Declares_4.SkillTarget.Terrain ? Enums_9.TargetType.Floor : Enums_9.TargetType.Char;\r\n        RequestTarget_2.requestTargetFor(char, targetType, slot);\r\n    }\r\n    exports.handleUseSkill = handleUseSkill;\r\n    function handleRequestPosition(char) {\r\n        char.notifyUpdatedPosition();\r\n    }\r\n    exports.handleRequestPosition = handleRequestPosition;\r\n    function handleAttack(char) {\r\n        if (char.body.dead) {\r\n            char.sendConsoleMessage(Enums_9.ConsoleMessages[\"You can't attack because you are dead!\"]);\r\n            return;\r\n        }\r\n        // Not hunter? HidingSystem.makeVisible(char)\r\n        const { heading } = char.getComponentOrCreate(Heading_2.HeadingComponent);\r\n        const { x, y } = HeadToPos_1.headToPos(char.position.x, char.position.y, heading);\r\n        let didAttack = false;\r\n        for (let entity of WorldPosition_2.entitiesInPosition(x, y)) {\r\n            if (entity instanceof Character_1.Character) {\r\n                CharEvents_1.charAttacksEntity(char, entity, false);\r\n                didAttack = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!didAttack) {\r\n            let weaponHand = char.body.isLeftHandWeapon\r\n                ? Enums_9.InventorySlots.LeftHand\r\n                : char.body.isRightHandWeapon\r\n                    ? Enums_9.InventorySlots.RightHand\r\n                    : Enums_9.InventorySlots.NONE;\r\n            if (weaponHand !== Enums_9.InventorySlots.NONE) {\r\n                char.position.sendWeaponSwing(char, weaponHand, Declares_4.KnownSounds.SWING);\r\n            }\r\n        }\r\n    }\r\n    exports.handleAttack = handleAttack;\r\n    function handleMeditate(char) {\r\n        if (char.body.dead) {\r\n            return;\r\n        }\r\n        // if invisible, make visible\r\n        if (Meditation_3.isMeditating(char)) {\r\n            Meditation_3.stopMeditating(char);\r\n        }\r\n        else {\r\n            Meditation_3.startMeditating(char);\r\n        }\r\n    }\r\n    exports.handleMeditate = handleMeditate;\r\n    function handleTalk(char, message, color = 0xffffff) {\r\n        char.talk(message, color);\r\n    }\r\n    exports.handleTalk = handleTalk;\r\n    function handleSetHeading(char, heading) {\r\n        char.getComponentOrCreate(Heading_2.HeadingComponent).heading = heading;\r\n    }\r\n    exports.handleSetHeading = handleSetHeading;\r\n    function handleWalk(char, heading) {\r\n        char.getComponentOrCreate(Heading_2.HeadingComponent).heading = heading;\r\n        char.addComponentOrReplace(new Walking_1.Walking(heading));\r\n        // stopHiding(char)\r\n    }\r\n    exports.handleWalk = handleWalk;\r\n});\r\ndefine(\"sdk/Components/Archetype\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    let Archetypes = class Archetypes extends ObservableComponent {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.archetypes = {};\r\n            this.alignments = [];\r\n        }\r\n        getArchetype(id) {\r\n            return this.archetypes[id] || null;\r\n        }\r\n        setArchetype(item) {\r\n            const id = item.id;\r\n            this.archetypes = { ...this.archetypes, [id]: item };\r\n            this.dirty = true;\r\n        }\r\n        clear() {\r\n            this.archetypes = {};\r\n        }\r\n    };\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Archetypes.prototype, \"archetypes\", void 0);\r\n    __decorate([\r\n        ObservableComponent.field\r\n    ], Archetypes.prototype, \"alignments\", void 0);\r\n    Archetypes = __decorate([\r\n        Component(\"Archetypes\")\r\n    ], Archetypes);\r\n    exports.Archetypes = Archetypes;\r\n});\r\ndefine(\"sdk/Systems/Connection\", [\"require\", \"exports\", \"sdk/Components/Connection\", \"sdk/Components/Character\", \"sdk/Events/CharEvents\", \"sdk/Functions/networkHandlers\", \"sdk/Components/Skills\", \"sdk/Components/Inventory\", \"sdk/Components/Stats\", \"sdk/Components/Archetype\", \"sdk/Components/Timers\", \"sdk/Components/RequestTarget\", \"sdk/AtomicHelpers/Slots\"], function (require, exports, Connection_2, Character_2, CharEvents_2, networkHandlers_1, Skills_2, Inventory_2, Stats_2, Archetype_1, Timers_3, RequestTarget_3, Slots_3) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * @public\r\n     */\r\n    class ConnectionSystem {\r\n        constructor(connection) {\r\n            this.connection = connection;\r\n            this.handlerMap = {};\r\n            this.connectionAdded = (entity) => {\r\n                this.updatePlayerStats(entity);\r\n                const component = entity.getComponentOrNull(Connection_2.Connection);\r\n                if (component instanceof Connection_2.Connection) {\r\n                    this.handlerMap[component.connectionId] = component;\r\n                    component.entityId = entity.uuid;\r\n                }\r\n            };\r\n            this.connectionRemoved = (entity) => {\r\n                const component = entity.getComponentOrNull(Connection_2.Connection);\r\n                if (component instanceof Connection_2.Connection) {\r\n                    delete this.handlerMap[component.connectionId];\r\n                }\r\n            };\r\n        }\r\n        activate(engine) {\r\n            engine.eventManager.addListener(ComponentAdded, this, this.componentAdded);\r\n            engine.eventManager.addListener(ComponentRemoved, this, this.componentRemoved);\r\n            this.connection.onMessage.add((m) => {\r\n                for (let i in m) {\r\n                    const connectionId = m[i].connectionId;\r\n                    if (connectionId) {\r\n                        const conn = this.handlerMap[connectionId];\r\n                        if (conn && conn.entityId) {\r\n                            const entity = engine.entities[conn.entityId];\r\n                            if (entity) {\r\n                                Connection_2.onMessageObservable.notifyObservers({\r\n                                    entity: entity,\r\n                                    data: m,\r\n                                });\r\n                            }\r\n                        }\r\n                        else {\r\n                            log(\"Unknown entity in connection\", connectionId);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.connection.onDisconnected.add(({ connectionId }) => {\r\n                const connection = this.handlerMap[connectionId];\r\n                if (connection && connection.entityId) {\r\n                    const entity = engine.entities[connection.entityId];\r\n                    if (entity) {\r\n                        entity.removeComponent(connection);\r\n                    }\r\n                    Connection_2.onDisconnection.notifyObservers({ entity, connection });\r\n                }\r\n            });\r\n            Connection_2.sendMessageObservable.add((evt) => {\r\n                this.connection.send(evt.connectionIds, evt.data, evt.reliable);\r\n            });\r\n            Connection_2.closeConnectionObservable.add((evt) => {\r\n                this.connection.disconnect(evt.connectionId, \"closed manually\");\r\n            });\r\n            Connection_2.onMessageObservable.add(({ entity, data }) => {\r\n                if (entity instanceof Character_2.Character) {\r\n                    if (data.UseSlot) {\r\n                        if (Slots_3.isSkillSlot(data.UseSlot.slot)) {\r\n                            networkHandlers_1.handleUseSkill(entity, data.UseSlot.slot);\r\n                        }\r\n                        else {\r\n                            CharEvents_2.charUsesItem(entity, data.UseSlot.slot);\r\n                        }\r\n                    }\r\n                    if (data.Walk) {\r\n                        networkHandlers_1.handleWalk(entity, data.Walk.heading);\r\n                    }\r\n                    if (data.MoveSlot) {\r\n                        if (Slots_3.isSkillSlot(data.MoveSlot.from) == Slots_3.isSkillSlot(data.MoveSlot.to)) {\r\n                            if (Slots_3.isSkillSlot(data.MoveSlot.from)) {\r\n                                CharEvents_2.charMoveSkills(entity, data.MoveSlot.from, data.MoveSlot.to, false);\r\n                            }\r\n                            else {\r\n                                CharEvents_2.charMoveItems(entity, data.MoveSlot.from, data.MoveSlot.to, false);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (data.ClickMap) {\r\n                        networkHandlers_1.handleMapClick(entity, data.ClickMap.x, data.ClickMap.y);\r\n                    }\r\n                    if (data.Attack) {\r\n                        networkHandlers_1.handleAttack(entity);\r\n                    }\r\n                    if (data.RequestPosition) {\r\n                        networkHandlers_1.handleRequestPosition(entity);\r\n                    }\r\n                    if (data.Hide) {\r\n                        //   handleHide(entity);\r\n                    }\r\n                    if (data.Meditate) {\r\n                        networkHandlers_1.handleMeditate(entity);\r\n                    }\r\n                    if (data.Talk) {\r\n                        networkHandlers_1.handleTalk(entity, data.Talk.text);\r\n                    }\r\n                    if (data.SetHeading) {\r\n                        networkHandlers_1.handleSetHeading(entity, data.SetHeading.heading);\r\n                    }\r\n                }\r\n            });\r\n            this.connections = engine.getComponentGroup({\r\n                onAddEntity: this.connectionAdded,\r\n                onRemoveEntity: this.connectionRemoved,\r\n            }, Connection_2.Connection);\r\n            log(\"ConnectionSystem started\", this.connections);\r\n        }\r\n        update() {\r\n            for (let entity of this.connections.entities) {\r\n                const data = this.updatePlayerStats(entity);\r\n                const connection = data && entity.getComponent(Connection_2.Connection);\r\n                if (data) {\r\n                    Connection_2.sendMessageObservable.notifyObservers({\r\n                        connectionIds: [connection.connectionId],\r\n                        data,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        updatePlayerStats(entity) {\r\n            let hasContent = false;\r\n            const ret = {};\r\n            const skills = entity.getComponentOrNull(Skills_2.Skills);\r\n            const inv = entity.getComponentOrNull(Inventory_2.Inventory);\r\n            const stats = entity.getComponentOrNull(Stats_2.CharStats);\r\n            const archetypes = entity.getComponentOrNull(Archetype_1.Archetypes);\r\n            const timers = entity.getComponentOrNull(Timers_3.Timers);\r\n            const reqTarget = entity.getComponentOrNull(RequestTarget_3.RequestedTarget);\r\n            if (stats && stats.dirty) {\r\n                ret.Stats = {\r\n                    entityId: entity.uuid,\r\n                    maxHp: stats.maxHp,\r\n                    minHp: stats.minHp,\r\n                    maxMana: stats.maxMana,\r\n                    minMana: stats.minMana,\r\n                };\r\n                stats.dirty = false;\r\n                hasContent = true;\r\n            }\r\n            if (inv && inv.dirty) {\r\n                ret.Inventory = {\r\n                    items: Array.from(inv.entries()).map(([slot, item]) => {\r\n                        return {\r\n                            slot,\r\n                            amount: item.amount,\r\n                            item: {\r\n                                grh: item.item.grh,\r\n                                id: item.item.id,\r\n                                name: item.item.name,\r\n                            },\r\n                        };\r\n                    }),\r\n                };\r\n                inv.dirty = false;\r\n                hasContent = true;\r\n            }\r\n            if (timers && timers.dirty) {\r\n                ret.Timers = {\r\n                    canAttackInterval: timers.canAttackInterval,\r\n                    canThrowSpellInterval: timers.canThrowSpellInterval,\r\n                    canUseBowInterval: timers.canUseBowInterval,\r\n                    canUseItemInterval: timers.canUseItemInterval,\r\n                };\r\n                timers.dirty = false;\r\n                hasContent = true;\r\n            }\r\n            if (skills && skills.dirty) {\r\n                ret.Skills = {\r\n                    skills: Array.from(skills.entries()).map(([slot, skill]) => {\r\n                        return {\r\n                            slot,\r\n                            description: skill.description,\r\n                            graphic: skill.graphic,\r\n                            id: skill.id,\r\n                            name: skill.name,\r\n                        };\r\n                    }),\r\n                };\r\n                skills.dirty = false;\r\n                hasContent = true;\r\n            }\r\n            if (archetypes && archetypes.dirty) {\r\n                ret.Archetypes = {\r\n                    alignments: archetypes.alignments.map(($) => ({\r\n                        color: $.color,\r\n                        id: $.id,\r\n                        name: $.name,\r\n                    })),\r\n                    archetypes: Object.values(archetypes.archetypes),\r\n                };\r\n                archetypes.dirty = false;\r\n                hasContent = true;\r\n            }\r\n            if (reqTarget && reqTarget.dirty) {\r\n                ret.RequestedTarget = {\r\n                    distance: reqTarget.distance,\r\n                    range: reqTarget.range,\r\n                    slot: reqTarget.slot,\r\n                    type: reqTarget.type,\r\n                };\r\n                reqTarget.dirty = false;\r\n                hasContent = true;\r\n            }\r\n            return hasContent ? ret : null;\r\n        }\r\n        deactivate() {\r\n            // noop\r\n        }\r\n        componentAdded(event) {\r\n            if (event.entity.isAddedToEngine()) {\r\n                const component = event.entity.components[event.componentName];\r\n                if (component instanceof Connection_2.Connection) {\r\n                    this.handlerMap[component.connectionId] = component;\r\n                    component.entityId = event.entity.uuid;\r\n                }\r\n            }\r\n        }\r\n        componentRemoved(event) {\r\n            if (event.entity.isAddedToEngine()) {\r\n                if (event.component instanceof Connection_2.Connection) {\r\n                    delete this.handlerMap[event.component.connectionId];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    exports.ConnectionSystem = ConnectionSystem;\r\n});\r\ndefine(\"sdk/Systems/Invisible\", [\"require\", \"exports\", \"sdk/Components/Invisible\", \"sdk/Components/Character\"], function (require, exports, Invisible_3, Character_3) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class InvisibleSystem {\r\n        activate(engine) {\r\n            this.charactersMeditating = engine.getComponentGroup(Invisible_3.Invisible);\r\n            log(\"InvisibleSystem started\");\r\n        }\r\n        update(dt) {\r\n            const entities = this.charactersMeditating.entities.slice();\r\n            for (let char of entities) {\r\n                const inv = char.getComponent(Invisible_3.Invisible);\r\n                inv.end -= dt;\r\n                if (inv.end <= 0) {\r\n                    Invisible_3.setVisible(char);\r\n                    if (char instanceof Character_3.Character) {\r\n                        char.sendConsoleMessage(\"You are visible again.\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    exports.InvisibleSystem = InvisibleSystem;\r\n});\r\ndefine(\"sdk/Systems/Meditation\", [\"require\", \"exports\", \"sdk/Components/Stats\", \"sdk/Components/Meditation\", \"sdk/Components/Walking\", \"sdk/Components/Character\"], function (require, exports, Stats_3, Meditation_4, Walking_2, Character_4) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    const MANA_RECOVERY_FACTOR = 5 / 100; // 5%\r\n    class MeditationSystem {\r\n        constructor() {\r\n            this.timeCounter = 0;\r\n            this.onAdd = (entity) => {\r\n                if (entity instanceof Character_4.Character) {\r\n                    entity.sendConsoleMessage(\"You start meditating.\");\r\n                }\r\n            };\r\n            this.onRemove = (entity) => {\r\n                if (entity instanceof Character_4.Character) {\r\n                    entity.sendConsoleMessage(\"You stop meditating.\");\r\n                }\r\n            };\r\n        }\r\n        activate(engine) {\r\n            this.charactersMeditating = engine.getComponentGroup({ onAddEntity: this.onAdd, onRemoveEntity: this.onRemove }, Meditation_4.Meditating, Stats_3.CharStats);\r\n            log(\"MeditationSystem started\");\r\n        }\r\n        update(dt) {\r\n            this.timeCounter += dt;\r\n            if (this.timeCounter < 0.1)\r\n                return;\r\n            this.timeCounter = 0;\r\n            const entities = this.charactersMeditating.entities.slice();\r\n            for (let char of entities) {\r\n                const stats = char.getComponent(Stats_3.CharStats);\r\n                if (char.hasComponent(Walking_2.Walking)) {\r\n                    Meditation_4.stopMeditating(char);\r\n                    continue;\r\n                }\r\n                if (Math.random() < 0.5) {\r\n                    stats.minMana += (stats.maxMana * MANA_RECOVERY_FACTOR) | 0;\r\n                }\r\n                if (stats.minMana >= stats.maxMana) {\r\n                    stats.minMana = stats.maxMana;\r\n                    Meditation_4.stopMeditating(char);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    exports.MeditationSystem = MeditationSystem;\r\n});\r\ndefine(\"sdk/Components/Paralysis\", [\"require\", \"exports\", \"sdk/Components/CharStatus\"], function (require, exports, CharStatus_2) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    let Paralyzed = class Paralyzed extends ObservableComponent {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.end = 0;\r\n        }\r\n    };\r\n    Paralyzed = __decorate([\r\n        Component(\"Paralyzed\")\r\n    ], Paralyzed);\r\n    exports.Paralyzed = Paralyzed;\r\n    function setParalyzed(entity) {\r\n        const inv = entity.getComponentOrCreate(Paralyzed);\r\n        inv.end = 15;\r\n        entity.getComponentOrCreate(CharStatus_2.CharStatus).paralyzed = true;\r\n    }\r\n    exports.setParalyzed = setParalyzed;\r\n    function setFree(entity) {\r\n        entity.getComponentOrCreate(CharStatus_2.CharStatus).paralyzed = false;\r\n        return entity.removeComponent(Paralyzed);\r\n    }\r\n    exports.setFree = setFree;\r\n    function isParalyzed(entity) {\r\n        return entity.hasComponent(Paralyzed);\r\n    }\r\n    exports.isParalyzed = isParalyzed;\r\n});\r\ndefine(\"sdk/Systems/Paralysis\", [\"require\", \"exports\", \"sdk/Components/Paralysis\", \"sdk/Components/Walking\", \"sdk/Components/Character\"], function (require, exports, Paralysis_1, Walking_3, Character_5) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class ParalysisSystem {\r\n        activate(engine) {\r\n            this.charactersMeditating = engine.getComponentGroup(Paralysis_1.Paralyzed);\r\n            log(\"ParalysisSystem started\");\r\n        }\r\n        update(dt) {\r\n            const entities = this.charactersMeditating.entities.slice();\r\n            for (let char of entities) {\r\n                const inv = char.getComponent(Paralysis_1.Paralyzed);\r\n                char.removeComponent(Walking_3.Walking);\r\n                inv.end -= dt;\r\n                if (inv.end <= 0) {\r\n                    Paralysis_1.setFree(char);\r\n                    if (char instanceof Character_5.Character) {\r\n                        char.sendConsoleMessage(\"You recovered your mobility.\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    exports.ParalysisSystem = ParalysisSystem;\r\n});\r\ndefine(\"sdk/Balance\", [\"require\", \"exports\", \"sdk/Declares\", \"sdk/Enums\"], function (require, exports, Declares_5, Enums_10) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    const classModifier = new Map();\r\n    const raceModifier = new Map();\r\n    const calculatedBalance = [];\r\n    const defaultClassModifier = {\r\n        agility: 1,\r\n        dexterity: 1,\r\n        melee_dex: 1,\r\n        melee_dmg: 1,\r\n        range_dex: 1,\r\n        range_dmg: 1,\r\n        shield: 1,\r\n        vitality: 1,\r\n        will: 1,\r\n    };\r\n    const defaultRaceModifier = {\r\n        agility: 1,\r\n        dexterity: 1,\r\n        vitality: 1,\r\n        will: 1,\r\n        strength: 1,\r\n    };\r\n    const baseCalculated = {\r\n        accuracy: 1,\r\n        class: 1,\r\n        evasion: 1,\r\n        health_points: 200,\r\n        race: 1,\r\n    };\r\n    function getClassModifier(charClass) {\r\n        return classModifier.get(charClass) || defaultClassModifier;\r\n    }\r\n    exports.getClassModifier = getClassModifier;\r\n    function getRaceModifier(race) {\r\n        return raceModifier.get(race) || defaultRaceModifier;\r\n    }\r\n    exports.getRaceModifier = getRaceModifier;\r\n    function findCalculatedBalance(charClass, race) {\r\n        for (let i = 0; i < calculatedBalance.length; i++) {\r\n            const balance = calculatedBalance[i];\r\n            if (balance.class === charClass && balance.race === race) {\r\n                return balance;\r\n            }\r\n        }\r\n        return baseCalculated;\r\n    }\r\n    exports.findCalculatedBalance = findCalculatedBalance;\r\n    function userEvasion(user) {\r\n        // TODO: this can be faster\r\n        return (findCalculatedBalance(user.body.charClass, user.body.race).evasion * user.stats.getAbilityMultiplier(\"agility\"));\r\n    }\r\n    exports.userEvasion = userEvasion;\r\n    function userAccuracy(user) {\r\n        // TODO: this can be faster\r\n        return (findCalculatedBalance(user.body.charClass, user.body.race).accuracy * user.stats.getAbilityMultiplier(\"dexterity\"));\r\n    }\r\n    exports.userAccuracy = userAccuracy;\r\n    function normalizeSpell(skill) {\r\n        skill.makes_invisible = !!skill.makes_invisible;\r\n        skill.makes_paralized = !!skill.makes_paralized;\r\n        skill.makes_still = !!skill.makes_still;\r\n        skill.removes_paralysis = !!skill.removes_paralysis;\r\n        skill.removes_dumb = !!skill.removes_dumb;\r\n        skill.removes_invisibility = !!skill.removes_invisibility;\r\n        skill.heals_poison = !!skill.heals_poison;\r\n        skill.makes_poison = !!skill.makes_poison;\r\n        skill.resuscitates = !!skill.resuscitates;\r\n        skill.makes_blind = !!skill.makes_blind;\r\n        skill.makes_dumb = !!skill.makes_dumb;\r\n        skill.summons = !!skill.summons;\r\n        return skill;\r\n    }\r\n    async function loadSkills(json, ret) {\r\n        for (let skill of json) {\r\n            if (ret.has(skill.id)) {\r\n                error(`Duplicated spell ID: ${skill.id}`);\r\n            }\r\n            else {\r\n                ret.set(skill.id, normalizeSpell(skill));\r\n            }\r\n        }\r\n    }\r\n    exports.loadSkills = loadSkills;\r\n    function assert(condition, message, item) {\r\n        if (!condition) {\r\n            log(item);\r\n            throw Object.assign(new Error(message), { item });\r\n        }\r\n    }\r\n    function assertNumber(item, key) {\r\n        item[key] = (item[key] || 0);\r\n        assert(isFinite(item[key]), key + \" is finite\", item);\r\n    }\r\n    function normalizeItem(item) {\r\n        assert(!!item.id, \"id is required\", item);\r\n        assert(!!item.name, \"name is required\", item);\r\n        assert(!!item.object_type, \"object_type is missing\", item);\r\n        assert(!!Declares_5.ObjectTypes[item.object_type], \"object_type is not in the enum\", item);\r\n        item.grabable = !!item.grabable;\r\n        // item.poisons = !!item.poisons;\r\n        // item.stabs = !!item.stabs;\r\n        // assertNumber(item, \"price\");\r\n        // assertNumber(item, \"grh\");\r\n        // assertNumber(item, \"price\");\r\n        // assertNumber(item, \"animation\");\r\n        // assertNumber(item, \"max_hit\");\r\n        // assertNumber(item, \"min_hit\");\r\n        // assertNumber(item, \"duration\");\r\n        // assertNumber(item, \"max_modifier\");\r\n        // assertNumber(item, \"min_modifier\");\r\n        // assertNumber(item, \"max_defense\");\r\n        // assertNumber(item, \"min_defense\");\r\n        // assertNumber(item, \"spell\");\r\n        // assertNumber(item, \"staff_power\");\r\n        // assertNumber(item, \"staff_damage_bonus\");\r\n        // assertNumber(item, \"potion_type\");\r\n        // assertNumber(item, \"min_magical_defense\");\r\n        // assertNumber(item, \"max_magical_defense\");\r\n        // assertNumber(item, \"reinforcement\");\r\n        if (\"sound\" in item) {\r\n            assert(item.sound instanceof Array, \"sound is array\", item);\r\n            assert(item.sound.every(($) => isFinite($)), \"sound is array of numbers\", item);\r\n        }\r\n        if (\"allowed_classes\" in item) {\r\n            assert(item.allowed_classes instanceof Array, \"allowed_classes is array\", item);\r\n            assert(item.allowed_classes.every(($) => isFinite($)), \"allowed_classes is array of numbers\", item);\r\n            assert(item.allowed_classes.every(($) => !!Enums_10.CharClass[$]), \"allowed_classes are valid classes\", item);\r\n        }\r\n        if (item.object_type === Declares_5.ObjectTypes.Potion) {\r\n            assert(!!Declares_5.PotionType[item.potion_type], \"potion_type is not in the enum\", item);\r\n        }\r\n        if (item.object_type === Declares_5.ObjectTypes.Armor) {\r\n            item.short_people = !!item.short_people;\r\n            assertNumber(item, \"animation\");\r\n        }\r\n        if (item.object_type === Declares_5.ObjectTypes.Weapon) {\r\n            item.two_handed = !!item.two_handed;\r\n            item.projectile = !!item.projectile;\r\n            assertNumber(item, \"reinforcement\");\r\n        }\r\n        return item;\r\n    }\r\n    async function loadItems(json, ret) {\r\n        for (let item of json) {\r\n            if (ret.has(item.id)) {\r\n                error(`Duplicated item ID: ${item.id}`);\r\n            }\r\n            else {\r\n                ret.set(item.id, normalizeItem(item));\r\n            }\r\n        }\r\n    }\r\n    exports.loadItems = loadItems;\r\n    function getEquipableSlotsForItem(item) {\r\n        const ret = new Set();\r\n        if (item) {\r\n            switch (item.object_type) {\r\n                case Declares_5.ObjectTypes.Armor:\r\n                    ret.add(Enums_10.InventorySlots.Armor);\r\n                    break;\r\n                case Declares_5.ObjectTypes.Helmet:\r\n                    ret.add(Enums_10.InventorySlots.Head);\r\n                    break;\r\n                case Declares_5.ObjectTypes.Ring:\r\n                    ret.add(Enums_10.InventorySlots.Ring);\r\n                    break;\r\n                case Declares_5.ObjectTypes.Instrument:\r\n                case Declares_5.ObjectTypes.Arrows:\r\n                    ret.add(Enums_10.InventorySlots.Accessory);\r\n                    break;\r\n                case Declares_5.ObjectTypes.Potion:\r\n                    ret.add(Enums_10.InventorySlots.Belt1);\r\n                    ret.add(Enums_10.InventorySlots.Belt2);\r\n                    break;\r\n                case Declares_5.ObjectTypes.Shield:\r\n                    // ret.add(InventorySlots.LeftHand);\r\n                    ret.add(Enums_10.InventorySlots.RightHand);\r\n                    break;\r\n                case Declares_5.ObjectTypes.Weapon:\r\n                    ret.add(Enums_10.InventorySlots.RightHand);\r\n                    ret.add(Enums_10.InventorySlots.LeftHand);\r\n                    break;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    exports.getEquipableSlotsForItem = getEquipableSlotsForItem;\r\n    exports.skills = new Map();\r\n    exports.items = new Map();\r\n    function loadClassModifiers(modifiers) {\r\n        for (let modifier of modifiers) {\r\n            classModifier.set(modifier.class, modifier);\r\n        }\r\n    }\r\n    function loadRaceModifiers(modifiers) {\r\n        for (let modifier of modifiers) {\r\n            raceModifier.set(modifier.race, modifier);\r\n        }\r\n    }\r\n    function loadHealthModifiers(modifiers) {\r\n        calculatedBalance.length = 0;\r\n        calculatedBalance.push(...modifiers);\r\n    }\r\n    async function loadBalance() {\r\n        const env = await new Promise((resolve_1, reject_1) => { require([\"@arduz/Environment\"], resolve_1, reject_1); });\r\n        const balance = await env.getBalance();\r\n        await Promise.all([\r\n            loadSkills(balance.spells, exports.skills),\r\n            loadItems(balance.items, exports.items),\r\n            loadClassModifiers(balance.balance_class),\r\n            loadRaceModifiers(balance.balance_race),\r\n            loadHealthModifiers(balance.calculated_balance),\r\n        ]);\r\n    }\r\n    exports.loadBalance = loadBalance;\r\n});\r\ndefine(\"sdk/AtomicHelpers/Numbers\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    function getRandomInteger(min, max) {\r\n        return Math.round(Math.random() * (max - min)) + min;\r\n    }\r\n    exports.getRandomInteger = getRandomInteger;\r\n    function getRandomFloat(min, max) {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n    exports.getRandomFloat = getRandomFloat;\r\n    function distance(x1, y1, x2, y2) {\r\n        return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\r\n    }\r\n    exports.distance = distance;\r\n});\r\ndefine(\"sdk/Components/AutomaticEquip\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    let AutomaticEquip = class AutomaticEquip {\r\n    };\r\n    AutomaticEquip = __decorate([\r\n        Component(\"automaticEquip\")\r\n    ], AutomaticEquip);\r\n    exports.AutomaticEquip = AutomaticEquip;\r\n});\r\ndefine(\"sdk/AtomicHelpers/BodyHelpers\", [\"require\", \"exports\", \"sdk/Enums\", \"sdk/AtomicHelpers/Numbers\"], function (require, exports, Enums_11, Numbers_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    function getNakedBody(gender, race) {\r\n        if (gender === Enums_11.Gender.Male) {\r\n            switch (race) {\r\n                case Enums_11.Race.Human:\r\n                    return 21;\r\n                case Enums_11.Race.Drow:\r\n                    return 32;\r\n                case Enums_11.Race.Elf:\r\n                    return 210;\r\n                case Enums_11.Race.Gnome:\r\n                    return 222;\r\n                case Enums_11.Race.Dwarf:\r\n                    return 53;\r\n            }\r\n        }\r\n        else {\r\n            switch (race) {\r\n                case Enums_11.Race.Human:\r\n                    return 39;\r\n                case Enums_11.Race.Drow:\r\n                    return 40;\r\n                case Enums_11.Race.Elf:\r\n                    return 259;\r\n                case Enums_11.Race.Gnome:\r\n                    return 260;\r\n                case Enums_11.Race.Dwarf:\r\n                    return 60;\r\n            }\r\n        }\r\n        return 21;\r\n    }\r\n    exports.getNakedBody = getNakedBody;\r\n    function getHead(gender, race) {\r\n        if (gender === Enums_11.Gender.Male) {\r\n            switch (race) {\r\n                case Enums_11.Race.Human:\r\n                    return Numbers_1.getRandomInteger(1, 40);\r\n                case Enums_11.Race.Drow:\r\n                    return Numbers_1.getRandomInteger(200, 210);\r\n                case Enums_11.Race.Elf:\r\n                    return Numbers_1.getRandomInteger(101, 112);\r\n                case Enums_11.Race.Gnome:\r\n                    return Numbers_1.getRandomInteger(401, 406);\r\n                case Enums_11.Race.Dwarf:\r\n                    return Numbers_1.getRandomInteger(300, 306);\r\n            }\r\n        }\r\n        else {\r\n            switch (race) {\r\n                case Enums_11.Race.Human:\r\n                    return Numbers_1.getRandomInteger(70, 79);\r\n                case Enums_11.Race.Drow:\r\n                    return Numbers_1.getRandomInteger(270, 278);\r\n                case Enums_11.Race.Elf:\r\n                    return Numbers_1.getRandomInteger(170, 178);\r\n                case Enums_11.Race.Gnome:\r\n                    return Numbers_1.getRandomInteger(370, 372);\r\n                case Enums_11.Race.Dwarf:\r\n                    return Numbers_1.getRandomInteger(470, 476);\r\n            }\r\n        }\r\n        return 1;\r\n    }\r\n    exports.getHead = getHead;\r\n});\r\ndefine(\"sdk/Systems/Inventory\", [\"require\", \"exports\", \"sdk/Declares\", \"sdk/Components/Character\", \"sdk/Balance\", \"sdk/Components/Inventory\", \"sdk/Events/CharEvents\", \"sdk/Components/Meditation\", \"sdk/Components/RequestTarget\", \"sdk/AtomicHelpers/Numbers\", \"sdk/Components/WorldPosition\", \"sdk/Components/Timers\", \"sdk/Components/AutomaticEquip\", \"sdk/Enums\", \"sdk/AtomicHelpers/BodyHelpers\"], function (require, exports, Declares_6, Character_6, Balance_1, Inventory_3, CharEvents_3, Meditation_5, RequestTarget_4, Numbers_2, WorldPosition_3, Timers_4, AutomaticEquip_1, Enums_12, BodyHelpers_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    const MANA_RECOVERY_FACTOR = 5 / 100;\r\n    class InventorySystem {\r\n        constructor() {\r\n            this.active = false;\r\n            this.automaticEquip = engine.getComponentGroup(AutomaticEquip_1.AutomaticEquip);\r\n        }\r\n        activate(engine) {\r\n            engine.eventManager.addListener(CharEvents_3.CharUsesItem, this, this.useItem);\r\n            engine.eventManager.addListener(CharEvents_3.MoveItems, this, this.handleMoveItems);\r\n            log(\"InventorySystem started\");\r\n        }\r\n        useItem(event) {\r\n            const { char, slot, x, y } = event;\r\n            const inventory = char.getComponentOrNull(Inventory_3.Inventory);\r\n            if (!inventory)\r\n                return;\r\n            const invSlot = inventory.getItem(slot);\r\n            const timers = char.getComponentOrNull(Timers_4.Timers);\r\n            if (!invSlot) {\r\n                log(\"cancel USE, empty slot\", Enums_12.InventorySlots[slot]);\r\n                return;\r\n            }\r\n            if (timers) {\r\n                if (invSlot.item.object_type == Declares_6.ObjectTypes.Weapon) {\r\n                    if (!timers.canUseItem(!invSlot.item.projectile)) {\r\n                        log(\"cancel USE due to timer\");\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    if (!timers.canUseItem()) {\r\n                        log(\"cancel USE due to timer\");\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (Meditation_5.isMeditating(char)) {\r\n                char.sendConsoleMessage(Enums_12.ConsoleMessages[\"You can't use items while you are meditating!\"]);\r\n                return;\r\n            }\r\n            const body = char.body;\r\n            if (body.dead) {\r\n                char.sendConsoleMessage(Enums_12.ConsoleMessages[\"You can't use items while you are dead!\"]);\r\n                return;\r\n            }\r\n            const isTargetingFloor = typeof x !== \"undefined\" && typeof y !== \"undefined\";\r\n            switch (invSlot.item.object_type) {\r\n                case Declares_6.ObjectTypes.Weapon: {\r\n                    if (invSlot.item.projectile) {\r\n                        if (isTargetingFloor) {\r\n                            const arrowSlot = inventory.getItem(Enums_12.InventorySlots.Accessory);\r\n                            if (!arrowSlot || arrowSlot.amount <= 0) {\r\n                                char.sendConsoleMessage(Enums_12.ConsoleMessages[\"There are no equipped projectile!\"]);\r\n                            }\r\n                            else {\r\n                                for (let entity of WorldPosition_3.entitiesInPosition(x, y)) {\r\n                                    if (entity instanceof Character_6.Character) {\r\n                                        if (entity.body.dead) {\r\n                                            char.sendConsoleMessage(Enums_12.ConsoleMessages[\"You can't attack dead players!\"]);\r\n                                        }\r\n                                        else\r\n                                            CharEvents_3.charAttacksEntity(char, entity, true);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                                char.position.sendProjectile(char.position.x, char.position.y, x, y, 1, Declares_6.KnownSounds.SWING);\r\n                                inventory.removeItemFromSlot(Enums_12.InventorySlots.Accessory, 1);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (slot !== Enums_12.InventorySlots.LeftHand &&\r\n                                slot !== Enums_12.InventorySlots.RightHand) {\r\n                                char.sendConsoleMessage(Enums_12.ConsoleMessages[\"You need to equip your weapon before using it!\"]);\r\n                                return;\r\n                            }\r\n                            RequestTarget_4.requestTargetFor(char, Enums_12.TargetType.Char, slot);\r\n                        }\r\n                    }\r\n                    else {\r\n                        char.sendConsoleMessage(Enums_12.ConsoleMessages[\"You can't use that weapon that way!\"]);\r\n                    }\r\n                    break;\r\n                }\r\n                case Declares_6.ObjectTypes.Potion: {\r\n                    const stats = char.stats;\r\n                    if (timers) {\r\n                        if (!timers.canAttack(false)) {\r\n                            // \"¡Debes esperar unos momentos para tomar otra pocion!\"\r\n                            return;\r\n                        }\r\n                    }\r\n                    switch (invSlot.item.potion_type) {\r\n                        case Declares_6.PotionType.Agility: {\r\n                            // use the item\r\n                            // TODO\r\n                            // char.addAbilityModifier(\r\n                            //   \"agility\", // TODO skills\r\n                            //   getRandomFloat(item.min_modifier, item.max_modifier),\r\n                            //   item.duration\r\n                            // );\r\n                            inventory.removeItemFromSlot(slot, 1);\r\n                            break;\r\n                        }\r\n                        case Declares_6.PotionType.Strenght: {\r\n                            // use the item\r\n                            // TODO\r\n                            // char.addAbilityModifier(\r\n                            //   \"strength\", // TODO skills\r\n                            //   getRandomFloat(item.min_modifier, item.max_modifier),\r\n                            //   item.duration\r\n                            // );\r\n                            inventory.removeItemFromSlot(slot, 1);\r\n                            break;\r\n                        }\r\n                        case Declares_6.PotionType.HP: {\r\n                            // use the item\r\n                            stats.minHp =\r\n                                stats.minHp +\r\n                                    stats.maxHp *\r\n                                        Numbers_2.getRandomFloat(invSlot.item.min_modifier, invSlot.item.max_modifier);\r\n                            stats.minHp = Math.min(stats.minHp, stats.maxHp) | 0;\r\n                            inventory.removeItemFromSlot(slot, 1);\r\n                            break;\r\n                        }\r\n                        case Declares_6.PotionType.Mana: {\r\n                            // use the item\r\n                            stats.minMana =\r\n                                stats.minMana + stats.maxMana * MANA_RECOVERY_FACTOR;\r\n                            stats.minMana = Math.min(stats.minMana, stats.maxMana) | 0;\r\n                            inventory.removeItemFromSlot(slot, 1);\r\n                            break;\r\n                        }\r\n                        case Declares_6.PotionType.Poison: {\r\n                            // use the item\r\n                            // TODO\r\n                            // if (char.poisonedTimer) {\r\n                            //   char.poisonedTimer = 0;\r\n                            //   char.sendStatus();\r\n                            //   char.sendConsoleMessage(ConsoleMessages[\"You've been cured of poisoning!\"]);\r\n                            // }\r\n                            inventory.removeItemFromSlot(slot, 1);\r\n                            break;\r\n                        }\r\n                        case Declares_6.PotionType.Suicide: {\r\n                            // use the item\r\n                            char.die();\r\n                            inventory.removeItemFromSlot(slot, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                    // sound\r\n                    if (invSlot.item.sound && invSlot.item.sound.length) {\r\n                        char.sendSound(invSlot.item.sound[Numbers_2.getRandomInteger(0, invSlot.item.sound.length - 1)]);\r\n                    }\r\n                    else {\r\n                        char.sendSound(Declares_6.KnownSounds.DRINK);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        findItem(char, inventory, toSlot) {\r\n            if (!inventory.getItem(toSlot)) {\r\n                for (let [slot, item] of inventory.entries()) {\r\n                    item &&\r\n                        item.item &&\r\n                        this.handleMoveItems(new CharEvents_3.MoveItems(char, slot, toSlot, false));\r\n                }\r\n            }\r\n        }\r\n        handleMoveItems(event) {\r\n            const { char, from, to, sendMessages } = event;\r\n            const inventory = char.getComponentOrNull(Inventory_3.Inventory);\r\n            if (!inventory)\r\n                return;\r\n            if (from === to)\r\n                return;\r\n            if (from === Enums_12.InventorySlots.NONE || to === Enums_12.InventorySlots.NONE)\r\n                return;\r\n            const fromItem = inventory.getItem(from);\r\n            const toItem = inventory.getItem(to);\r\n            // TODO: check max inv slot\r\n            if (fromItem &&\r\n                toItem &&\r\n                from > Enums_12.InventorySlots.Slot16 &&\r\n                to <= Enums_12.InventorySlots.Slot16) {\r\n                this.handleMoveItems(new CharEvents_3.MoveItems(char, to, from, sendMessages));\r\n                return;\r\n            }\r\n            // 4x4 inventory\r\n            if (from < Enums_12.InventorySlots.Slot16 && to < Enums_12.InventorySlots.Slot16) {\r\n                this.moveItems(char, from, to);\r\n                return;\r\n            }\r\n            // swap belt items\r\n            if ((from === Enums_12.InventorySlots.Belt1 && to === Enums_12.InventorySlots.Belt2) ||\r\n                (to === Enums_12.InventorySlots.Belt1 && from === Enums_12.InventorySlots.Belt2)) {\r\n                this.moveItems(char, from, to);\r\n                return;\r\n            }\r\n            // trying to equip an item\r\n            if (fromItem && to > Enums_12.InventorySlots.Slot16) {\r\n                const possibleSlots = Balance_1.getEquipableSlotsForItem(fromItem.item);\r\n                if (possibleSlots.has(to) &&\r\n                    Inventory_3.canEquip(char, fromItem.item, to, sendMessages)) {\r\n                    this.moveItems(char, from, to);\r\n                }\r\n                return;\r\n            }\r\n            // trying to unequip to empty position\r\n            if (fromItem &&\r\n                !toItem &&\r\n                from > Enums_12.InventorySlots.Slot16 &&\r\n                to <= Enums_12.InventorySlots.Slot16) {\r\n                this.moveItems(char, from, to);\r\n                return;\r\n            }\r\n            log(\"handle move failed\", Enums_12.InventorySlots[from], Enums_12.InventorySlots[to]);\r\n        }\r\n        refreshGraphics(char) {\r\n            const inventory = char.inventory;\r\n            if (!inventory)\r\n                return;\r\n            const body = char.body;\r\n            const leftHandItem = inventory.getItem(Enums_12.InventorySlots.LeftHand);\r\n            body.isLeftHandWeapon =\r\n                (leftHandItem && leftHandItem.item.object_type === Declares_6.ObjectTypes.Weapon) ||\r\n                    false;\r\n            body.leftHand =\r\n                (leftHandItem && leftHandItem.item.animation) || 0;\r\n            const rightHandItem = inventory.getItem(Enums_12.InventorySlots.RightHand);\r\n            body.isRightHandWeapon =\r\n                (rightHandItem &&\r\n                    rightHandItem.item.object_type === Declares_6.ObjectTypes.Weapon) ||\r\n                    false;\r\n            body.rightHand =\r\n                (rightHandItem && rightHandItem.item.animation) || 0;\r\n            const helmetItem = inventory.getItem(Enums_12.InventorySlots.Head);\r\n            body.helmet =\r\n                (helmetItem && helmetItem.item.animation) || 0;\r\n            const bodyItem = inventory.getItem(Enums_12.InventorySlots.Armor);\r\n            body.body =\r\n                (bodyItem && bodyItem.item.animation) ||\r\n                    BodyHelpers_1.getNakedBody(body.gender, body.race);\r\n        }\r\n        moveItems(char, fromSlot, toSlot) {\r\n            const inventory = char.getComponentOrNull(Inventory_3.Inventory);\r\n            if (!inventory)\r\n                return;\r\n            if (fromSlot === Enums_12.InventorySlots.NONE || toSlot === Enums_12.InventorySlots.NONE)\r\n                return;\r\n            // TODO: check max inv slot\r\n            const fromItem = inventory.getItem(fromSlot);\r\n            const toItem = inventory.getItem(toSlot);\r\n            if (toItem) {\r\n                inventory.setItem(fromSlot, toItem);\r\n            }\r\n            else {\r\n                inventory.setItem(fromSlot, null);\r\n            }\r\n            if (toSlot === Enums_12.InventorySlots.LeftHand ||\r\n                toSlot === Enums_12.InventorySlots.RightHand) {\r\n                if (fromItem && fromItem.item.object_type === Declares_6.ObjectTypes.Weapon) {\r\n                    char.sendSound(Declares_6.KnownSounds.EQUIP_WEAPON);\r\n                }\r\n            }\r\n            if (fromItem) {\r\n                inventory.setItem(toSlot, fromItem);\r\n            }\r\n            else {\r\n                inventory.setItem(toSlot, null);\r\n            }\r\n            this.refreshGraphics(char);\r\n        }\r\n        baseEquipment(char) {\r\n            const inv = char.getComponentOrNull(Inventory_3.Inventory);\r\n            if (!inv)\r\n                return;\r\n            // finds suitable items to max the equiped set\r\n            this.findItem(char, inv, Enums_12.InventorySlots.LeftHand);\r\n            this.findItem(char, inv, Enums_12.InventorySlots.RightHand);\r\n            this.findItem(char, inv, Enums_12.InventorySlots.Armor);\r\n            this.findItem(char, inv, Enums_12.InventorySlots.Accessory);\r\n            this.findItem(char, inv, Enums_12.InventorySlots.Ring);\r\n            this.findItem(char, inv, Enums_12.InventorySlots.Head);\r\n            this.findItem(char, inv, Enums_12.InventorySlots.Belt1);\r\n            this.findItem(char, inv, Enums_12.InventorySlots.Belt2);\r\n        }\r\n        update() {\r\n            for (let entity of this.automaticEquip.entities.slice()) {\r\n                this.baseEquipment(entity);\r\n                this.refreshGraphics(entity);\r\n                entity.removeComponent(AutomaticEquip_1.AutomaticEquip);\r\n            }\r\n        }\r\n    }\r\n    exports.InventorySystem = InventorySystem;\r\n});\r\ndefine(\"sdk/Functions/Helpers\", [\"require\", \"exports\", \"sdk/Declares\", \"sdk/Components/Character\", \"sdk/Components/Archetype\", \"sdk/Components/Inventory\", \"sdk/Components/Skills\", \"sdk/Components/Body\", \"sdk/Components/Stats\", \"sdk/AtomicHelpers/Slots\", \"sdk/Enums\"], function (require, exports, Declares_7, Character_7, Archetype_2, Inventory_4, Skills_3, Body_3, Stats_4, Slots_4, Enums_13) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    function getCharWeapon(char) {\r\n        const body = char.getComponentOrNull(Body_3.Body);\r\n        const inventory = char.getComponentOrNull(Inventory_4.Inventory);\r\n        if (!body)\r\n            return null;\r\n        if (!inventory)\r\n            return null;\r\n        let leftOrRight = Enums_13.InventorySlots.NONE;\r\n        if (body.isLeftHandWeapon && body.isRightHandWeapon) {\r\n            leftOrRight =\r\n                Math.random() > 0.5 ? Enums_13.InventorySlots.LeftHand : Enums_13.InventorySlots.RightHand;\r\n        }\r\n        else if (body.isLeftHandWeapon) {\r\n            leftOrRight = Enums_13.InventorySlots.LeftHand;\r\n        }\r\n        else if (body.isRightHandWeapon) {\r\n            leftOrRight = Enums_13.InventorySlots.RightHand;\r\n        }\r\n        const weapon = inventory.getItem(leftOrRight);\r\n        if (leftOrRight !== Enums_13.InventorySlots.NONE && weapon) {\r\n            return weapon.item;\r\n        }\r\n        return null;\r\n    }\r\n    exports.getCharWeapon = getCharWeapon;\r\n    function getCharShield(char) {\r\n        const body = char.getComponentOrNull(Body_3.Body);\r\n        const inventory = char.getComponentOrNull(Inventory_4.Inventory);\r\n        if (!body)\r\n            return null;\r\n        if (!inventory)\r\n            return null;\r\n        let leftOrRight = Enums_13.InventorySlots.NONE;\r\n        if (body.isLeftHandWeapon && body.isRightHandWeapon) {\r\n            leftOrRight = Enums_13.InventorySlots.NONE;\r\n        }\r\n        else if (body.isLeftHandWeapon) {\r\n            leftOrRight = Enums_13.InventorySlots.RightHand;\r\n        }\r\n        else if (body.isRightHandWeapon) {\r\n            leftOrRight = Enums_13.InventorySlots.LeftHand;\r\n        }\r\n        const shield = inventory.getItem(leftOrRight);\r\n        if (leftOrRight !== Enums_13.InventorySlots.NONE &&\r\n            shield &&\r\n            shield.item.object_type === Declares_7.ObjectTypes.Shield) {\r\n            return shield;\r\n        }\r\n        return null;\r\n    }\r\n    exports.getCharShield = getCharShield;\r\n    function loadCharacterFromArchetype(char, id) {\r\n        const arch = char.getComponentOrNull(Archetype_2.Archetypes);\r\n        if (!arch)\r\n            return;\r\n        const description = arch.getArchetype(id);\r\n        if (!description)\r\n            return;\r\n        const inv = char.getComponentOrCreate(Inventory_4.Inventory);\r\n        const skills = char.getComponentOrCreate(Skills_3.Skills);\r\n        const body = char.getComponentOrCreate(Body_3.Body);\r\n        const stats = char.getComponentOrCreate(Stats_4.CharStats);\r\n        if (char instanceof Character_7.Character) {\r\n            char.resetFlags();\r\n            char.die();\r\n        }\r\n        body.nick = description.nick || body.nick || \"Character\";\r\n        body.charClass = description.charClass;\r\n        body.head = description.head;\r\n        body.race = description.race;\r\n        body.charClass = description.charClass;\r\n        body.body = description.body;\r\n        body.gender = description.gender;\r\n        stats.minHp = description.minHp;\r\n        stats.maxHp = description.maxHp;\r\n        stats.minMana = description.minMana;\r\n        stats.maxMana = description.maxMana;\r\n        inv.clear();\r\n        // Set the new inventory\r\n        const invSlots = [];\r\n        description.inventory.forEach(($) => {\r\n            // TODO: validate slot\r\n            if (!Slots_4.isSkillSlot($.slot)) {\r\n                inv.setItem($.slot, { ...$ });\r\n                invSlots.push($.slot);\r\n            }\r\n        });\r\n        // Set the new inventory\r\n        const spellSlots = [];\r\n        description.skills.forEach(($) => {\r\n            // TODO: validate slot\r\n            if (Slots_4.isSkillSlot($.slot)) {\r\n                skills.setItem($.slot, $.skill);\r\n                spellSlots.push($.slot);\r\n            }\r\n        });\r\n    }\r\n    exports.loadCharacterFromArchetype = loadCharacterFromArchetype;\r\n});\r\ndefine(\"sdk/Functions/combatHelpers\", [\"require\", \"exports\", \"sdk/Components/Meditation\", \"sdk/Enums\"], function (require, exports, Meditation_6, Enums_14) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    function sendDamage(attacker, victim, damage) {\r\n        damage = damage | 0;\r\n        attacker.sendConsoleMessage(Enums_14.ConsoleMessages[\"You hitted {{char}} by {{damage}}\"], {\r\n            char: victim.body.nick,\r\n            damage: damage.toString(),\r\n        });\r\n        victim.sendConsoleMessage(Enums_14.ConsoleMessages[\"{{char}} damaged you by {{damage}} points\"], {\r\n            char: attacker.body.nick,\r\n            damage: damage.toString(),\r\n        });\r\n        victim.stats.minHp = Math.round(victim.stats.minHp - damage);\r\n        attacker.position.sendHit(victim.position.x, victim.position.y, damage.toString(), 0xf32121);\r\n        Meditation_6.stopMeditating(victim);\r\n        if (victim.stats.minHp <= 0) {\r\n            victim.stats.minHp = 0;\r\n            victim.die();\r\n            attacker.sendConsoleMessage(Enums_14.ConsoleMessages[\"You killed {{char}}!\"], {\r\n                char: victim.body.nick,\r\n            });\r\n        }\r\n    }\r\n    exports.sendDamage = sendDamage;\r\n});\r\ndefine(\"sdk/Systems/Combat\", [\"require\", \"exports\", \"sdk/Declares\", \"sdk/Components/Character\", \"sdk/Functions/Helpers\", \"sdk/Balance\", \"sdk/Functions/combatHelpers\", \"sdk/Events/CharEvents\", \"sdk/AtomicHelpers/Numbers\", \"sdk/Components/Fx\", \"sdk/Enums\"], function (require, exports, Declares_8, Character_8, Helpers_1, Balance_2, combatHelpers_1, CharEvents_4, Numbers_3, Fx_3, Enums_15) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    const HIT_CHANCE_BASE = 50;\r\n    const BLOOD_FX = 14;\r\n    class CombatSystem {\r\n        constructor() {\r\n            this.active = false;\r\n        }\r\n        activate(engine) {\r\n            engine.eventManager.addListener(CharEvents_4.CharAttacksChar, this, this.charAttacksChar);\r\n            log(\"CombatSystem started\");\r\n        }\r\n        charImpactsChar(weapon, attacker, victim) {\r\n            const shield = Helpers_1.getCharShield(victim);\r\n            const victimModifiers = Balance_2.getClassModifier(victim.body.charClass);\r\n            const attackerModifiers = Balance_2.getClassModifier(attacker.body.charClass);\r\n            let successChances = 0;\r\n            let victimEvasion = Balance_2.userEvasion(victim);\r\n            let attackerDexterity = Balance_2.userAccuracy(attacker);\r\n            if (shield) {\r\n                victimEvasion += victimModifiers.shield;\r\n            }\r\n            if (weapon) {\r\n                if (weapon.projectile) {\r\n                    attackerDexterity += attackerModifiers.range_dex;\r\n                }\r\n                else {\r\n                    attackerDexterity += attackerModifiers.melee_dex;\r\n                }\r\n            }\r\n            successChances = HIT_CHANCE_BASE * (attackerDexterity / victimEvasion);\r\n            if (Numbers_3.getRandomInteger(1, 100) > successChances) {\r\n                attacker.sendConsoleMessage(\"You miss the hit\");\r\n                if (weapon) {\r\n                    attacker.position.sendWeaponSwing(attacker, attacker.body.isLeftHandWeapon\r\n                        ? Enums_15.InventorySlots.LeftHand\r\n                        : Enums_15.InventorySlots.RightHand, Declares_8.KnownSounds.SWING);\r\n                }\r\n                else {\r\n                    attacker.position.sendWeaponSwing(attacker, Enums_15.InventorySlots.NONE, Declares_8.KnownSounds.SWING);\r\n                }\r\n                return false;\r\n            }\r\n            else if (shield) {\r\n                const shieldChances = HIT_CHANCE_BASE *\r\n                    victimModifiers.shield *\r\n                    shield.item.max_modifier;\r\n                if (Numbers_3.getRandomInteger(1, 100) > shieldChances) {\r\n                    // 'Se rechazo el ataque con el escudo\r\n                    attacker.sendConsoleMessage(\"The attack was rejected with a shield\");\r\n                    attacker.position.sendWeaponSwing(victim, victim.body.isLeftHandWeapon\r\n                        ? Enums_15.InventorySlots.RightHand\r\n                        : Enums_15.InventorySlots.LeftHand, Declares_8.KnownSounds.SHIELD);\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            }\r\n            else {\r\n                if (weapon && weapon.projectile) {\r\n                    attacker.position.sendWeaponSwing(attacker, attacker.body.isLeftHandWeapon\r\n                        ? Enums_15.InventorySlots.LeftHand\r\n                        : Enums_15.InventorySlots.RightHand, Declares_8.KnownSounds.IMPACT2);\r\n                }\r\n                else if (weapon) {\r\n                    attacker.position.sendWeaponSwing(attacker, attacker.body.isLeftHandWeapon\r\n                        ? Enums_15.InventorySlots.LeftHand\r\n                        : Enums_15.InventorySlots.RightHand, Declares_8.KnownSounds.IMPACT);\r\n                }\r\n                else {\r\n                    attacker.position.sendWeaponSwing(victim, Enums_15.InventorySlots.NONE, Declares_8.KnownSounds.IMPACT);\r\n                }\r\n                victim.getComponentOrCreate(Fx_3.Fx).set(BLOOD_FX, 1);\r\n                return true;\r\n            }\r\n        }\r\n        charAttacksChar(event) {\r\n            const { attacker, victim, projectile } = event;\r\n            if (attacker === victim) {\r\n                attacker.sendConsoleMessage(Enums_15.ConsoleMessages[\"You can't attack yourself!\"]);\r\n                return;\r\n            }\r\n            if (attacker.body.dead) {\r\n                return;\r\n            }\r\n            if (!(victim instanceof Character_8.Character)) {\r\n                attacker.sendConsoleMessage(\"You can only attack characters!\");\r\n                return;\r\n            }\r\n            if (victim.body.dead) {\r\n                attacker.sendConsoleMessage(Enums_15.ConsoleMessages[\"You can't attack dead characters!\"]);\r\n                return;\r\n            }\r\n            const timers = attacker.timers;\r\n            if (!timers.canUseBow(false)) {\r\n                return;\r\n            }\r\n            if (timers.canSkillAttack()) {\r\n                return;\r\n            }\r\n            // TODO: check distance\r\n            // TODO: check interval\r\n            let absorbedDamage = 0;\r\n            const weapon = Helpers_1.getCharWeapon(attacker);\r\n            if (weapon && weapon.projectile != projectile) {\r\n                attacker.sendConsoleMessage(Enums_15.ConsoleMessages[\"You can't use that weapon that way!\"]);\r\n                return;\r\n            }\r\n            if (!this.charImpactsChar(weapon, attacker, victim)) {\r\n                return;\r\n            }\r\n            let damage = this.calculateDamage(weapon, attacker, victim);\r\n            const resist = (damage.weapon && damage.weapon.reinforcement) || 0;\r\n            const partOfBody = Numbers_3.getRandomInteger(1, 6); // 1 == head\r\n            if (partOfBody === 1 /*head*/) {\r\n                const helmet = victim.inventory && victim.inventory.getItem(Enums_15.InventorySlots.Head);\r\n                if (helmet && helmet.item.object_type == Declares_8.ObjectTypes.Helmet) {\r\n                    absorbedDamage = Numbers_3.getRandomFloat(helmet.item.min_defense, helmet.item.max_defense);\r\n                    absorbedDamage = absorbedDamage - resist;\r\n                    damage.damage = damage.damage - absorbedDamage;\r\n                    if (damage.damage < 1)\r\n                        damage.damage = 1;\r\n                }\r\n            }\r\n            else {\r\n                const armor = victim.inventory && victim.inventory.getItem(Enums_15.InventorySlots.Armor);\r\n                const shield = Helpers_1.getCharShield(victim);\r\n                if (armor && armor.item.object_type == Declares_8.ObjectTypes.Armor) {\r\n                    if (shield && shield.item.object_type == Declares_8.ObjectTypes.Shield) {\r\n                        absorbedDamage = Numbers_3.getRandomFloat(armor.item.min_defense + shield.item.min_defense, armor.item.max_defense + shield.item.max_defense);\r\n                    }\r\n                    else {\r\n                        absorbedDamage = Numbers_3.getRandomFloat(armor.item.min_defense, armor.item.max_defense);\r\n                    }\r\n                    absorbedDamage = absorbedDamage - resist;\r\n                    damage.damage = damage.damage - absorbedDamage;\r\n                    if (damage.damage < 1)\r\n                        damage.damage = 1;\r\n                }\r\n            }\r\n            damage.damage = damage.damage | 0;\r\n            // TODO: send the console messages to both parties\r\n            combatHelpers_1.sendDamage(attacker, victim, damage.damage);\r\n        }\r\n        calculateDamage(weapon, attacker, victim) {\r\n            const attackerClassModifiers = Balance_2.getClassModifier(attacker.body.charClass);\r\n            const attackerRaceModifiers = Balance_2.getRaceModifier(attacker.body.race);\r\n            let weaponTypeModifier = 0;\r\n            let weaponDamage = 0;\r\n            // dagger=dex, wrestling=str\r\n            let typeModifier = \"dexterity\";\r\n            if (!weapon) {\r\n                typeModifier = \"strength\";\r\n                weaponTypeModifier = attackerClassModifiers.melee_dmg;\r\n            }\r\n            else {\r\n                typeModifier = \"dexterity\";\r\n                if (weapon.projectile) {\r\n                    weaponTypeModifier = attackerClassModifiers.range_dmg;\r\n                    weaponDamage = Numbers_3.getRandomFloat(weapon.min_hit, weapon.max_hit);\r\n                    const projectile = attacker.inventory &&\r\n                        attacker.inventory.getItem(Enums_15.InventorySlots.Accessory);\r\n                    if (projectile && projectile.item.object_type === Declares_8.ObjectTypes.Arrows) {\r\n                        weaponDamage =\r\n                            weaponDamage +\r\n                                Numbers_3.getRandomFloat(projectile.item.min_hit, projectile.item.max_hit);\r\n                    }\r\n                }\r\n                else {\r\n                    weaponTypeModifier = attackerClassModifiers.melee_dmg;\r\n                    weaponDamage = Numbers_3.getRandomFloat(weapon.min_hit, weapon.max_hit);\r\n                }\r\n            }\r\n            const abilityModifier = attackerRaceModifiers[typeModifier] *\r\n                attacker.stats.getAbilityMultiplier(typeModifier);\r\n            // const tmpDamage = getRandomInteger(attacker.minHit, attacker.maxHit);\r\n            // TODO skills\r\n            return {\r\n                damage: (10 * abilityModifier * weaponDamage * weaponTypeModifier) | 0,\r\n                weapon,\r\n            };\r\n        }\r\n    }\r\n    exports.CombatSystem = CombatSystem;\r\n});\r\ndefine(\"sdk/Components/Mimetism\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    const MIMETISM_DURATION = 15;\r\n    let Mimetism = class Mimetism {\r\n        constructor() {\r\n            this.timer = MIMETISM_DURATION;\r\n        }\r\n        restart() {\r\n            this.timer = MIMETISM_DURATION;\r\n        }\r\n    };\r\n    Mimetism = __decorate([\r\n        Component(\"mimetism\")\r\n    ], Mimetism);\r\n    exports.Mimetism = Mimetism;\r\n});\r\ndefine(\"sdk/Systems/Skill\", [\"require\", \"exports\", \"sdk/Declares\", \"sdk/Functions/Helpers\", \"sdk/Components/Character\", \"sdk/Functions/combatHelpers\", \"sdk/Components/Skills\", \"sdk/Components/Meditation\", \"sdk/Components/Invisible\", \"sdk/Components/Paralysis\", \"sdk/Events/CharEvents\", \"sdk/AtomicHelpers/Numbers\", \"sdk/Components/WorldPosition\", \"sdk/Components/Fx\", \"sdk/Components/Mimetism\", \"sdk/Enums\"], function (require, exports, Declares_9, Helpers_2, Character_9, combatHelpers_2, Skills_4, Meditation_7, Invisible_4, Paralysis_2, CharEvents_5, Numbers_4, WorldPosition_4, Fx_4, Mimetism_1, Enums_16) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class SkillSystem {\r\n        activate(engine) {\r\n            engine.eventManager.addListener(CharEvents_5.CharUsesSkill, this, this.useSkill);\r\n            log(\"SkillSystem started\");\r\n        }\r\n        useSkill(event) {\r\n            const { char, slot, x, y } = event;\r\n            const skills = char.getComponentOrNull(Skills_4.Skills);\r\n            if (Meditation_7.isMeditating(char))\r\n                return;\r\n            if (skills) {\r\n                const spell = skills.getItem(slot);\r\n                if (spell) {\r\n                    if (Skills_4.canCastSpell(char, spell)) {\r\n                        if (spell.target === Declares_9.SkillTarget.Terrain) {\r\n                            this.doTerrainSpell(char, x, y, spell);\r\n                        }\r\n                        else {\r\n                            let didAttack = false;\r\n                            for (let entity of WorldPosition_4.entitiesInPosition(x, y)) {\r\n                                if (entity instanceof Character_9.Character) {\r\n                                    this.doCharacterSpell(char, entity, spell);\r\n                                    didAttack = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!didAttack) {\r\n                                char.sendConsoleMessage(\"Invalid target!\");\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        spellCasterEffect(caster, spell) {\r\n            const stats = caster.stats;\r\n            stats.minMana = Math.max(stats.minMana - spell.required_mana, 0) | 0;\r\n            caster.sayMagicWords(spell.spell);\r\n            caster.sendSound(spell.sound);\r\n        }\r\n        doTerrainSpell(caster, x, y, spell) {\r\n            if (!Skills_4.canCastSpell(caster, spell))\r\n                return;\r\n            this.spellCasterEffect(caster, spell);\r\n        }\r\n        doCharacterSpell(casterChar, victimChar, spell) {\r\n            if (!Skills_4.canCastSpell(casterChar, spell))\r\n                return;\r\n            const requiresAliveTarget = !spell.resuscitates;\r\n            const isAttackSpell = spell.increase_hp == -1 ||\r\n                spell.increase_mana == -1 ||\r\n                spell.makes_paralized ||\r\n                spell.makes_still ||\r\n                spell.makes_poison ||\r\n                spell.makes_dumb;\r\n            if (victimChar.body.dead && requiresAliveTarget) {\r\n                casterChar.sendConsoleMessage(\"The target is dead!\");\r\n                return;\r\n            }\r\n            if (isAttackSpell && casterChar === victimChar) {\r\n                casterChar.sendConsoleMessage(\"You can't attack yourself!\");\r\n                return;\r\n            }\r\n            if (victimChar.body.dead && spell.resuscitates) {\r\n                victimChar.resucitate(false);\r\n                victimChar.sendConsoleMessage(\"{{caster}} resucitated you!\", {\r\n                    caster: casterChar.body.nick,\r\n                });\r\n                casterChar.sendConsoleMessage(\"You resucitated {{victim}}!\", {\r\n                    victim: victimChar.body.nick,\r\n                });\r\n            }\r\n            if (spell.makes_invisible) {\r\n                Invisible_4.setInvisible(victimChar);\r\n                victimChar.sendConsoleMessage(\"{{caster}} made you invisible!\", {\r\n                    caster: casterChar.body.nick,\r\n                });\r\n                casterChar.sendConsoleMessage(\"You made {{victim}} invisible!\", {\r\n                    victim: victimChar.body.nick,\r\n                });\r\n            }\r\n            if (spell.makes_paralized || spell.makes_still) {\r\n                Paralysis_2.setParalyzed(victimChar);\r\n                victimChar.sendConsoleMessage(\"{{caster}} paralyzed you!\", {\r\n                    caster: casterChar.body.nick,\r\n                });\r\n                casterChar.sendConsoleMessage(\"You paralyzed {{victim}}!\", {\r\n                    victim: victimChar.body.nick,\r\n                });\r\n            }\r\n            // if (spell.makes_blind && victim. != 0) {\r\n            //   victim.poisonedTimer = -1;\r\n            // }\r\n            if (spell.removes_paralysis) {\r\n                if (Paralysis_2.setFree(victimChar)) {\r\n                    victimChar.sendConsoleMessage(\"{{caster}} removed your paralysis!\", {\r\n                        caster: casterChar.body.nick,\r\n                    });\r\n                    casterChar.sendConsoleMessage(\"You removed {{victim}} paralysis!\", {\r\n                        victim: victimChar.body.nick,\r\n                    });\r\n                }\r\n            }\r\n            if (spell.removes_invisibility) {\r\n                if (Invisible_4.setVisible(victimChar)) {\r\n                    victimChar.sendConsoleMessage(\"{{caster}} removed your invisibility!\", {\r\n                        caster: casterChar.body.nick,\r\n                    });\r\n                    casterChar.sendConsoleMessage(\"You made {{victim}} visible!\", {\r\n                        victim: victimChar.body.nick,\r\n                    });\r\n                }\r\n            }\r\n            if (spell.increase_hp == 1) {\r\n                const d = Numbers_4.getRandomInteger(spell.min_hp, spell.max_hp);\r\n                victimChar.sendConsoleMessage(\"{{caster}} healed you by {d} points!\", {\r\n                    d: d.toString(),\r\n                    caster: casterChar.body.nick,\r\n                });\r\n                casterChar.sendConsoleMessage(\"You healed {{victim}}!\", {\r\n                    victim: victimChar.body.nick,\r\n                });\r\n                victimChar.stats.minHp = Math.min(victimChar.stats.minHp + d, victimChar.stats.maxHp);\r\n            }\r\n            else if (spell.increase_hp == -1) {\r\n                const casterInventory = casterChar.inventory;\r\n                const victimInventory = victimChar.inventory;\r\n                const casterRing = casterInventory && casterInventory.getItem(Enums_16.InventorySlots.Ring);\r\n                const victimRing = victimInventory && victimInventory.getItem(Enums_16.InventorySlots.Ring);\r\n                const victimHelmet = victimInventory && victimInventory.getItem(Enums_16.InventorySlots.Head);\r\n                let damage = Numbers_4.getRandomInteger(spell.min_hp, spell.max_hp);\r\n                if (casterChar.body.charClass === Enums_16.CharClass.Mage) {\r\n                    const weapon = Helpers_2.getCharWeapon(casterChar);\r\n                    if (weapon) {\r\n                        damage *= 1 + weapon.staff_damage_bonus;\r\n                    }\r\n                }\r\n                if (casterRing && casterRing.item.object_type == Declares_9.ObjectTypes.Ring) {\r\n                    damage *= 1 + casterRing.item.staff_damage_bonus;\r\n                }\r\n                if (victimRing && victimRing.item.object_type == Declares_9.ObjectTypes.Ring) {\r\n                    damage -=\r\n                        damage *\r\n                            Numbers_4.getRandomInteger(victimRing.item.min_magical_defense, victimRing.item.max_magical_defense);\r\n                }\r\n                if (victimHelmet && victimHelmet.item.object_type == Declares_9.ObjectTypes.Helmet) {\r\n                    damage -=\r\n                        damage *\r\n                            Numbers_4.getRandomInteger(victimHelmet.item.min_magical_defense, victimHelmet.item.max_magical_defense);\r\n                }\r\n                damage = Math.max(damage, 0);\r\n                combatHelpers_2.sendDamage(casterChar, victimChar, damage);\r\n            }\r\n            if (spell.increase_mana == 1) {\r\n                const d = Numbers_4.getRandomInteger(spell.min_mana, spell.max_mana);\r\n                victimChar.sendConsoleMessage(\"{{caster}} increased your mana by {d} points!\", { d: d.toString() });\r\n                victimChar.stats.minMana = Math.min(victimChar.stats.minMana + d, victimChar.stats.maxMana);\r\n            }\r\n            else if (spell.increase_mana == -1) {\r\n                const d = Numbers_4.getRandomInteger(spell.min_mana, spell.max_mana);\r\n                victimChar.sendConsoleMessage(\"{{caster}} took {d} mana from you!\", {\r\n                    d: d.toString(),\r\n                });\r\n                victimChar.stats.minMana = Math.max(victimChar.stats.minMana - d, 0);\r\n            }\r\n            Meditation_7.stopMeditating(victimChar);\r\n            if (spell.mimetism) {\r\n                casterChar.body.mimetism = victimChar.body;\r\n                casterChar.getComponentOrCreate(Mimetism_1.Mimetism).restart();\r\n                victimChar.sendConsoleMessage(\"{{caster}} mimetized with you!\", {\r\n                    caster: casterChar.body.nick,\r\n                });\r\n                casterChar.sendConsoleMessage(\"You stole the aparience from {{victim}}!\", { victim: victimChar.body.nick });\r\n            }\r\n            this.spellCasterEffect(casterChar, spell);\r\n            if (spell.fx) {\r\n                victimChar.getComponentOrCreate(Fx_4.Fx).set(spell.fx, 1);\r\n            }\r\n        }\r\n    }\r\n    exports.SkillSystem = SkillSystem;\r\n});\r\ndefine(\"sdk/Components/MapData\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class MapBlock {\r\n        constructor() {\r\n            this.blocked = 0;\r\n        }\r\n    }\r\n    exports.MapBlock = MapBlock;\r\n    let MapData = class MapData {\r\n        constructor(mapId) {\r\n            this.mapId = mapId;\r\n            this.width = 6 * 4;\r\n            this.height = 4 * 4;\r\n            this.blocks = [];\r\n            if (!mapId) {\r\n                throw new Error(\"Cannot create a MapData without a mapId\");\r\n            }\r\n        }\r\n        async load() {\r\n            // this.shaHash = map.getHash();\r\n            this.blocks = [];\r\n            // this.width = map.getWidth();\r\n            // // this.height = map.getHeight();\r\n            for (var x = 0; x < this.width; x++) {\r\n                var row = [];\r\n                this.blocks.push(row);\r\n                for (var y = 0; y < this.height; y++) {\r\n                    const block = new MapBlock();\r\n                    block.blocked = 0; // 1 | 2 | 4 | 8; // block all directions\r\n                    row.push(block);\r\n                }\r\n            }\r\n            // const tiles = map.getTilesList();\r\n            // for (let i = 0; i < tiles.length; i++) {\r\n            //   const tile = tiles[i];\r\n            //   const block = this.blocks[tile.getX()][tile.getY()];\r\n            //   block.blocked = tile.getBlocked();\r\n            // }\r\n        }\r\n        isWalkableTile(x, y) {\r\n            const block = this.getBlock(x, y);\r\n            if (block) {\r\n                if (block.blocked === 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        getBlock(x, y) {\r\n            if (!this.blocks[x])\r\n                return null;\r\n            if (!this.blocks[x][y])\r\n                return null;\r\n            return this.blocks[x][y];\r\n        }\r\n        *findWalkableTile() {\r\n            for (let x = 0; x < this.width; x++) {\r\n                for (let y = 0; y < this.height; y++) {\r\n                    if (this.isWalkableTile(x, y)) {\r\n                        yield { x, y };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        *findReverseWalkableTile() {\r\n            for (let x = this.width; x >= 0; x--) {\r\n                for (let y = this.height; y >= 0; y--) {\r\n                    if (this.isWalkableTile(x, y)) {\r\n                        yield { x, y };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    MapData = __decorate([\r\n        Component(\"mapData\")\r\n    ], MapData);\r\n    exports.MapData = MapData;\r\n});\r\ndefine(\"sdk/Systems/GameMap\", [\"require\", \"exports\", \"sdk/Components/Connection\", \"sdk/Components/WorldPosition\", \"sdk/Components/Body\", \"sdk/Components/MapData\", \"sdk/Components/Heading\", \"sdk/Components/Fx\", \"sdk/Components/CharStatus\"], function (require, exports, Connection_3, WorldPosition_5, Body_4, MapData_1, Heading_3, Fx_5, CharStatus_3) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class GameMapSystem {\r\n        constructor() {\r\n            this.addEntityWithFx = (entity) => {\r\n                const position = entity.getComponent(WorldPosition_5.WorldPosition);\r\n                const fx = entity.getComponent(Fx_5.Fx);\r\n                this.sendToArea(position.x, position.y, [\r\n                    { Fx: { entityId: entity.uuid, fx: fx.fx, loops: fx.loops } },\r\n                ]);\r\n            };\r\n            this.removeEntityWithFx = (entity) => {\r\n                const position = entity.getComponent(WorldPosition_5.WorldPosition);\r\n                this.sendToArea(position.x, position.y, [\r\n                    { Fx: { entityId: entity.uuid, fx: 0, loops: 0 } },\r\n                ]);\r\n            };\r\n        }\r\n        activate(engine) {\r\n            this.mapEntities = engine.getComponentGroup(WorldPosition_5.WorldPosition);\r\n            this.mapEntitiesWithEffect = engine.getComponentGroup({\r\n                onAddEntity: this.addEntityWithFx,\r\n                onRemoveEntity: this.removeEntityWithFx,\r\n            }, WorldPosition_5.WorldPosition, Fx_5.Fx);\r\n            this.connectedEntities = engine.getComponentGroup(WorldPosition_5.WorldPosition, Connection_3.Connection);\r\n            log(\"GameMapSystem started\");\r\n        }\r\n        update() {\r\n            for (let { entity, position } of this.entities()) {\r\n                const data = this.presentEntity(entity, false);\r\n                if (position.outgoingAreaButMeMessages.length) {\r\n                    const conn = entity.getComponentOrNull(Connection_3.Connection);\r\n                    if (conn) {\r\n                        this.sendToAreaBut(position.x, position.y, position.outgoingAreaButMeMessages, conn.connectionId);\r\n                    }\r\n                    else {\r\n                        this.sendToArea(position.x, position.y, position.outgoingAreaButMeMessages);\r\n                    }\r\n                    position.outgoingAreaButMeMessages.length = 0;\r\n                }\r\n                if (data) {\r\n                    this.sendToArea(position.x, position.y, [\r\n                        data,\r\n                        ...position.outgoingAreaMessages,\r\n                    ]);\r\n                }\r\n                else if (position.outgoingAreaMessages.length) {\r\n                    this.sendToArea(position.x, position.y, position.outgoingAreaMessages);\r\n                }\r\n                position.outgoingAreaMessages.length = 0;\r\n            }\r\n        }\r\n        async load(mapId) {\r\n            const newMapData = new MapData_1.MapData(mapId);\r\n            await newMapData.load();\r\n            engine.rootEntity.addComponentOrReplace(newMapData);\r\n        }\r\n        *entities() {\r\n            for (let entity of this.mapEntities.entities) {\r\n                yield {\r\n                    entity,\r\n                    position: entity.getComponent(WorldPosition_5.WorldPosition),\r\n                };\r\n            }\r\n        }\r\n        presentEntity(entity, force = false) {\r\n            let hasContent = false;\r\n            const position = entity.getComponent(WorldPosition_5.WorldPosition);\r\n            const body = entity.getComponentOrNull(Body_4.Body);\r\n            const heading = entity.getComponentOrNull(Heading_3.HeadingComponent);\r\n            const fx = entity.getComponentOrNull(Fx_5.Fx);\r\n            const status = entity.getComponentOrNull(CharStatus_3.CharStatus);\r\n            const ret = {};\r\n            if (body && (force || body.dirty)) {\r\n                if (body.dead) {\r\n                    ret.SetBody = {\r\n                        entityId: entity.uuid,\r\n                        body: Body_4.DEAD_BODY,\r\n                        color: body.color,\r\n                        dead: body.dead,\r\n                        head: Body_4.DEAD_HEAD,\r\n                        helmet: 0,\r\n                        isLeftHandWeapon: body.isLeftHandWeapon,\r\n                        isRightHandWeapon: body.isRightHandWeapon,\r\n                        leftHand: 0,\r\n                        nick: body.nick,\r\n                        rightHand: 0,\r\n                        speed: body.speed * 1.5,\r\n                    };\r\n                }\r\n                else {\r\n                    ret.SetBody = {\r\n                        entityId: entity.uuid,\r\n                        body: body.body,\r\n                        color: body.color,\r\n                        dead: body.dead,\r\n                        head: body.head,\r\n                        helmet: body.helmet,\r\n                        isLeftHandWeapon: body.isLeftHandWeapon,\r\n                        isRightHandWeapon: body.isRightHandWeapon,\r\n                        leftHand: body.leftHand,\r\n                        nick: body.nick,\r\n                        rightHand: body.rightHand,\r\n                        speed: body.speed,\r\n                    };\r\n                }\r\n                if (!force)\r\n                    body.dirty = false;\r\n                hasContent = true;\r\n            }\r\n            if (position && (force || position.dirty)) {\r\n                ret.UpdatePosition = {\r\n                    entityId: entity.uuid,\r\n                    x: position.x,\r\n                    y: position.y,\r\n                };\r\n                if (!force)\r\n                    position.dirty = false;\r\n                hasContent = true;\r\n            }\r\n            if (heading && (force || heading.dirty)) {\r\n                ret.SetHeading = { entityId: entity.uuid, heading: heading.heading };\r\n                if (!force)\r\n                    heading.dirty = false;\r\n                hasContent = true;\r\n            }\r\n            if (fx && (force || fx.dirty)) {\r\n                ret.Fx = { entityId: entity.uuid, fx: fx.fx, loops: fx.loops };\r\n                if (!force)\r\n                    fx.dirty = false;\r\n                hasContent = true;\r\n            }\r\n            if (status && (force || status.dirty)) {\r\n                ret.Status = {\r\n                    entityId: entity.uuid,\r\n                    paralyzed: status.paralyzed,\r\n                    invisible: status.invisible,\r\n                    dumb: status.dumb,\r\n                    blind: status.blind,\r\n                };\r\n                if (!force)\r\n                    status.dirty = false;\r\n                hasContent = true;\r\n            }\r\n            return hasContent ? ret : null;\r\n        }\r\n        onAddEntity(entity) {\r\n            const position = entity.getComponentOrCreate(WorldPosition_5.WorldPosition);\r\n            const map = engine.rootEntity.getComponentOrNull(MapData_1.MapData);\r\n            if (!map) {\r\n                error(\"Map data not present in rootEntity\");\r\n                return;\r\n            }\r\n            const { x, y } = position;\r\n            const connection = entity.getComponentOrNull(Connection_3.Connection);\r\n            if (connection) {\r\n                const { connectionId } = connection;\r\n                // tell the user which character they control\r\n                Connection_3.sendMessageObservable.notifyObservers({\r\n                    connectionIds: [connectionId],\r\n                    data: {\r\n                        LoadMap: { map: map.mapId },\r\n                    },\r\n                });\r\n                // send all the entities in the map to the player\r\n                for (var p of this.mapEntities.entities) {\r\n                    Connection_3.sendMessageObservable.notifyObservers({\r\n                        connectionIds: [connectionId],\r\n                        data: this.presentEntity(p, true),\r\n                    });\r\n                }\r\n                // send the entity to all the connections but them, they had this already\r\n                this.sendToAreaBut(x, y, [this.presentEntity(entity, true)], connectionId);\r\n                // tell the user which character they control\r\n                Connection_3.sendMessageObservable.notifyObservers({\r\n                    connectionIds: [connectionId],\r\n                    data: {\r\n                        SetEntityId: { entityId: entity.uuid },\r\n                    },\r\n                });\r\n            }\r\n            else {\r\n                // send the entity to all the connections\r\n                this.sendToArea(x, y, [this.presentEntity(entity, true)]);\r\n            }\r\n        }\r\n        onRemoveEntity(entity) {\r\n            const position = entity.getComponentOrNull(WorldPosition_5.WorldPosition);\r\n            if (position) {\r\n                const { x, y } = position;\r\n                this.sendToArea(x, y, [{ RemoveEntity: { entityId: entity.uuid } }]);\r\n            }\r\n            else {\r\n                this.sendToAll([{ RemoveEntity: { entityId: entity.uuid } }]);\r\n            }\r\n        }\r\n        sendToAreaBut(x, y, dataChunks, connectionId, reliable = true) {\r\n            const connectionIds = [];\r\n            for (let e of this.connectedEntities.entities) {\r\n                const conn = e.getComponent(Connection_3.Connection);\r\n                // TODO area validations\r\n                if (conn.connectionId !== connectionId) {\r\n                    connectionIds.push(conn.connectionId);\r\n                }\r\n            }\r\n            for (let data of dataChunks) {\r\n                Connection_3.sendMessageObservable.notifyObservers({ connectionIds, data, reliable });\r\n            }\r\n        }\r\n        sendToArea(x, y, dataChunks, reliable = true) {\r\n            const connectionIds = [];\r\n            for (let e of this.connectedEntities.entities) {\r\n                // TODO area validations\r\n                connectionIds.push(e.getComponent(Connection_3.Connection).connectionId);\r\n            }\r\n            for (let data of dataChunks) {\r\n                Connection_3.sendMessageObservable.notifyObservers({ connectionIds, data, reliable });\r\n            }\r\n        }\r\n        sendToAll(dataChunks, reliable = true) {\r\n            const connectionIds = [];\r\n            for (let e of this.connectedEntities.entities) {\r\n                connectionIds.push(e.getComponent(Connection_3.Connection).connectionId);\r\n            }\r\n            for (let data of dataChunks) {\r\n                Connection_3.sendMessageObservable.notifyObservers({ connectionIds, data, reliable });\r\n            }\r\n        }\r\n    }\r\n    exports.GameMapSystem = GameMapSystem;\r\n});\r\ndefine(\"sdk/Systems/WalkingSystem\", [\"require\", \"exports\", \"sdk/Components/Connection\", \"sdk/Components/WorldPosition\", \"sdk/AtomicHelpers/HeadToPos\", \"sdk/Components/Walking\", \"sdk/Components/MapData\", \"sdk/AtomicHelpers/Numbers\", \"sdk/Components/Timers\", \"sdk/Components/Paralysis\", \"sdk/Enums\"], function (require, exports, Connection_4, WorldPosition_6, HeadToPos_2, Walking_4, MapData_2, Numbers_5, Timers_5, Paralysis_3, Enums_17) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class WalkingSystem {\r\n        constructor() { }\r\n        activate(engine) {\r\n            this.walkingEntitiesGroup = engine.getComponentGroup(WorldPosition_6.WorldPosition, Walking_4.Walking);\r\n            log(\"WalkingSystem started\");\r\n        }\r\n        update() {\r\n            for (let { entity, position, walking } of this.walkingEntities()) {\r\n                const timers = entity.getComponentOrNull(Timers_5.Timers);\r\n                let forceUpdate = false;\r\n                if (Paralysis_3.isParalyzed(entity)) {\r\n                    forceUpdate = true;\r\n                }\r\n                else {\r\n                    if (walking.target) {\r\n                        const newHeading = this.greedyWalkTo(position.x, position.y, walking.target.x, walking.target.y);\r\n                        if (newHeading !== null) {\r\n                            walking.heading = newHeading;\r\n                        }\r\n                    }\r\n                    if (this.canUserMove(position.x, position.y, walking.heading)) {\r\n                        let newPos = HeadToPos_2.headToPos(position.x, position.y, walking.heading);\r\n                        position.x = newPos.x;\r\n                        position.y = newPos.y;\r\n                        position.enqueueSendToAreaButMe({\r\n                            CharMove: {\r\n                                entityId: entity.uuid,\r\n                                x: position.x,\r\n                                y: position.y,\r\n                                heading: walking.heading,\r\n                            },\r\n                        });\r\n                        position.dirty = false;\r\n                    }\r\n                    else {\r\n                        forceUpdate = true;\r\n                    }\r\n                }\r\n                if (timers) {\r\n                    timers.canWalk(true);\r\n                }\r\n                if (forceUpdate && entity.hasComponent(Connection_4.Connection)) {\r\n                    position.enqueueSendToArea({\r\n                        UpdatePosition: {\r\n                            entityId: entity.uuid,\r\n                            x: position.x,\r\n                            y: position.y,\r\n                        },\r\n                    });\r\n                }\r\n                entity.removeComponent(Walking_4.Walking);\r\n            }\r\n        }\r\n        canUserMove(x, y, heading) {\r\n            const pos = HeadToPos_2.headToPos(x, y, heading);\r\n            const block = this.getBlock(pos.x, pos.y);\r\n            if (!block)\r\n                return false;\r\n            const blocked = block.blocked;\r\n            switch (heading) {\r\n                case Enums_17.Heading.North:\r\n                    return 0 === (blocked & 1) && this.canWalkToPosition(pos.x, pos.y);\r\n                case Enums_17.Heading.East:\r\n                    return 0 === (blocked & 2) && this.canWalkToPosition(pos.x, pos.y);\r\n                case Enums_17.Heading.South:\r\n                    return 0 === (blocked & 4) && this.canWalkToPosition(pos.x, pos.y);\r\n                case Enums_17.Heading.West:\r\n                    return 0 === (blocked & 8) && this.canWalkToPosition(pos.x, pos.y);\r\n            }\r\n            return true;\r\n        }\r\n        canWalkToPosition(x, y) {\r\n            for (let {} of WorldPosition_6.entitiesInPosition(x, y)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        getBlock(x, y) {\r\n            const map = engine.rootEntity.getComponent(MapData_2.MapData);\r\n            if (map) {\r\n                return map.getBlock(x, y);\r\n            }\r\n            return null;\r\n        }\r\n        *walkingEntities() {\r\n            for (let entity of this.walkingEntitiesGroup.entities.slice()) {\r\n                yield {\r\n                    entity,\r\n                    position: entity.getComponent(WorldPosition_6.WorldPosition),\r\n                    walking: entity.getComponent(Walking_4.Walking),\r\n                };\r\n            }\r\n        }\r\n        greedyWalkTo(srcX, srcY, dstX, dstY) {\r\n            const dual = Numbers_5.getRandomInteger(0, 10);\r\n            const directWalk = srcX == dstX && srcY == dstY ? false : Numbers_5.getRandomInteger(0, 4) != 0;\r\n            //  Levanto las coordenadas del destino\r\n            if (directWalk) {\r\n                //  moverse\r\n                if (srcX > dstX) {\r\n                    if (srcY < dstY) {\r\n                        //NPC esta arriba a la derecha\r\n                        if ((dual & 1) == 0) {\r\n                            //move down\r\n                            if (this.canUserMove(srcX, srcY, Enums_17.Heading.South)) {\r\n                                return Enums_17.Heading.South;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.West)) {\r\n                                return Enums_17.Heading.West;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.East)) {\r\n                                return Enums_17.Heading.East;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.North)) {\r\n                                return Enums_17.Heading.North;\r\n                            }\r\n                        }\r\n                        else {\r\n                            //random first move\r\n                            if (this.canUserMove(srcX, srcY, Enums_17.Heading.West)) {\r\n                                return Enums_17.Heading.West;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.South)) {\r\n                                return Enums_17.Heading.South;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.East)) {\r\n                                return Enums_17.Heading.East;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.North)) {\r\n                                return Enums_17.Heading.North;\r\n                            }\r\n                        } //checked random first move\r\n                    }\r\n                    else if (srcY > dstY) {\r\n                        //NPC esta abajo a la derecha\r\n                        if ((dual & 1) == 0) {\r\n                            //move up\r\n                            if (this.canUserMove(srcX, srcY, Enums_17.Heading.North)) {\r\n                                //U\r\n                                return Enums_17.Heading.North;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.West)) {\r\n                                //L\r\n                                return Enums_17.Heading.West;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.South)) {\r\n                                //D\r\n                                return Enums_17.Heading.South;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.East)) {\r\n                                //R\r\n                                return Enums_17.Heading.East;\r\n                            }\r\n                        }\r\n                        else {\r\n                            //random first move\r\n                            if (this.canUserMove(srcX, srcY, Enums_17.Heading.West)) {\r\n                                //L\r\n                                return Enums_17.Heading.West;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.South)) {\r\n                                //D\r\n                                return Enums_17.Heading.South;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.East)) {\r\n                                //R\r\n                                return Enums_17.Heading.East;\r\n                            }\r\n                        } //endif random first move\r\n                    }\r\n                    else {\r\n                        //x completitud, esta en la misma Y\r\n                        if (this.canUserMove(srcX, srcY, Enums_17.Heading.West)) {\r\n                            //L\r\n                            return Enums_17.Heading.West;\r\n                        }\r\n                        else if (this.canUserMove(srcX, srcY, Enums_17.Heading.South)) {\r\n                            //D\r\n                            return Enums_17.Heading.South;\r\n                        }\r\n                        else if (this.canUserMove(srcX, srcY, Enums_17.Heading.North)) {\r\n                            //U\r\n                            return Enums_17.Heading.North;\r\n                        }\r\n                    }\r\n                }\r\n                else if (srcX < dstX) {\r\n                    if (srcY < dstY) {\r\n                        //NPC esta arriba a la izquierda\r\n                        if ((dual & 1) == 0) {\r\n                            //move down\r\n                            if (this.canUserMove(srcX, srcY, Enums_17.Heading.South)) {\r\n                                //ABA\r\n                                return Enums_17.Heading.South;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.East)) {\r\n                                //R\r\n                                return Enums_17.Heading.East;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.West)) {\r\n                                return Enums_17.Heading.West;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.North)) {\r\n                                return Enums_17.Heading.North;\r\n                            }\r\n                        }\r\n                        else {\r\n                            //random first move\r\n                            if (this.canUserMove(srcX, srcY, Enums_17.Heading.East)) {\r\n                                //DER\r\n                                return Enums_17.Heading.East;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.South)) {\r\n                                //ABA\r\n                                return Enums_17.Heading.South;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.West)) {\r\n                                return Enums_17.Heading.West;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.North)) {\r\n                                return Enums_17.Heading.North;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (srcY > dstY) {\r\n                        //NPC esta abajo a la izquierda\r\n                        if ((dual & 1) == 0) {\r\n                            //move up\r\n                            if (this.canUserMove(srcX, srcY, Enums_17.Heading.North)) {\r\n                                //U\r\n                                return Enums_17.Heading.North;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.East)) {\r\n                                //R\r\n                                return Enums_17.Heading.East;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.West)) {\r\n                                //L\r\n                                return Enums_17.Heading.West;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.South)) {\r\n                                //D\r\n                                return Enums_17.Heading.South;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (this.canUserMove(srcX, srcY, Enums_17.Heading.East)) {\r\n                                //R\r\n                                return Enums_17.Heading.East;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.North)) {\r\n                                //U\r\n                                return Enums_17.Heading.North;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.South)) {\r\n                                //D\r\n                                return Enums_17.Heading.South;\r\n                            }\r\n                            else if (this.canUserMove(srcX, srcY, Enums_17.Heading.West)) {\r\n                                //L\r\n                                return Enums_17.Heading.West;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        //x completitud, esta en la misma Y\r\n                        if (this.canUserMove(srcX, srcY, Enums_17.Heading.East)) {\r\n                            //R\r\n                            return Enums_17.Heading.East;\r\n                        }\r\n                        else if (this.canUserMove(srcX, srcY, Enums_17.Heading.South)) {\r\n                            //D\r\n                            return Enums_17.Heading.South;\r\n                        }\r\n                        else if (this.canUserMove(srcX, srcY, Enums_17.Heading.North)) {\r\n                            //U\r\n                            return Enums_17.Heading.North;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    //igual X\r\n                    if (srcY > dstY) {\r\n                        //NPC ESTA ABAJO\r\n                        if (this.canUserMove(srcX, srcY, Enums_17.Heading.North)) {\r\n                            //U\r\n                            return Enums_17.Heading.North;\r\n                        }\r\n                        else if (this.canUserMove(srcX, srcY, Enums_17.Heading.East)) {\r\n                            //R\r\n                            return Enums_17.Heading.East;\r\n                        }\r\n                        else if (this.canUserMove(srcX, srcY, Enums_17.Heading.West)) {\r\n                            //L\r\n                            return Enums_17.Heading.West;\r\n                        }\r\n                    }\r\n                    else {\r\n                        //NPC ESTA ARRIBA\r\n                        if (this.canUserMove(srcX, srcY, Enums_17.Heading.South)) {\r\n                            //ABA\r\n                            return Enums_17.Heading.South;\r\n                        }\r\n                        else if (this.canUserMove(srcX, srcY, Enums_17.Heading.East)) {\r\n                            //R\r\n                            return Enums_17.Heading.East;\r\n                        }\r\n                        else if (this.canUserMove(srcX, srcY, Enums_17.Heading.West)) {\r\n                            //L\r\n                            return Enums_17.Heading.West;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            const randomDirection = Numbers_5.getRandomInteger(0, 3);\r\n            if (this.canUserMove(srcX, srcY, randomDirection)) {\r\n                return randomDirection;\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    exports.WalkingSystem = WalkingSystem;\r\n});\r\ndefine(\"sdk/Systems/Mimetism\", [\"require\", \"exports\", \"sdk/Components/Mimetism\", \"sdk/Components/Body\", \"sdk/Components/Character\"], function (require, exports, Mimetism_2, Body_5, Character_10) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class MimetismSystem {\r\n        constructor() {\r\n            this.onRemoveMimetizedEntity = (entity) => {\r\n                const body = entity.getComponent(Body_5.Body);\r\n                body.mimetism = null;\r\n                if (entity instanceof Character_10.Character) {\r\n                    entity.sendConsoleMessage(\"You recovered your original shape.\");\r\n                }\r\n            };\r\n        }\r\n        activate(engine) {\r\n            this.mimetizedCharacters = engine.getComponentGroup({\r\n                onRemoveEntity: this.onRemoveMimetizedEntity,\r\n            }, Body_5.Body, Mimetism_2.Mimetism);\r\n            log(\"InvisibleSystem started\");\r\n        }\r\n        update(dt) {\r\n            const entities = this.mimetizedCharacters.entities.slice();\r\n            for (let char of entities) {\r\n                const inv = char.getComponent(Mimetism_2.Mimetism);\r\n                inv.timer -= dt;\r\n                if (inv.timer <= 0) {\r\n                    char.removeComponent(Mimetism_2.Mimetism);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    exports.MimetismSystem = MimetismSystem;\r\n});\r\ndefine(\"sdk/Systems/Timers\", [\"require\", \"exports\", \"sdk/Components/Timers\"], function (require, exports, Timers_6) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class TimersSystem {\r\n        constructor() {\r\n            this.nowInMs = 0;\r\n        }\r\n        activate(engine) {\r\n            this.timers = engine.getComponentGroup(Timers_6.Timers);\r\n        }\r\n        update(dt) {\r\n            this.nowInMs += dt * 1000;\r\n            for (let char of this.timers.entities) {\r\n                char.getComponent(Timers_6.Timers).update(this.nowInMs);\r\n            }\r\n        }\r\n    }\r\n    exports.TimersSystem = TimersSystem;\r\n});\r\ndefine(\"arduz-sdk\", [\"require\", \"exports\", \"sdk/Systems/Connection\", \"sdk/Systems/Invisible\", \"sdk/Systems/Meditation\", \"sdk/Systems/Paralysis\", \"sdk/Systems/Inventory\", \"sdk/Systems/Combat\", \"sdk/Systems/Skill\", \"sdk/Systems/GameMap\", \"sdk/Components/Character\", \"sdk/Components/Connection\", \"sdk/Balance\", \"sdk/Systems/WalkingSystem\", \"sdk/Systems/Mimetism\", \"sdk/Systems/Timers\"], function (require, exports, Connection_5, Invisible_5, Meditation_8, Paralysis_4, Inventory_5, Combat_1, Skill_1, GameMap_1, Character_11, Connection_6, Balance_3, WalkingSystem_1, Mimetism_3, Timers_7) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    function startBaseSystems() {\r\n        engine.addSystem(new Invisible_5.InvisibleSystem());\r\n        engine.addSystem(new Mimetism_3.MimetismSystem());\r\n        engine.addSystem(new Meditation_8.MeditationSystem());\r\n        engine.addSystem(new Paralysis_4.ParalysisSystem());\r\n        engine.addSystem(new Timers_7.TimersSystem());\r\n        engine.addSystem(new Skill_1.SkillSystem());\r\n        engine.addSystem(new Inventory_5.InventorySystem());\r\n        engine.addSystem(new Combat_1.CombatSystem());\r\n        engine.addSystem(new WalkingSystem_1.WalkingSystem());\r\n    }\r\n    exports.startBaseSystems = startBaseSystems;\r\n    async function startServer(customServer) {\r\n        if (typeof callRpc !== \"undefined\") {\r\n            const environment = await new Promise((resolve_2, reject_2) => { require([\"@arduz/Environment\"], resolve_2, reject_2); });\r\n            const network = await new Promise((resolve_3, reject_3) => { require([\"@arduz/Connections\"], resolve_3, reject_3); });\r\n            const config = await environment.getConfiguration();\r\n            engine.addSystem(new Connection_5.ConnectionSystem(network));\r\n            network.onInitialize.add(($) => {\r\n                const char = new Character_11.Character();\r\n                char.addComponent(new Connection_6.Connection($.connectionId, $.nick));\r\n                char.position.x = 1;\r\n                char.position.y = 1;\r\n                char.body.nick = $.nick;\r\n                engine.addEntity(char);\r\n                Character_11.onNewCharacterObservable.notifyObservers(char);\r\n            });\r\n            const map = engine.addSystem(new GameMap_1.GameMapSystem(), Infinity);\r\n            await map.load(config.map);\r\n            await Balance_3.loadBalance();\r\n            await customServer();\r\n            await environment.startSignal();\r\n        }\r\n        else {\r\n            log(\"SKIPPING CONNECTION SYSTEM INITIALIZATION\");\r\n        }\r\n    }\r\n    exports.startServer = startServer;\r\n    if (typeof onUpdate === \"function\") {\r\n        onUpdate((dt) => engine.update(dt));\r\n    }\r\n    else {\r\n        error(\"No onUpdate function\");\r\n    }\r\n});\r\ndefine(\"sdk/Components/Teleport\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    let TeleportTo = class TeleportTo {\r\n    };\r\n    TeleportTo = __decorate([\r\n        Component('teleportTo')\r\n    ], TeleportTo);\r\n    exports.TeleportTo = TeleportTo;\r\n});\r\ndefine(\"sdk/Systems/TeleportSystem\", [\"require\", \"exports\", \"sdk/Components/WorldPosition\", \"sdk/Components/Teleport\", \"sdk/Components/Walking\"], function (require, exports, WorldPosition_7, Teleport_1, Walking_5) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class TeleportSystem {\r\n        constructor() { }\r\n        activate(engine) {\r\n            this.teleportingEntities = engine.getComponentGroup(WorldPosition_7.WorldPosition, Teleport_1.TeleportTo);\r\n            log(\"WalkingSystem started\");\r\n        }\r\n        update() {\r\n            for (let entity of this.teleportingEntities.entities.slice()) {\r\n                const teleportTo = entity.getComponentOrNull(Teleport_1.TeleportTo);\r\n                if (teleportTo) {\r\n                    // if the entity was walking cancel it\r\n                    entity.removeComponent(Walking_5.Walking);\r\n                    entity.removeComponent(Teleport_1.TeleportTo);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    exports.TeleportSystem = TeleportSystem;\r\n});\r\n//# sourceMappingURL=data:application/json;base64,"
  },
  {
    "path": "index.ts",
    "content": "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\ndefine(\"src/setupChar\", [\"require\", \"exports\", \"sdk/Balance\", \"sdk/Components/Archetype\", \"sdk/Enums\", \"sdk/AtomicHelpers/BodyHelpers\"], function (require, exports, Balance_1, Archetype_1, Enums_1, BodyHelpers_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    function setArchetypes(char, alignments) {\r\n        const arch = char.getComponentOrCreate(Archetype_1.Archetypes);\r\n        const nick = char.body.nick;\r\n        arch.alignments = alignments;\r\n        const hechizos = [\r\n            {\r\n                slot: Enums_1.SkillSlots.Spell1,\r\n                skill: Balance_1.skills.get(1),\r\n            },\r\n            {\r\n                slot: Enums_1.SkillSlots.Spell2,\r\n                skill: Balance_1.skills.get(2),\r\n            },\r\n            {\r\n                slot: Enums_1.SkillSlots.Spell3,\r\n                skill: Balance_1.skills.get(3),\r\n            },\r\n            {\r\n                slot: Enums_1.SkillSlots.Spell4,\r\n                skill: Balance_1.skills.get(41),\r\n            },\r\n            {\r\n                slot: Enums_1.SkillSlots.Spell5,\r\n                skill: Balance_1.skills.get(31),\r\n            },\r\n            {\r\n                slot: Enums_1.SkillSlots.Spell6,\r\n                skill: Balance_1.skills.get(14),\r\n            },\r\n            {\r\n                slot: Enums_1.SkillSlots.Spell7,\r\n                skill: Balance_1.skills.get(15),\r\n            },\r\n            {\r\n                slot: Enums_1.SkillSlots.Spell8,\r\n                skill: Balance_1.skills.get(23),\r\n            },\r\n            {\r\n                slot: Enums_1.SkillSlots.Spell9,\r\n                skill: Balance_1.skills.get(25),\r\n            },\r\n            {\r\n                slot: Enums_1.SkillSlots.Spell10,\r\n                skill: Balance_1.skills.get(24),\r\n            },\r\n            {\r\n                slot: Enums_1.SkillSlots.Spell11,\r\n                skill: Balance_1.skills.get(10),\r\n            },\r\n        ];\r\n        arch.setArchetype({\r\n            id: \"mg\",\r\n            charClass: Enums_1.CharClass.Mage,\r\n            race: Enums_1.Race.Human,\r\n            gender: Enums_1.Gender.Male,\r\n            head: BodyHelpers_1.getHead(Enums_1.Gender.Male, Enums_1.Race.Human),\r\n            body: 1,\r\n            nick,\r\n            minHp: 273,\r\n            maxHp: 273,\r\n            minMana: 2206,\r\n            maxMana: 2206,\r\n            inventory: [\r\n                { amount: 999999, item: Balance_1.items.get(38), slot: Enums_1.InventorySlots.Slot1 },\r\n                { amount: 999999, item: Balance_1.items.get(37), slot: Enums_1.InventorySlots.Slot2 },\r\n                { amount: 100, item: Balance_1.items.get(474), slot: Enums_1.InventorySlots.Slot3 },\r\n                { amount: 100, item: Balance_1.items.get(986), slot: Enums_1.InventorySlots.Slot4 },\r\n                { amount: 100, item: Balance_1.items.get(660), slot: Enums_1.InventorySlots.Slot5 },\r\n                { amount: 100, item: Balance_1.items.get(662), slot: Enums_1.InventorySlots.Slot6 },\r\n                { amount: 999999, item: Balance_1.items.get(38), slot: Enums_1.InventorySlots.Belt1 },\r\n                { amount: 999999, item: Balance_1.items.get(37), slot: Enums_1.InventorySlots.Belt2 },\r\n            ],\r\n            skills: hechizos,\r\n        });\r\n        arch.setArchetype({\r\n            id: \"dru\",\r\n            charClass: Enums_1.CharClass.Druid,\r\n            race: Enums_1.Race.Elf,\r\n            gender: Enums_1.Gender.Male,\r\n            head: BodyHelpers_1.getHead(Enums_1.Gender.Male, Enums_1.Race.Human),\r\n            body: 1,\r\n            nick,\r\n            minHp: 312,\r\n            maxHp: 312,\r\n            minMana: 1610,\r\n            maxMana: 1610,\r\n            inventory: [\r\n                { amount: 100, item: Balance_1.items.get(474), slot: 1 },\r\n                { amount: 100, item: Balance_1.items.get(986), slot: 2 },\r\n                { amount: 100, item: Balance_1.items.get(365), slot: 3 },\r\n                { amount: 100, item: Balance_1.items.get(208), slot: 4 },\r\n                { amount: 999999, item: Balance_1.items.get(38), slot: 6 },\r\n                { amount: 999999, item: Balance_1.items.get(37), slot: 7 },\r\n            ],\r\n            skills: hechizos,\r\n        });\r\n        arch.setArchetype({\r\n            id: \"bard\",\r\n            charClass: Enums_1.CharClass.Bard,\r\n            race: Enums_1.Race.Elf,\r\n            gender: Enums_1.Gender.Female,\r\n            head: BodyHelpers_1.getHead(Enums_1.Gender.Male, Enums_1.Race.Human),\r\n            body: 1,\r\n            nick,\r\n            minHp: 312,\r\n            maxHp: 312,\r\n            minMana: 1610,\r\n            maxMana: 1610,\r\n            inventory: [\r\n                { amount: 100, item: Balance_1.items.get(474), slot: 1 },\r\n                { amount: 100, item: Balance_1.items.get(986), slot: 2 },\r\n                { amount: 100, item: Balance_1.items.get(132), slot: 3 },\r\n                { amount: 100, item: Balance_1.items.get(404), slot: 4 },\r\n                { amount: 100, item: Balance_1.items.get(696), slot: 5 },\r\n                { amount: 999999, item: Balance_1.items.get(38), slot: 6 },\r\n                { amount: 999999, item: Balance_1.items.get(37), slot: 7 },\r\n                { amount: 100, item: Balance_1.items.get(399), slot: 11 },\r\n                { amount: 100, item: Balance_1.items.get(365), slot: 12 },\r\n            ],\r\n            skills: hechizos,\r\n        });\r\n        arch.setArchetype({\r\n            id: \"cleric\",\r\n            charClass: Enums_1.CharClass.Cleric,\r\n            race: Enums_1.Race.Drow,\r\n            gender: Enums_1.Gender.Female,\r\n            head: BodyHelpers_1.getHead(Enums_1.Gender.Male, Enums_1.Race.Human),\r\n            body: 1,\r\n            nick,\r\n            minHp: 312,\r\n            maxHp: 312,\r\n            minMana: 1610,\r\n            maxMana: 1610,\r\n            inventory: [\r\n                { amount: 100, item: Balance_1.items.get(474), slot: 1 },\r\n                { amount: 100, item: Balance_1.items.get(359), slot: 2 },\r\n                { amount: 100, item: Balance_1.items.get(128), slot: 3 },\r\n                { amount: 100, item: Balance_1.items.get(131), slot: 4 },\r\n                { amount: 100, item: Balance_1.items.get(696), slot: 5 },\r\n                { amount: 999999, item: Balance_1.items.get(38), slot: 6 },\r\n                { amount: 999999, item: Balance_1.items.get(37), slot: 7 },\r\n                { amount: 100, item: Balance_1.items.get(129), slot: 11 },\r\n                { amount: 100, item: Balance_1.items.get(365), slot: 12 },\r\n            ],\r\n            skills: hechizos,\r\n        });\r\n        arch.setArchetype({\r\n            id: \"pala\",\r\n            charClass: Enums_1.CharClass.Paladin,\r\n            race: Enums_1.Race.Human,\r\n            gender: Enums_1.Gender.Female,\r\n            head: BodyHelpers_1.getHead(Enums_1.Gender.Male, Enums_1.Race.Human),\r\n            body: 1,\r\n            nick,\r\n            minHp: 390,\r\n            maxHp: 390,\r\n            minMana: 702,\r\n            maxMana: 702,\r\n            inventory: [\r\n                { amount: 100, item: Balance_1.items.get(474), slot: 1 },\r\n                { amount: 100, item: Balance_1.items.get(195), slot: 2 },\r\n                { amount: 100, item: Balance_1.items.get(128), slot: 3 },\r\n                { amount: 100, item: Balance_1.items.get(131), slot: 4 },\r\n                { amount: 100, item: Balance_1.items.get(696), slot: 5 },\r\n                { amount: 999999, item: Balance_1.items.get(38), slot: 6 },\r\n                { amount: 999999, item: Balance_1.items.get(37), slot: 7 },\r\n                { amount: 100, item: Balance_1.items.get(129), slot: 11 },\r\n                { amount: 100, item: Balance_1.items.get(365), slot: 12 },\r\n            ],\r\n            skills: hechizos,\r\n        });\r\n        arch.setArchetype({\r\n            id: \"ase\",\r\n            charClass: Enums_1.CharClass.Assasin,\r\n            race: Enums_1.Race.Drow,\r\n            gender: Enums_1.Gender.Male,\r\n            head: BodyHelpers_1.getHead(Enums_1.Gender.Male, Enums_1.Race.Human),\r\n            body: 1,\r\n            nick,\r\n            minHp: 312,\r\n            maxHp: 312,\r\n            minMana: 830,\r\n            maxMana: 830,\r\n            inventory: [\r\n                { amount: 100, item: Balance_1.items.get(474), slot: 1 },\r\n                { amount: 100, item: Balance_1.items.get(356), slot: 2 },\r\n                { amount: 100, item: Balance_1.items.get(404), slot: 3 },\r\n                { amount: 100, item: Balance_1.items.get(131), slot: 4 },\r\n                { amount: 100, item: Balance_1.items.get(696), slot: 5 },\r\n                { amount: 999999, item: Balance_1.items.get(38), slot: 6 },\r\n                { amount: 999999, item: Balance_1.items.get(37), slot: 7 },\r\n                { amount: 100, item: Balance_1.items.get(399), slot: 11 },\r\n                { amount: 100, item: Balance_1.items.get(367), slot: 12 },\r\n            ],\r\n            skills: hechizos,\r\n        });\r\n        arch.setArchetype({\r\n            id: \"guerre\",\r\n            charClass: Enums_1.CharClass.Warrior,\r\n            race: Enums_1.Race.Dwarf,\r\n            gender: Enums_1.Gender.Male,\r\n            head: BodyHelpers_1.getHead(Enums_1.Gender.Male, Enums_1.Race.Human),\r\n            body: 1,\r\n            nick,\r\n            minHp: 429,\r\n            maxHp: 429,\r\n            minMana: 0,\r\n            maxMana: 0,\r\n            inventory: [\r\n                { amount: 100, item: Balance_1.items.get(474), slot: 1 },\r\n                { amount: 100, item: Balance_1.items.get(243), slot: 2 },\r\n                { amount: 100, item: Balance_1.items.get(128), slot: 3 },\r\n                { amount: 100, item: Balance_1.items.get(131), slot: 4 },\r\n                { amount: 100, item: Balance_1.items.get(696), slot: 5 },\r\n                { amount: 100, item: Balance_1.items.get(38), slot: 6 },\r\n                { amount: 100, item: Balance_1.items.get(479), slot: 7 },\r\n                { amount: 100, item: Balance_1.items.get(480), slot: 8 },\r\n                { amount: 100, item: Balance_1.items.get(129), slot: 11 },\r\n                { amount: 100, item: Balance_1.items.get(164), slot: 12 },\r\n            ],\r\n            skills: [],\r\n        });\r\n        arch.dirty = true;\r\n    }\r\n    exports.setArchetypes = setArchetypes;\r\n});\r\ndefine(\"src/AI/Base\", [\"require\", \"exports\", \"sdk/Components/Archetype\", \"sdk/Functions/Helpers\"], function (require, exports, Archetype_2, Helpers_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class AiStrategy {\r\n        start(entity) {\r\n            const archetype = this.archetype;\r\n            entity.getComponentOrCreate(Archetype_2.Archetypes).setArchetype(archetype);\r\n            Helpers_1.loadCharacterFromArchetype(entity, archetype.id);\r\n        }\r\n    }\r\n    exports.AiStrategy = AiStrategy;\r\n    let BaseAI = class BaseAI {\r\n        constructor(strategy) {\r\n            this.strategy = strategy;\r\n        }\r\n    };\r\n    BaseAI = __decorate([\r\n        Component(\"ai\")\r\n    ], BaseAI);\r\n    exports.BaseAI = BaseAI;\r\n    let TargetEntity = class TargetEntity {\r\n        constructor() {\r\n            this.entity = null;\r\n        }\r\n    };\r\n    TargetEntity = __decorate([\r\n        Component(\"targetEntity\")\r\n    ], TargetEntity);\r\n    exports.TargetEntity = TargetEntity;\r\n});\r\ndefine(\"src/Alignments\", [\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    let Alignment = class Alignment {\r\n        constructor(id, color, name) {\r\n            this.id = id;\r\n            this.color = color;\r\n            this.name = name;\r\n        }\r\n    };\r\n    Alignment = __decorate([\r\n        Component(\"alignment\")\r\n    ], Alignment);\r\n    exports.Alignment = Alignment;\r\n    exports.RED_TEAM = new Alignment(\"red\", \"#ff0000\", \"Chaotic\");\r\n    exports.BLUE_TEAM = new Alignment(\"blue\", \"#0000ff\", \"Lawful\");\r\n});\r\ndefine(\"src/AI/Mage\", [\"require\", \"exports\", \"sdk/Components/Character\", \"sdk/AtomicHelpers/Numbers\", \"sdk/Balance\", \"sdk/Components/Invisible\", \"src/AI/Base\", \"sdk/Components/WorldPosition\", \"sdk/Events/CharEvents\", \"sdk/Components/Paralysis\", \"sdk/Functions/networkHandlers\", \"sdk/Components/Walking\", \"src/Alignments\", \"sdk/Enums\", \"sdk/AtomicHelpers/BodyHelpers\"], function (require, exports, Character_1, Numbers_1, Balance_2, Invisible_1, Base_1, WorldPosition_1, CharEvents_1, Paralysis_1, networkHandlers_1, Walking_1, Alignments_1, Enums_2, BodyHelpers_2) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    const REMOVE_PARALYSIS_SLOT = Enums_2.SkillSlots.Spell3;\r\n    const DESC_SLOT = Enums_2.SkillSlots.Spell7;\r\n    const APOKA_SLOT = Enums_2.SkillSlots.Spell8;\r\n    const INMO_SLOT = Enums_2.SkillSlots.Spell2;\r\n    class MageAi extends Base_1.AiStrategy {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.nextTick = 0;\r\n        }\r\n        rollDice(faces) {\r\n            faces = faces | 0;\r\n            return Numbers_1.getRandomInteger(0, faces) == faces;\r\n        }\r\n        get archetype() {\r\n            const race = Enums_2.Race.Human;\r\n            const gender = Enums_2.Gender.Male;\r\n            return {\r\n                id: \"mg\",\r\n                charClass: Enums_2.CharClass.Mage,\r\n                race: Enums_2.Race.Human,\r\n                gender: Enums_2.Gender.Male,\r\n                minHp: 273,\r\n                maxHp: 273,\r\n                minMana: 2206,\r\n                maxMana: 2206,\r\n                inventory: [\r\n                    { amount: 999999, item: Balance_2.items.get(38), slot: Enums_2.InventorySlots.Slot1 },\r\n                    { amount: 999999, item: Balance_2.items.get(37), slot: Enums_2.InventorySlots.Slot2 },\r\n                    { amount: 100, item: Balance_2.items.get(474), slot: Enums_2.InventorySlots.Slot3 },\r\n                    { amount: 100, item: Balance_2.items.get(986), slot: Enums_2.InventorySlots.Slot4 },\r\n                    { amount: 100, item: Balance_2.items.get(660), slot: Enums_2.InventorySlots.Slot5 },\r\n                    { amount: 100, item: Balance_2.items.get(662), slot: Enums_2.InventorySlots.Slot6 },\r\n                    { amount: 999999, item: Balance_2.items.get(38), slot: Enums_2.InventorySlots.Belt1 },\r\n                    { amount: 999999, item: Balance_2.items.get(37), slot: Enums_2.InventorySlots.Belt2 },\r\n                ],\r\n                skills: [\r\n                    {\r\n                        slot: Enums_2.SkillSlots.Spell1,\r\n                        skill: Balance_2.skills.get(5),\r\n                    },\r\n                    {\r\n                        slot: INMO_SLOT,\r\n                        skill: Balance_2.skills.get(24),\r\n                    },\r\n                    {\r\n                        slot: REMOVE_PARALYSIS_SLOT,\r\n                        skill: Balance_2.skills.get(10),\r\n                    },\r\n                    {\r\n                        slot: Enums_2.SkillSlots.Spell4,\r\n                        skill: Balance_2.skills.get(11),\r\n                    },\r\n                    {\r\n                        slot: Enums_2.SkillSlots.Spell5,\r\n                        skill: Balance_2.skills.get(14),\r\n                    },\r\n                    {\r\n                        slot: Enums_2.SkillSlots.Spell6,\r\n                        skill: Balance_2.skills.get(15),\r\n                    },\r\n                    {\r\n                        slot: DESC_SLOT,\r\n                        skill: Balance_2.skills.get(23),\r\n                    },\r\n                    {\r\n                        slot: APOKA_SLOT,\r\n                        skill: Balance_2.skills.get(25),\r\n                    },\r\n                ],\r\n                nick: \"Mage BOT\",\r\n                body: BodyHelpers_2.getNakedBody(gender, race),\r\n                head: BodyHelpers_2.getHead(gender, race),\r\n            };\r\n        }\r\n        statsTick(char) {\r\n            if (char instanceof Character_1.Character) {\r\n                const chancesOfDrinkingPosion = Paralysis_1.isParalyzed(char) ? 0 : 3;\r\n                if (!char.timers.canUseItem(false)) {\r\n                    return;\r\n                }\r\n                if (this.rollDice(chancesOfDrinkingPosion)) {\r\n                    if (char.stats.minHp < char.stats.maxHp) {\r\n                        // restore HP is the priority\r\n                        CharEvents_1.charUsesItem(char, Enums_2.InventorySlots.Belt1);\r\n                    }\r\n                    else if (char.stats.minMana < char.stats.maxMana) {\r\n                        // restore MANA when possible\r\n                        CharEvents_1.charUsesItem(char, Enums_2.InventorySlots.Belt2);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        acquireTarget(entity) {\r\n            let bestTarget = null;\r\n            let bestTargetDistance = 9999999;\r\n            const entityAlignment = entity.getComponentOrNull(Alignments_1.Alignment);\r\n            const entityPosition = entity.getComponent(WorldPosition_1.WorldPosition);\r\n            if (!entityAlignment)\r\n                return;\r\n            for (let char of WorldPosition_1.entitiesWithBodyAndPosition()) {\r\n                if (char instanceof Character_1.Character) {\r\n                    if (char == entity)\r\n                        continue;\r\n                    if (char.body.dead)\r\n                        continue;\r\n                    const alignment = char.getComponentOrNull(Alignments_1.Alignment);\r\n                    if (!alignment || alignment == entityAlignment) {\r\n                        continue;\r\n                    }\r\n                    if (Invisible_1.isInvisible(char))\r\n                        continue;\r\n                    const position = char.getComponent(WorldPosition_1.WorldPosition);\r\n                    const dist = Numbers_1.distance(entityPosition.x, entityPosition.y, position.x, position.y);\r\n                    // pick closest character\r\n                    if (!bestTarget || bestTargetDistance > dist) {\r\n                        bestTarget = char;\r\n                        bestTargetDistance = dist;\r\n                        if (dist <= 3)\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (bestTarget) {\r\n                entity.getComponentOrCreate(Base_1.TargetEntity).entity = bestTarget;\r\n            }\r\n        }\r\n        tick(me, now) {\r\n            if (!(me instanceof Character_1.Character))\r\n                return;\r\n            if (this.nextTick > now)\r\n                return;\r\n            this.nextTick = now + 0.05 + 0.13 * Math.random();\r\n            if (me.body.dead) {\r\n                if (this.rollDice(12)) {\r\n                    networkHandlers_1.handleWalk(me, Numbers_1.getRandomInteger(0, 3));\r\n                }\r\n                return;\r\n            }\r\n            this.statsTick(me);\r\n            const skills = me.skills;\r\n            const timers = me.timers;\r\n            if (!skills)\r\n                return;\r\n            let target = me.getComponentOrNull(Base_1.TargetEntity);\r\n            if (target && target.entity) {\r\n                if (Invisible_1.isInvisible(target.entity) ||\r\n                    (target.entity instanceof Character_1.Character && target.entity.body.dead)) {\r\n                    target.entity = null;\r\n                }\r\n            }\r\n            if (!target || !target.entity || this.rollDice(1)) {\r\n                this.acquireTarget(me);\r\n            }\r\n            target = me.getComponentOrNull(Base_1.TargetEntity);\r\n            const targetChar = target && target.entity instanceof Character_1.Character && target.entity;\r\n            if (Paralysis_1.isParalyzed(me)) {\r\n                // cast remove paralysis spell\r\n                if (timers.canSpell(false)) {\r\n                    if (this.rollDice(6)) {\r\n                        networkHandlers_1.handleUseSkill(me, REMOVE_PARALYSIS_SLOT);\r\n                        networkHandlers_1.handleMapClick(me, me.position.x, me.position.y);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            else if (targetChar && !targetChar.body.dead) {\r\n                const attackDistance = 100;\r\n                if (timers.canSpell(false)) {\r\n                    const isTargetParalyzed = Paralysis_1.isParalyzed(targetChar);\r\n                    const baseRandom = 2;\r\n                    const dist = Numbers_1.distance(me.position.x, me.position.y, targetChar.position.x, targetChar.position.y);\r\n                    const distanceDifficulty = 4 * (dist / attackDistance);\r\n                    const multiplier = isTargetParalyzed ? 0 : (2 + distanceDifficulty) | 0;\r\n                    if (dist > attackDistance) {\r\n                        // do nothing, we are far away\r\n                    }\r\n                    else if (!this.rollDice(multiplier)) {\r\n                        // do nothing, we missed\r\n                        timers.canSpell(true);\r\n                    }\r\n                    else {\r\n                        this.attack(me, targetChar, baseRandom * multiplier + 2);\r\n                    }\r\n                }\r\n            }\r\n            if (timers.canWalk()) {\r\n                if (targetChar) {\r\n                    me.getComponentOrCreate(Walking_1.Walking).target = targetChar.position;\r\n                }\r\n                else {\r\n                    if (this.rollDice(3)) {\r\n                        networkHandlers_1.handleWalk(me, Numbers_1.getRandomInteger(0, 3));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        attack(me, targetChar, baseChances) {\r\n            const skills = me.skills;\r\n            if (!Paralysis_1.isParalyzed(targetChar) &&\r\n                this.rollDice(baseChances) &&\r\n                (targetChar.body.charClass === Enums_2.CharClass.Warrior ||\r\n                    targetChar.body.charClass === Enums_2.CharClass.Hunter ||\r\n                    this.rollDice(baseChances)) &&\r\n                skills.enoughManaFor(INMO_SLOT, me.stats)) {\r\n                networkHandlers_1.handleUseSkill(me, INMO_SLOT);\r\n                networkHandlers_1.handleMapClick(me, targetChar.position.x, targetChar.position.y);\r\n            }\r\n            else if (skills.enoughManaFor(APOKA_SLOT, me.stats)) {\r\n                networkHandlers_1.handleUseSkill(me, APOKA_SLOT);\r\n                networkHandlers_1.handleMapClick(me, targetChar.position.x, targetChar.position.y);\r\n            }\r\n            else if (skills.enoughManaFor(DESC_SLOT, me.stats)) {\r\n                networkHandlers_1.handleUseSkill(me, DESC_SLOT);\r\n                networkHandlers_1.handleMapClick(me, targetChar.position.x, targetChar.position.y);\r\n            }\r\n        }\r\n    }\r\n    exports.MageAi = MageAi;\r\n});\r\ndefine(\"src/Rounds\", [\"require\", \"exports\", \"sdk/Components/Character\", \"sdk/Components/MapData\", \"sdk/Components/WorldPosition\", \"src/AI/Base\", \"src/AI/Mage\", \"src/Alignments\", \"sdk/Components/AutomaticEquip\", \"sdk/Enums\"], function (require, exports, Character_2, MapData_1, WorldPosition_2, Base_2, Mage_1, Alignments_2, AutomaticEquip_1, Enums_3) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class TeamRoundsSystem {\r\n        constructor() {\r\n            this.timeCounter = 0;\r\n        }\r\n        activate(engine) {\r\n            this.alignedEntities = engine.getComponentGroup(Alignments_2.Alignment);\r\n        }\r\n        update(dt) {\r\n            this.timeCounter += dt;\r\n            if (this.timeCounter < 4)\r\n                return;\r\n            this.timeCounter = 0;\r\n            if (this.alignedEntities.entities.length) {\r\n                this.checkRound();\r\n            }\r\n        }\r\n        *users() {\r\n            for (let char of this.alignedEntities.entities) {\r\n                if (char instanceof Character_2.Character && char.connection) {\r\n                    yield { char, alignment: char.getComponent(Alignments_2.Alignment) };\r\n                }\r\n            }\r\n        }\r\n        *bots() {\r\n            for (let char of this.alignedEntities.entities) {\r\n                if (char instanceof Character_2.Character && !char.connection) {\r\n                    yield { char, alignment: char.getComponent(Alignments_2.Alignment) };\r\n                }\r\n            }\r\n        }\r\n        usersAlive(alignment) {\r\n            let i = 0;\r\n            for (let user of this.users()) {\r\n                if (user.alignment === alignment && !user.char.body.dead)\r\n                    i++;\r\n            }\r\n            return i;\r\n        }\r\n        usersTotal(alignment) {\r\n            let i = 0;\r\n            for (let user of this.users()) {\r\n                if (user.alignment === alignment)\r\n                    i++;\r\n            }\r\n            return i;\r\n        }\r\n        aliveNpcs(alignment) {\r\n            let i = 0;\r\n            for (let bot of this.bots()) {\r\n                if (bot.alignment === alignment && !bot.char.body.dead)\r\n                    i++;\r\n            }\r\n            return i;\r\n        }\r\n        botsTotal(alignment) {\r\n            let i = 0;\r\n            for (let user of this.bots()) {\r\n                if (user.alignment === alignment)\r\n                    i++;\r\n            }\r\n            return i;\r\n        }\r\n        checkRound() {\r\n            let someTeamIsDead = null;\r\n            const aliveRed = this.usersAlive(Alignments_2.RED_TEAM);\r\n            const aliveBlue = this.usersAlive(Alignments_2.BLUE_TEAM);\r\n            const totalRed = this.usersTotal(Alignments_2.RED_TEAM);\r\n            const totalBlue = this.usersTotal(Alignments_2.BLUE_TEAM);\r\n            if ((totalRed && !aliveRed) || (!aliveRed && !this.aliveNpcs(Alignments_2.RED_TEAM))) {\r\n                someTeamIsDead = Alignments_2.RED_TEAM.id;\r\n            }\r\n            if ((totalBlue && !aliveBlue) || (!aliveBlue && !this.aliveNpcs(Alignments_2.BLUE_TEAM))) {\r\n                someTeamIsDead = Alignments_2.BLUE_TEAM.id;\r\n            }\r\n            if (!someTeamIsDead)\r\n                return;\r\n            for (let { char } of this.users()) {\r\n                char.sendConsoleMessage(\"The \" + someTeamIsDead + \" team looses this round!\");\r\n                char.sendConsoleMessage(Enums_3.ConsoleMessages[\"Restarting round\"]);\r\n                this.goToBase(char);\r\n                char.resucitate(true);\r\n                char.getComponentOrCreate(AutomaticEquip_1.AutomaticEquip);\r\n            }\r\n            this.balanceBots();\r\n            for (let { char } of this.bots()) {\r\n                this.goToBase(char);\r\n                char.resucitate(true);\r\n                char.getComponentOrCreate(AutomaticEquip_1.AutomaticEquip);\r\n            }\r\n        }\r\n        balanceBots() {\r\n            const TEAM_SIZE = 2;\r\n            const blueUsers = this.usersTotal(Alignments_2.BLUE_TEAM);\r\n            const redUsers = this.usersTotal(Alignments_2.RED_TEAM);\r\n            let expectedRedBots = 0;\r\n            let expectedBlueBots = 0;\r\n            expectedRedBots = Math.max(0, TEAM_SIZE - redUsers);\r\n            expectedBlueBots = Math.max(0, TEAM_SIZE - blueUsers);\r\n            let didChange = false;\r\n            let blueBots = this.botsTotal(Alignments_2.BLUE_TEAM);\r\n            let redBots = this.botsTotal(Alignments_2.RED_TEAM);\r\n            while (blueBots > expectedBlueBots) {\r\n                this.removeAlignedBot(Alignments_2.BLUE_TEAM);\r\n                didChange = true;\r\n                blueBots--;\r\n            }\r\n            while (redBots > expectedRedBots) {\r\n                this.removeAlignedBot(Alignments_2.RED_TEAM);\r\n                didChange = true;\r\n                redBots--;\r\n            }\r\n            while (blueBots < expectedBlueBots) {\r\n                this.addBot(Alignments_2.BLUE_TEAM);\r\n                didChange = true;\r\n                blueBots++;\r\n            }\r\n            while (redBots < expectedRedBots) {\r\n                this.addBot(Alignments_2.RED_TEAM);\r\n                didChange = true;\r\n                redBots++;\r\n            }\r\n            return didChange;\r\n        }\r\n        addBot(alignment) {\r\n            const mage = new Character_2.Character();\r\n            mage.position.x = 2;\r\n            mage.position.y = 3;\r\n            mage.addComponentOrReplace(alignment);\r\n            mage.addComponent(new Base_2.BaseAI(new Mage_1.MageAi())).strategy.start(mage);\r\n            mage.body.nick = \"bot\";\r\n            mage.body.color = alignment.color;\r\n            engine.addEntity(mage);\r\n        }\r\n        removeAlignedBot(alignment) {\r\n            for (let bot of this.bots()) {\r\n                if (bot.alignment === alignment) {\r\n                    engine.removeEntity(bot.char);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        goToBase(entity) {\r\n            const alignment = entity.getComponentOrNull(Alignments_2.Alignment);\r\n            const worldPosition = entity.getComponentOrCreate(WorldPosition_2.WorldPosition);\r\n            const map = engine.rootEntity.getComponent(MapData_1.MapData);\r\n            const position = alignment == Alignments_2.RED_TEAM ? map.findReverseWalkableTile().next() : map.findWalkableTile().next();\r\n            if (position.value) {\r\n                worldPosition.x = position.value.x;\r\n                worldPosition.y = position.value.y;\r\n            }\r\n        }\r\n    }\r\n    exports.TeamRoundsSystem = TeamRoundsSystem;\r\n});\r\ndefine(\"src/AI\", [\"require\", \"exports\", \"src/AI/Base\"], function (require, exports, Base_3) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class AISystem {\r\n        constructor() {\r\n            this.currentTime = 0;\r\n        }\r\n        activate(engine) {\r\n            this.bots = engine.getComponentGroup(Base_3.BaseAI);\r\n        }\r\n        update(dt) {\r\n            this.currentTime += dt;\r\n            for (let entity of this.bots.entities) {\r\n                const ai = entity.getComponentOrNull(Base_3.BaseAI);\r\n                if (ai) {\r\n                    ai.strategy.tick(entity, this.currentTime);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    exports.AISystem = AISystem;\r\n});\r\ndefine(\"src/Arduz\", [\"require\", \"exports\", \"sdk/Components/Character\", \"src/setupChar\", \"sdk/Components/Connection\", \"sdk/Functions/Helpers\", \"src/Rounds\", \"src/AI\", \"src/Alignments\"], function (require, exports, Character_3, setupChar_1, Connection_1, Helpers_2, Rounds_1, AI_1, Alignments_3) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    async function startTeamsMode() {\r\n        Character_3.onNewCharacterObservable.add((char) => {\r\n            setupChar(char);\r\n            Connection_1.sendMessageObservable.notifyObservers({\r\n                connectionIds: [char.connection.connectionId],\r\n                data: {\r\n                    ConsoleMessage: {\r\n                        message: \"Welcome to the TEAM mode game server, please chose a team\",\r\n                        color: 0x00ff00,\r\n                    },\r\n                    SelectCharacter: {},\r\n                },\r\n            });\r\n        });\r\n        Connection_1.onDisconnection.add(({ entity }) => {\r\n            engine.removeEntity(entity);\r\n        });\r\n        Connection_1.onMessageObservable.add(({ entity, data }) => {\r\n            if (data.RequestCharacterList) {\r\n                Connection_1.sendMessageObservable.notifyObservers({\r\n                    connectionIds: [data.RequestCharacterList.connectionId],\r\n                    data: { SelectCharacter: {} },\r\n                });\r\n            }\r\n            if (data.SelectCharacter) {\r\n                if (entity instanceof Character_3.Character) {\r\n                    Helpers_2.loadCharacterFromArchetype(entity, data.SelectCharacter.id);\r\n                    if (data.SelectCharacter.alignment == Alignments_3.RED_TEAM.id) {\r\n                        entity.addComponentOrReplace(Alignments_3.RED_TEAM);\r\n                        entity.body.color = Alignments_3.RED_TEAM.color;\r\n                    }\r\n                    else if (data.SelectCharacter.alignment == Alignments_3.BLUE_TEAM.id) {\r\n                        entity.addComponentOrReplace(Alignments_3.BLUE_TEAM);\r\n                        entity.body.color = Alignments_3.BLUE_TEAM.color;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        engine.addSystem(new Rounds_1.TeamRoundsSystem());\r\n        engine.addSystem(new AI_1.AISystem());\r\n    }\r\n    exports.startTeamsMode = startTeamsMode;\r\n    function setupChar(char) {\r\n        // load base archetypes\r\n        setupChar_1.setArchetypes(char, [Alignments_3.RED_TEAM, Alignments_3.BLUE_TEAM]);\r\n    }\r\n});\r\ndefine(\"index\", [\"require\", \"exports\", \"src/Arduz\", \"arduz-sdk\"], function (require, exports, Arduz_1, arduz_sdk_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    arduz_sdk_1.startServer(async () => {\r\n        await arduz_sdk_1.startBaseSystems();\r\n        await Arduz_1.startTeamsMode();\r\n        log('hia');\r\n    });\r\n});\r\n//# sourceMappingURL=data:application/json;base64,"
  }
]